{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/NX/App.js","src/NX/NX.js","src/NX/UILoader.js","src/NX/UIMediator.js","src/UX/AnchorPane.js","src/UX/Button.js","src/UX/Checkbox.js","src/UX/Combobox.js","src/UX/Container.js","src/UX/HBox.js","src/UX/ImageView.js","src/UX/Label.js","src/UX/Labeled.js","src/UX/ListView.js","src/UX/Listbox.js","src/UX/Node.js","src/UX/PasswordField.js","src/UX/ProgressBar.js","src/UX/SelectControl.js","src/UX/TextArea.js","src/UX/TextField.js","src/UX/TextInputControl.js","src/UX/ToggleButton.js","src/UX/UX.js","src/UX/VBox.js","src/UX/paint/Font.js","src/UX/util/Utils.js","src/lib.js"],"names":[],"mappings":"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","file":"dnext-engine.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","class App {\r\n  constructor() {\r\n    this._callbacks = {};\r\n  }\r\n\r\n  /**\r\n   * @param {string} message\r\n   */\r\n  log(message) {\r\n    console.log(message);\r\n  }\r\n\r\n  launch() {\r\n    this.socket = new WebSocket(\"/dnext/ws/\");\r\n\r\n    this.socket.onmessage = function (event) {\r\n      const data = JSON.parse(event.data);\r\n\r\n      if (data.id && data.message) {\r\n        const callback = this._callbacks[data.id];\r\n\r\n        if (callback) {\r\n          callback(data);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  send(message, data, callback) {\r\n    data.message = message;\r\n    data.id = Math.random().toString(36).substring(7);\r\n\r\n    if (callback) {\r\n      this._callbacks[data.id] = callback;\r\n    }\r\n\r\n    this.socket.send(JSON.stringify(data));\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import App from './App';\r\nimport UILoader from './UILoader';\r\nimport UIMediator from \"./UIMediator\";\r\n\r\n\r\nexport default {\r\n  App, UILoader, UIMediator\r\n}\r\n","import Node from './../UX/Node';\r\nimport Container from './../UX/Container';\r\nimport UX from './../UX/UX';\r\n\r\nclass UILoader {\r\n\r\n  linkToMediator(node, data, uiMediator) {\r\n    if (uiMediator !== undefined) {\r\n      node.connectToMediator(uiMediator);\r\n\r\n      const watchedEvents = data['_watchedEvents'];\r\n      if (watchedEvents !== undefined) {\r\n        for (let watchedEvent of watchedEvents) {\r\n\r\n          node.on(watchedEvent, (e) => {\r\n            uiMediator.triggerEvent(node, watchedEvent, e);\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param object\r\n   * @param {UIMediator} uiMediator\r\n   * @returns {Node}\r\n   */\r\n  load(object, uiMediator) {\r\n    if (object && typeof object === \"object\") {\r\n      const type = object['_'];\r\n\r\n      if (!type) {\r\n        throw new Error(\"Type is not defined in '_' property!\");\r\n      }\r\n\r\n      const cls = UX[type];\r\n\r\n      if (!cls) {\r\n        throw new Error(`Type '${type}' is not defined`);\r\n      }\r\n\r\n      const node = new cls();\r\n\r\n      if (node instanceof Node) {\r\n        if (node instanceof Container && jQuery.isArray(object['_content'])) {\r\n          const children = object['_content'];\r\n\r\n          for (let i = 0; i < children.length; i++) {\r\n            const child = this.load(children[i], uiMediator);\r\n            node.add(child);\r\n          }\r\n        }\r\n\r\n        node.loadSchema(object);\r\n        this.linkToMediator(node, object, uiMediator);\r\n        return node;\r\n      } else {\r\n        throw new Error(`Type '${type}' is not UI component class`);\r\n      }\r\n    }\r\n  }\r\n\r\n    /**\r\n     * @param {string} jsonString\r\n     * @param {UIMediator} uiMediator\r\n     * @returns {Node}\r\n     */\r\n  loadFromJson(jsonString, uiMediator) {\r\n    return this.load(JSON.parse(jsonString), uiMediator);\r\n  }\r\n\r\n    /**\r\n     *\r\n     * @param {string} urlToJson\r\n     * @param {UIMediator} uiMediator\r\n     * @param {function} callback\r\n     */\r\n  loadFromUrl(urlToJson, uiMediator, callback) {\r\n    jQuery.getJSON(urlToJson, (data) => {\r\n        callback(this.load(data, uiMediator));\r\n    });\r\n  }\r\n}\r\n\r\nexport default UILoader;\r\n","\r\n\r\nimport Container from \"../UX/Container\";\r\n\r\nclass UIMediator\r\n{\r\n  /**\r\n   * @param {Node} node\r\n   */\r\n  constructor() {\r\n    this._callbacks = [];\r\n  }\r\n\r\n  /**\r\n   * @param {Node} node\r\n   * @param wsUrl\r\n   * @param sessionId\r\n   */\r\n  startWatching(node, wsUrl, sessionId) {\r\n    this.node = node;\r\n    this.sessionId = sessionId;\r\n\r\n    const loc = window.location;\r\n    let newUri = '';\r\n\r\n    if (loc.protocol === \"https:\") {\r\n      newUri = \"wss:\";\r\n    } else {\r\n      newUri = \"ws:\";\r\n    }\r\n\r\n    newUri += \"//\" + loc.host;\r\n    newUri += wsUrl;\r\n\r\n    this.ws = new WebSocket(newUri);\r\n\r\n    this.ws.onopen = () => {\r\n      this.send('initialize', {sessionId});\r\n    };\r\n\r\n    this.ws.onmessage = (event) => {\r\n      const message = JSON.parse(event.data);\r\n      const type = message.type;\r\n\r\n      switch (type) {\r\n        case \"ui-alert\":\r\n          this.triggerAlert(message);\r\n          break;\r\n\r\n        case \"ui-set-property\":\r\n          this.triggerSetProperty(message);\r\n          break;\r\n\r\n        case \"ui-call-method\":\r\n          this.triggerCallMethod(message);\r\n          break;\r\n\r\n        case \"ui-event-link\":\r\n          this.triggerOnEventLink(message);\r\n          break;\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @param node\r\n   * @param data\r\n   */\r\n  sendUserInput(node, data) {\r\n    this.sendIfCan('ui-user-input', {\r\n      'uuid': node.uuid,\r\n      'data': data\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param type\r\n   * @param message\r\n   * @param callback\r\n   * @returns {boolean}\r\n   */\r\n  sendIfCan(type, message, callback) {\r\n    if (this.ws !== undefined) {\r\n      this.send(type, message, callback);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param type\r\n   * @param message\r\n   * @param callback\r\n   */\r\n  send(type, message, callback) {\r\n    if (this.ws === undefined) {\r\n      throw \"Mediator is not in watching state.\";\r\n    }\r\n\r\n    message.type = type;\r\n    message.id = Math.random().toString(36).substring(7);\r\n    message.sessionId = this.sessionId;\r\n\r\n    if (callback) {\r\n      this._callbacks[message.id] = callback;\r\n    }\r\n\r\n    console.info(\"UIMediator.send\", message);\r\n\r\n    this.ws.send(JSON.stringify(message));\r\n  }\r\n\r\n  findNodeByUuid(uuid, node) {\r\n    if (uuid === node.uuid) {\r\n      return node;\r\n    }\r\n\r\n    if (node instanceof Container) {\r\n      let children = node.children();\r\n\r\n      for (let i = 0; i < children.length; i++) {\r\n        const found = this.findNodeByUuid(uuid, children[i]);\r\n\r\n        if (found !== null) {\r\n          return found;\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  triggerEvent(node, event, e) {\r\n    const data = {\r\n      type: e.type,\r\n      which: e.which,\r\n      result: e.result,\r\n      namespace: e.namespace,\r\n      position: [e.pageX, e.pageY]\r\n    };\r\n\r\n    this.sendIfCan('ui-trigger', {\r\n      uuid: node.uuid,\r\n      event: event,\r\n      data: data,\r\n    });\r\n  }\r\n\r\n  triggerAlert(message) {\r\n    const text = message['text'];\r\n    alert(text);\r\n  }\r\n\r\n  triggerCallMethod(message) {\r\n    const uuid = message['uuid'];\r\n    const method = message['method'];\r\n    const args = message['args'] || [];\r\n\r\n    const node = this.findNodeByUuid(uuid, this.node);\r\n\r\n    if (node !== null) {\r\n      node[method].apply(node, args);\r\n    } else {\r\n      console.warn(`Failed to set property, node with uuid = ${uuid} is not found`);\r\n    }\r\n  }\r\n\r\n  triggerSetProperty(message) {\r\n    const uuid = message['uuid'];\r\n    const property = message['property'];\r\n    const value = message['value'];\r\n\r\n    const node = this.findNodeByUuid(uuid, this.node);\r\n\r\n    if (node !== null) {\r\n      node[property] = value;\r\n    } else {\r\n      console.warn(`Failed to set property, node with uuid = ${uuid} is not found`);\r\n    }\r\n  }\r\n\r\n  triggerOnEventLink(message) {\r\n    const uuid = message['uuid'];\r\n    const event = message['event'];\r\n\r\n    const node = this.findNodeByUuid(uuid, this.node);\r\n\r\n    if (node !== null) {\r\n      node.off(event);\r\n\r\n      node.on(event, (e) => {\r\n        this.triggerEvent(node, event, e);\r\n      })\r\n    } else {\r\n      console.warn(`Failed to link event ${event}, node with uuid = ${uuid} is not found`);\r\n    }\r\n  }\r\n}\r\n\r\nexport default UIMediator;","import Container from './Container';\r\n\r\nclass AnchorPane extends Container {\r\n  createDom() {\r\n    const dom = super.createDom();\r\n    dom.addClass('ux-anchor-pane');\r\n    return dom;\r\n  }\r\n\r\n  createSlotDom(object) {\r\n    object.dom.css('position', 'absolute');\r\n    return object.dom;\r\n  }\r\n\r\n  childToBack(object) {\r\n    const dom = object.dom;\r\n    dom.detach();\r\n\r\n    this.dom.prepend(dom);\r\n  }\r\n\r\n  childToFront(object) {\r\n    const dom = object.dom;\r\n    dom.detach();\r\n    this.dom.append(dom);\r\n  }\r\n}\r\n\r\nexport default AnchorPane;\r\n","import Labeled from './Labeled';\r\n\r\nclass Button extends Labeled {\r\n    get kind() {\r\n      const dom = this.dom;\r\n\r\n      if (dom.hasClass('btn-primary')) {\r\n        return 'primary';\r\n      } else if (dom.hasClass('btn-success')) {\r\n        return 'success';\r\n      } else if (dom.hasClass('btn-info')) {\r\n        return 'info';\r\n      } else if (dom.hasClass('btn-warning')) {\r\n        return 'warning';\r\n      } else if (dom.hasClass('btn-danger')) {\r\n        return 'danger';\r\n      } else if (dom.hasClass('btn-link')) {\r\n        return 'link';\r\n      }\r\n\r\n      return 'default';\r\n    }\r\n\r\n    set kind(value) {\r\n      this.dom.removeClass(`btn-${this.kind}`);\r\n      this.dom.addClass(`btn-${value}`);\r\n    }\r\n\r\n    createDom() {\r\n        const dom = jQuery('<button><span class=\"ux-labeled-text\"></span></button>');\r\n        dom.addClass('ux-labeled');\r\n        dom.addClass('ux-button');\r\n\r\n        dom.addClass('btn');\r\n        dom.addClass('btn-default');\r\n\r\n        return dom;\r\n    }\r\n}\r\n\r\nexport default Button;\r\n","import Labeled from './Labeled';\r\n\r\nclass Checkbox extends Labeled {\r\n  constructor(text, graphic) {\r\n    super(text, graphic);\r\n\r\n    this.dom.on('click.Checkbox', () => {\r\n      if (this.uiMediator) {\r\n        this.uiMediator.sendUserInput(this, {selected: this.selected});\r\n      }\r\n    });\r\n  }\r\n\r\n  createDom() {\r\n      const dom = jQuery('<label><input type=\"checkbox\"> <span class=\"ux-labeled-text\"></span></label>');\r\n      dom.addClass('ux-labeled');\r\n      dom.addClass('ux-checkbox');\r\n      return dom;\r\n  }\r\n\r\n  get checked() {\r\n    return this.dom.find('> input[type=checkbox]').prop('checked');\r\n  }\r\n\r\n  set checked(value) {\r\n    this.dom.find('> input[type=checkbox]').prop('checked', value);\r\n  }\r\n\r\n  get selected() {\r\n    return this.checked;\r\n  }\r\n\r\n  set selected(value) {\r\n    this.checked = value;\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","import SelectControl from './SelectControl';\r\n\r\nclass Combobox extends SelectControl {\r\n  createDom() {\r\n    var dom = super.createDom();\r\n    dom.addClass('ux-combobox');\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default Combobox;\r\n","import Node from \"./Node\";\r\n\r\nclass Container extends Node {\r\n  constructor(nodes) {\r\n      super();\r\n      this.add(...arguments);\r\n  }\r\n\r\n  get align() {\r\n    return [this.verAlign, this.horAlign];\r\n  }\r\n\r\n  set align(value) {\r\n    if (value instanceof Array && value.length >= 2) {\r\n      this.horAlign = value[1];\r\n      this.verAlign = value[0];\r\n    }\r\n  }\r\n\r\n  get horAlign() {\r\n    if (this.dom.hasClass('ux-m-halign-right')) {\r\n      return 'right';\r\n    } else if (this.hasClass('ux-m-halign-center')) {\r\n      return 'center';\r\n    }\r\n\r\n    return 'left';\r\n  }\r\n\r\n  set horAlign(value) {\r\n    this.dom.removeClass('ux-m-halign-left');\r\n    this.dom.removeClass('ux-m-halign-right');\r\n    this.dom.removeClass('ux-m-halign-center');\r\n\r\n    this.dom.addClass('ux-m-halign-' + value);\r\n  }\r\n\r\n  get verAlign() {\r\n    if (this.dom.hasClass('ux-m-valign-bottom')) {\r\n      return 'bottom';\r\n    } else if (this.hasClass('ux-m-valign-center')) {\r\n      return 'center';\r\n    }\r\n\r\n    return 'top';\r\n  }\r\n\r\n  set verAlign(value) {\r\n    this.dom.removeClass('ux-m-valign-top');\r\n    this.dom.removeClass('ux-m-valign-bottom');\r\n    this.dom.removeClass('ux-m-valign-center');\r\n\r\n    this.dom.addClass('ux-m-valign-' + value);\r\n  }\r\n\r\n  createSlotDom(object) {\r\n    if (!(object instanceof Node)) {\r\n      throw new TypeError('createSlotDom(): 1 argument must be instance of Node')\r\n    }\r\n\r\n    const dom = jQuery('<div/>').append(object.dom);\r\n    dom.addClass('ux-slot');\r\n\r\n    dom.data('--wrapper', object);\r\n    object.dom.data('--wrapper-dom', dom);\r\n    return dom;\r\n  }\r\n\r\n  createDom() {\r\n    const dom = jQuery('<div></div>');\r\n    dom.addClass('ux-container');\r\n\r\n    return dom;\r\n  }\r\n\r\n  child(id) {\r\n    const dom = this.dom.find(`#${id}`);\r\n\r\n    if (dom && dom.length) {\r\n      return Node.getFromDom(dom);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  count() {\r\n    return this.dom.children().length;\r\n  }\r\n\r\n  children() {\r\n    const children = [];\r\n\r\n    this.dom.children().each(function () {\r\n      children.push(Node.getFromDom(jQuery(this)));\r\n    });\r\n\r\n    return children;\r\n  }\r\n\r\n  removeByIndex(index) {\r\n    const child = this.children()[index];\r\n    \r\n    if (child) {\r\n      child.free();\r\n    }\r\n  }\r\n\r\n  add(nodes) {\r\n    for (let i = 0; i < arguments.length; i++) {\r\n      this.dom.append(this.createSlotDom(arguments[i]));\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  insert(index, nodes) {\r\n    index = index | 0;\r\n\r\n    const children = this.dom.children();\r\n\r\n    if (!children.length || index >= children.length) {\r\n      return this.add(...Array.prototype.slice.call(arguments, 1));\r\n    }\r\n\r\n    nodes = Array.prototype.slice.call(arguments, 1);\r\n\r\n    let i = 0;\r\n    const self = this;\r\n\r\n    this.dom.children().each(function () {\r\n      if (index === i) {\r\n        for (let k = 0; k < nodes.length; k++) {\r\n          const slot = self.createSlotDom(nodes[k]);\r\n          slot.insertBefore(this);\r\n        }\r\n\r\n        return false;\r\n      }\r\n\r\n      i++;\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  clear() {\r\n    this.dom.empty();\r\n  }\r\n\r\n  show() {\r\n    this.dom.css('display', '');\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default Container;\r\n","import Container from './Container';\r\n\r\nclass HBox extends Container {\r\n\r\n  constructor(nodes) {\r\n    super(...arguments);\r\n\r\n    this.spacing = 0;\r\n    this.align = ['top', 'left'];\r\n  }\r\n\r\n  get fitHeight() {\r\n    return this.dom.hasClass('ux-m-fit-height');\r\n  }\r\n\r\n  set fitHeight(value) {\r\n    if (value) {\r\n      this.dom.addClass('ux-m-fit-height');\r\n    } else {\r\n      this.dom.removeClass('ux-m-fit-height');\r\n    }\r\n  }\r\n\r\n  get spacing() {\r\n    return this._spacing;\r\n  }\r\n\r\n  set spacing(value) {\r\n    this._spacing = value;\r\n    const slots = this.dom.find('> div');\r\n\r\n    slots.css('margin-right', value + 'px');\r\n    slots.last().css('margin-right', 0);\r\n  }\r\n\r\n  createDom() {\r\n    const dom = super.createDom();\r\n    dom.addClass('ux-h-box');\r\n\r\n    return dom;\r\n  }\r\n\r\n  createSlotDom(object) {\r\n    const dom = super.createSlotDom(object);\r\n    return dom;\r\n  }\r\n\r\n  add(nodes) {\r\n    super.add(...arguments);\r\n    this.spacing = this.spacing;\r\n  }\r\n\r\n  insert(index, nodes) {\r\n    super.insert(...arguments);\r\n    this.spacing = this.spacing;\r\n  }\r\n}\r\n\r\nexport default HBox;\r\n","import Node from './Node';\r\n\r\nclass ImageView extends Node {\r\n\r\n  constructor(image) {\r\n    super();\r\n\r\n    this.proportional = true;\r\n    this.displayType = 'origin';\r\n\r\n    if (image !== undefined) {\r\n      this.source = image;\r\n    }\r\n  }\r\n\r\n  get source() {\r\n    let source = this.dom.css('background-image');\r\n\r\n    if (source) {\r\n      source = /^url\\((['\"]?)(.*)\\1\\)$/.exec(source);\r\n      return source ? source[2] : null;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  set source(value) {\r\n    this.dom.css({'background-image': `url('${value}')`});\r\n\r\n    if (this.displayType === 'origin') {\r\n      this.dom.find('img').attr('src', value);\r\n    }\r\n\r\n    this.__triggerPropertyChange('source', value);\r\n  }\r\n\r\n  get centered() {\r\n    return this.dom.css('background-position') === '50% 50%';\r\n  }\r\n\r\n  set centered(value) {\r\n    this.dom.css('background-position', value ? '50% 50%' : '0 0');\r\n    this.__triggerPropertyChange('centered', value);\r\n  }\r\n\r\n  get displayType() {\r\n    switch (this.dom.css('background-size')) {\r\n      case '100% 100%': return 'filled';\r\n      case 'cover': return 'cropped';\r\n      case 'resized': return 'resized';\r\n\r\n      case 'auto':\r\n      case 'auto auto': return 'origin';\r\n\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  set displayType(type) {\r\n    this.dom.find('img').remove();\r\n\r\n    switch (type.toString().toLowerCase()) {\r\n      case 'filled':\r\n        this.dom.css('background-size', `100% 100%`);\r\n        break;\r\n      case 'cropped':\r\n        this.dom.css('background-size', 'cover');\r\n        break;\r\n      case 'resized':\r\n        this.dom.css('background-size', 'contain');\r\n        break;\r\n      case 'origin':\r\n        const source = this.source;\r\n        this.dom.css('background-size', 'auto auto');\r\n        this.dom.append(jQuery('<img style=\"visibility: hidden\" />'));\r\n        this.source = source;\r\n        break;\r\n    }\r\n\r\n    this.__triggerPropertyChange('displayType', type);\r\n  }\r\n\r\n  createDom() {\r\n    const dom = jQuery('<div></div>');\r\n    dom.addClass('ux-image-view');\r\n\r\n    dom.css({\r\n      display: 'inline-block',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundSize: '100% 100%',\r\n      backgroundPosition: '0 0'\r\n    });\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default ImageView;\r\n","import Labeled from './Labeled';\r\n\r\n\r\nclass Label extends Labeled {\r\n\r\n  createDom() {\r\n      const dom = jQuery('<span class=\"ux-labeled ux-label\"><span class=\"ux-labeled-text\"></span></span>');\r\n      return dom;\r\n  }\r\n}\r\n\r\nexport default Label;\r\n","import Node from './Node';\r\nimport Font from './paint/Font';\r\nimport ImageView from './ImageView';\r\nimport Utils from './util/Utils';\r\n\r\nclass Labeled extends Node {\r\n    constructor(text, graphic) {\r\n        super();\r\n        this.textType = 'text';\r\n        this.contentDisplay = 'left';\r\n        this.graphicTextGap = 4;\r\n        this.graphic = graphic;\r\n        this.text = text;\r\n        this.align = ['center', 'center'];\r\n    }\r\n\r\n    get font() {\r\n      return Font.getFromDom(this.dom);\r\n    }\r\n\r\n    set font(value) {\r\n      Font.applyToDom(this.dom, value);\r\n      this.__triggerPropertyChange('value', value);\r\n    }\r\n\r\n    get align() {\r\n      return [this.verAlign, this.horAlign];\r\n    }\r\n\r\n    set align(value) {\r\n      if (value instanceof Array && value.length >= 2) {\r\n        this.horAlign = value[1];\r\n        this.verAlign = value[0];\r\n      }\r\n    }\r\n\r\n    get horAlign() {\r\n      if (this.dom.hasClass('ux-m-halign-right')) {\r\n        return 'right';\r\n      } else if (this.hasClass('ux-m-halign-center')) {\r\n        return 'center';\r\n      }\r\n\r\n      return 'left';\r\n    }\r\n\r\n    set horAlign(value) {\r\n      this.dom.removeClass('ux-m-halign-left');\r\n      this.dom.removeClass('ux-m-halign-right');\r\n      this.dom.removeClass('ux-m-halign-center');\r\n\r\n      this.dom.addClass('ux-m-halign-' + value);\r\n\r\n      this.__triggerPropertyChange('horAlign', value);\r\n    }\r\n\r\n    get verAlign() {\r\n      if (this.dom.hasClass('ux-m-valign-bottom')) {\r\n        return 'bottom';\r\n      } else if (this.hasClass('ux-m-valign-center')) {\r\n        return 'center';\r\n      }\r\n\r\n      return 'top';\r\n    }\r\n\r\n    set verAlign(value) {\r\n      this.dom.removeClass('ux-m-valign-top');\r\n      this.dom.removeClass('ux-m-valign-bottom');\r\n      this.dom.removeClass('ux-m-valign-center');\r\n\r\n      this.dom.addClass('ux-m-valign-' + value);\r\n\r\n      this.__triggerPropertyChange('verAlign', value);\r\n    }\r\n\r\n    get text() {\r\n      switch (this.textType) {\r\n        case 'text':\r\n          return this.dom.find('> span.ux-labeled-text').text();\r\n        case 'html':\r\n          return this.dom.find('> span.ux-labeled-text').html();\r\n      }\r\n\r\n      return '';\r\n    }\r\n\r\n    set text(value) {\r\n      switch (this.textType) {\r\n        case 'text':\r\n          this.dom.find('> span.ux-labeled-text').text(value);\r\n          break;\r\n\r\n        case 'html':\r\n          this.dom.find('> span.ux-labeled-text').html(value);\r\n          break;\r\n      }\r\n\r\n      this.__triggerPropertyChange('text', value);\r\n    }\r\n\r\n    get textColor() {\r\n      return this.dom.css('color');\r\n    }\r\n\r\n    set textColor(value) {\r\n      this.dom.css('color', value ? value : '');\r\n\r\n      this.__triggerPropertyChange('textColor', value);\r\n    }\r\n\r\n    get textType() {\r\n      return this._textType;\r\n    }\r\n\r\n    set textType(value) {\r\n      const text = this.text;\r\n      const graphic = this.graphic;\r\n\r\n      if (value) {\r\n        this._textType = value.toString().toLowerCase();\r\n      } else {\r\n        this._textType = 'text';\r\n      }\r\n\r\n      this.text = text;\r\n      this.graphic = graphic;\r\n      this.__triggerPropertyChange('textType', value);\r\n    }\r\n\r\n    get contentDisplay() {\r\n      if (this.dom.first().hasClass('ux-graphic')) {\r\n        if (this.dom.hasClass('ux-labeled-vertical')) {\r\n          return 'top';\r\n        } else {\r\n          return 'left';\r\n        }\r\n      } else if (this.dom.last().hasClass('ux-graphic')) {\r\n        if (this.dom.hasClass('ux-labeled-vertical')) {\r\n          return 'bottom';\r\n        } else {\r\n          return 'right';\r\n        }\r\n      } else {\r\n        return this._contentDisplay;\r\n      }\r\n    }\r\n\r\n    set contentDisplay(value) {\r\n      const graphic = this.graphic;\r\n      const graphicGap = this.graphicTextGap;\r\n      this._contentDisplay = value;\r\n\r\n      switch (value) {\r\n        case 'top':\r\n        case 'bottom':\r\n          this.dom.addClass('ux-labeled-vertical');\r\n          break;\r\n\r\n        case 'right':\r\n          this.dom.removeClass('ux-labeled-vertical');\r\n          break;\r\n\r\n        case 'left':\r\n        default:\r\n          this.dom.removeClass('ux-labeled-vertical');\r\n          this._contentDisplay = 'left';\r\n          break;\r\n      }\r\n\r\n      this.__triggerPropertyChange('contentDisplay', value);\r\n      this.graphic = graphic;\r\n      this.graphicTextGap = graphicGap;\r\n    }\r\n\r\n    get graphicTextGap() {\r\n      const grDom = this.dom.find('.ux-graphic');\r\n\r\n      if (grDom.length) {\r\n        let prop = 'margin-right';\r\n\r\n        switch (this.contentDisplay) {\r\n          case 'bottom': prop = 'margin-top'; break;\r\n          case 'right': prop = 'margin-left'; break;\r\n          case 'top': prop = 'margin-bottom'; break;\r\n        }\r\n\r\n        return Utils.toPt(grDom.css(prop));\r\n      } else {\r\n        return this._graphicGap;\r\n      }\r\n    }\r\n\r\n    set graphicTextGap(value) {\r\n      this._graphicGap = value;\r\n\r\n      const grDom = this.dom.find('.ux-graphic');\r\n\r\n      if (grDom.length) {\r\n        grDom.css('margin', 0);\r\n\r\n        let prop = 'margin-right';\r\n\r\n        switch (this.contentDisplay) {\r\n          case 'bottom': prop = 'margin-top'; break;\r\n          case 'right': prop = 'margin-left'; break;\r\n          case 'top': prop = 'margin-bottom'; break;\r\n        }\r\n\r\n        grDom.css(prop, value + 'px');\r\n      }\r\n\r\n      this.__triggerPropertyChange('contentDisplay', value);\r\n    }\r\n\r\n    get graphic() {\r\n      return Node.getFromDom(this.dom.find('.ux-graphic > *').first());\r\n    }\r\n\r\n    set graphic(node) {\r\n      const graphicGap = this.graphicTextGap;\r\n      this.dom.find('.ux-graphic').remove();\r\n\r\n      if (node) {\r\n        if (typeof node === 'string' || node instanceof String) {\r\n          node = new ImageView(node);\r\n        }\r\n\r\n        const dom = jQuery('<span class=\"ux-graphic\" />').append(node.dom);\r\n\r\n        switch (this.contentDisplay) {\r\n          case 'top':\r\n          case 'left':\r\n            this.dom.prepend(dom);\r\n            break;\r\n          case 'bottom':\r\n          case 'right':\r\n            this.dom.append(dom);\r\n            break;\r\n        }\r\n\r\n        this.graphicTextGap = graphicGap;\r\n      }\r\n\r\n      this.__triggerPropertyChange('graphic', node);\r\n    }\r\n}\r\n\r\nexport default Labeled;\r\n","import Container from './Container';\r\nimport Node from './Node';\r\n\r\nclass ListView extends Container {\r\n  constructor() {\r\n    super();\r\n\r\n    this.spacing = 0;\r\n    this.align = ['center', 'left'];\r\n  }\r\n\r\n  get selectedIndex() {\r\n    var index = -1;\r\n    var result = -1;\r\n\r\n    this.dom.find('> .ux-slot').each(function () {\r\n      index++;\r\n\r\n      if ($(this).hasClass('active')) {\r\n        result = index;\r\n        return true;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  set selectedIndex(value) {\r\n    var children = this.children();\r\n\r\n    if (value >= 0 && value < children.length) {\r\n      this.selected = children[value];\r\n    } else {\r\n      this.selected = null;\r\n    }\r\n  }\r\n\r\n  get selected() {\r\n    var dom = this.dom.find('> .ux-slot.active').first();\r\n\r\n    if (dom) {\r\n      return Node.getFromDom(dom);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  set selected(object) {\r\n    this.dom.find('> .ux-slot.active').removeClass('active');\r\n\r\n    if (object instanceof Node) {\r\n      object.dom.closest('.ux-slot').addClass('active');\r\n    }\r\n  }\r\n\r\n  createDom() {\r\n    var dom = super.createDom();\r\n    dom.addClass('list-group');\r\n    dom.addClass('ux-list-view');\r\n    return dom;\r\n  }\r\n\r\n  createSlotDom(object) {\r\n    if (!(object instanceof Node)) {\r\n      throw new TypeError('createSlotDom(): 1 argument must be instance of Node')\r\n    }\r\n\r\n    var dom = jQuery('<a href=\"#\" class=\"list-group-item ux-slot\" />').append(object.dom);\r\n\r\n    dom.on('click.ListView', () => {\r\n      dom.closest('.ux-list-view').find('> .ux-slot').removeClass('active');\r\n      dom.addClass('active');\r\n\r\n      this.dom.trigger('action');\r\n    });\r\n\r\n    dom.data('--wrapper', object);\r\n    object.dom.data('--wrapper-dom', dom);\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default ListView;\r\n","import SelectControl from './SelectControl';\r\n\r\nclass Listbox extends SelectControl {\r\n\r\n  createDom() {\r\n    var dom = super.createDom();\r\n    dom.prop('multiple', true);\r\n    dom.addClass('ux-listbox');\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default Listbox;\r\n","import Utils from './util/Utils';\r\n\r\n/**\r\n * Base HTML Node class.\r\n **/\r\nclass Node {\r\n  constructor(dom) {\r\n    this.__observers = [];\r\n\r\n    if (dom === undefined) {\r\n      this.dom = this.createDom();\r\n\r\n      if (!(this.dom instanceof jQuery)) {\r\n        throw new Error(\"Method createDom() must return instance of an jQuery object\");\r\n      }\r\n    } else {\r\n      if (dom instanceof jQuery) {\r\n        this.dom = dom;\r\n      } else {\r\n        throw new Error(\"Non-jquery object cannot be passed into Node.construct()\");\r\n      }\r\n    }\r\n\r\n    this.dom.data('--wrapper', this);\r\n  }\r\n\r\n  /**\r\n   * @param {function} handler\r\n   */\r\n  __forEachObservers(handler) {\r\n    for (let observer of this.__observers) {\r\n      handler(observer);\r\n    }\r\n  }\r\n\r\n  __triggerPropertyChange(name, newValue) {\r\n    this.__forEachObservers(observer => {\r\n      const oldValue = this[name];\r\n      observer.triggerPropertyChange(name, oldValue, newValue)\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @returns {UIMediator}\r\n   */\r\n  get uiMediator() {\r\n    return this.dom.data('--ui-mediator') || null;\r\n  }\r\n\r\n  /**\r\n   * @returns {string}\r\n   */\r\n  get uuid() {\r\n    return this.dom.attr('uuid')\r\n  }\r\n\r\n  /**\r\n   * @param {string} value\r\n   */\r\n  set uuid(value) {\r\n    this.dom.removeClass(this.uuid);\r\n    this.dom.attr('uuid', value);\r\n    this.dom.addClass(value);\r\n  }\r\n\r\n  get id() {\r\n    return this.dom.attr('id')\r\n  }\r\n\r\n  set id(value) {\r\n    this.__triggerPropertyChange('id', value);\r\n    this.dom.attr('id', value);\r\n  }\r\n\r\n  get visible() {\r\n    return this.dom.is(':visible');\r\n  }\r\n\r\n  set visible(value) {\r\n    this.__triggerPropertyChange('visible', value);\r\n\r\n    if (value) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  get opacity() {\r\n    return this.dom.css('opacity');\r\n  }\r\n\r\n  set opacity(value) {\r\n    this.__triggerPropertyChange('opacity', value);\r\n    this.dom.css('opacity', value);\r\n  }\r\n\r\n  get enabled() {\r\n    return !this.dom.prop(\"disabled\");\r\n  }\r\n\r\n  set enabled(value) {\r\n    this.__triggerPropertyChange('enabled', value);\r\n    this.dom.prop('disabled', !value);\r\n  }\r\n\r\n  get focused() {\r\n    return this.dom.is(':focus');\r\n  }\r\n\r\n  get x() {\r\n    return this.dom.position().left;\r\n  }\r\n\r\n  set x(value) {\r\n    this.__triggerPropertyChange('x', value);\r\n    this.dom.css({left: value});\r\n  }\r\n\r\n  get y() {\r\n    return this.dom.position().top;\r\n  }\r\n\r\n  set y(value) {\r\n    this.__triggerPropertyChange('y', value);\r\n    this.dom.css({top: value});\r\n  }\r\n\r\n  get position() {\r\n    return [this.x, this.y];\r\n  }\r\n\r\n  set position(value) {\r\n    if (value instanceof Array && value.length >= 2) {\r\n      this.x = value[0];\r\n      this.y = value[1];\r\n    }\r\n  }\r\n\r\n  get width() {\r\n    return this.dom.width()\r\n  }\r\n\r\n  set width(value) {\r\n    this.__triggerPropertyChange('width', value);\r\n    this.dom.width(value);\r\n  }\r\n\r\n  get height() {\r\n    return this.dom.height()\r\n  }\r\n\r\n  set height(value) {\r\n    this.__triggerPropertyChange('height', value);\r\n    this.dom.height(value);\r\n  }\r\n\r\n  get size() {\r\n    return [this.width, this.height]\r\n  }\r\n\r\n  set size(value) {\r\n    if (value instanceof Array && value.length >= 2) {\r\n      this.width = value[0];\r\n      this.height = value[1];\r\n    }\r\n  }\r\n\r\n  get padding() {\r\n    return [\r\n      Utils.toPt(this.dom.css('padding-top')),\r\n      Utils.toPt(this.dom.css('padding-right')),\r\n      Utils.toPt(this.dom.css('padding-bottom')),\r\n      Utils.toPt(this.dom.css('padding-left'))\r\n    ];\r\n  }\r\n\r\n  set padding(value) {\r\n    this.__triggerPropertyChange('padding', value);\r\n\r\n    if (value instanceof Array) {\r\n      if (value.length >= 4) {\r\n        this.dom.css({\r\n          'padding-top': value[0], 'padding-right': value[1],\r\n          'padding-bottom': value[2], 'padding-left': value[3]\r\n        });\r\n      } else if (value.length >= 2) {\r\n        this.dom.css({\r\n          'padding-top': value[0], 'padding-right': value[1],\r\n          'padding-bottom': value[0], 'padding-left': value[1]\r\n        });\r\n      } else if (value.length >= 1) {\r\n        this.dom.css('padding', value[0]);\r\n      } else {\r\n        this.dom.css('padding', 0);\r\n      }\r\n    } else {\r\n      this.dom.css('padding', value);\r\n    }\r\n  }\r\n\r\n  get parent() {\r\n    let parent = null;\r\n\r\n    if (this.dom.data('--wrapper-dom')) {\r\n      parent = this.dom.data('--wrapper-dom').parent();\r\n    } else {\r\n      parent = this.dom.parent();\r\n    }\r\n\r\n    if (!parent) {\r\n      return null;\r\n    }\r\n\r\n    return Node.getFromDom(parent);\r\n  }\r\n\r\n  get userData() {\r\n    return this.dom.data('--user-data');\r\n  }\r\n\r\n  set userData(value) {\r\n    this.__triggerPropertyChange('userData', value);\r\n    this.dom.data('--user-data', value);\r\n  }\r\n\r\n  createDom() {\r\n    throw new Error(\"Cannot call abstract method createDom()\");\r\n  }\r\n\r\n  requestFocus() {\r\n    this.focus();\r\n  }\r\n\r\n  relocate(x, y) {\r\n    this.position = [x, y];\r\n  }\r\n\r\n  resize(width, height) {\r\n    this.size = [width, height];\r\n  }\r\n\r\n  focus() {\r\n    this.dom.focus();\r\n  }\r\n\r\n  css(value) {\r\n    return this.dom.css(...arguments);\r\n  }\r\n\r\n  data(params) {\r\n    if (arguments.length === 1) {\r\n      return this.dom.data(...arguments);\r\n    } else {\r\n      this.dom.data(...arguments);\r\n      return this;\r\n    }\r\n  }\r\n\r\n  lookup(selector) {\r\n    const dom = this.dom.find(selector).first();\r\n\r\n    if (dom) {\r\n      return Node.getFromDom(dom);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  lookupAll(selector) {\r\n    const nodes = [];\r\n\r\n    this.dom.find(selector).each(() => {\r\n      nodes.push(Node.getFromDom(this));\r\n    });\r\n\r\n    return nodes;\r\n  }\r\n\r\n  toFront() {\r\n    const parent = this.parent;\r\n\r\n    if (parent) {\r\n      if (parent['childToFront']) {\r\n        parent.childToFront(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  toBack() {\r\n    const parent = this.parent;\r\n\r\n    if (parent) {\r\n      if (parent['childToBack']) {\r\n        parent.childToBack(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  free() {\r\n    const wrapperDom = this.dom.data('--wrapper-dom');\r\n\r\n    if (wrapperDom) {\r\n      wrapperDom.remove();\r\n    } else {\r\n      this.dom.detach();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  show() {\r\n    this.dom.css('display', '');\r\n    return this;\r\n  }\r\n\r\n  hide() {\r\n    this.dom.hide();\r\n    return this;\r\n  }\r\n\r\n  toggle() {\r\n    this.dom.toggle();\r\n    return this;\r\n  }\r\n\r\n  on(event, callback) {\r\n    this.dom.on(event, (event) => {\r\n      event.sender = this;\r\n      callback.call(this, event);\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {string} event\r\n   * @returns {Node}\r\n   */\r\n  off(event) {\r\n    this.dom.off(event);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {string} event\r\n   * @param params\r\n   * @returns {*}\r\n   */\r\n  trigger(event, params) {\r\n    return this.dom.trigger(event, params);\r\n  }\r\n\r\n  /**\r\n   * @param {string} id\r\n   * @returns {Node}\r\n   */\r\n  child(id) {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @param object\r\n   */\r\n  loadSchema(object) {\r\n    for (const prop in object) {\r\n      if (object.hasOwnProperty(prop)) {\r\n        if (prop[0] === '_') {\r\n          continue;\r\n        }\r\n\r\n        const value = object[prop];\r\n\r\n        switch (prop) {\r\n          default:\r\n            this[prop] = value;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {UIMediator} uiMediator\r\n   */\r\n  connectToMediator(uiMediator) {\r\n    this.dom.data('--ui-mediator', uiMediator);\r\n  }\r\n\r\n  static getFromDom(jqueryObject) {\r\n    if (jqueryObject === null || jqueryObject.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    if (jqueryObject instanceof jQuery) {\r\n      let wrapper = jqueryObject.data('--wrapper');\r\n      return wrapper ? wrapper : new Node(jqueryObject);\r\n    }\r\n\r\n    throw new Error(\"Node.getFromDom(): 1 argument must be an jQuery object\");\r\n  }\r\n}\r\n\r\nexport default Node;\r\n","import TextInputControl from './TextInputControl';\r\n\r\nclass PasswordField extends TextInputControl {\r\n  createDom() {\r\n    var dom = jQuery('<input type=\"password\" class=\"form-control ux-text-input-control ux-password-field\" />');\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default PasswordField;\r\n","import Node from './Node';\r\nimport Utils from './util/Utils';\r\n\r\nclass ProgressBar extends Node {\r\n  get progress() {\r\n    return Utils.toPt(this.dom.find('> .progress-bar').css('width'));\r\n  }\r\n\r\n  set progress(value) {\r\n    this.dom.find('> .progress-bar').css('width', value + '%');\r\n  }\r\n\r\n  get kind() {\r\n    const dom = this.dom.find('> .progress-bar');\r\n\r\n    if (dom.hasClass('progress-bar-success')) {\r\n      return 'success';\r\n    } else if (dom.hasClass('progress-bar-info')) {\r\n      return 'info';\r\n    } else if (dom.hasClass('progress-bar-warning')) {\r\n      return 'warning';\r\n    } else if (dom.hasClass('progress-bar-danger')) {\r\n      return 'danger';\r\n    }\r\n\r\n    return 'default';\r\n  }\r\n\r\n  set kind(value) {\r\n    const dom = this.dom.find('> .progress-bar');\r\n    \r\n    dom.removeClass(`progress-bar-${this.kind}`);\r\n    dom.addClass(`progress-bar-${value}`);\r\n  }\r\n\r\n  get animated() {\r\n    var dom = this.dom.find('> .progress-bar');\r\n    return dom.hasClass('active');\r\n  }\r\n\r\n  set animated(value) {\r\n    var dom = this.dom.find('> .progress-bar');\r\n\r\n    if (value) {\r\n      dom.addClass('active');\r\n    } else {\r\n      dom.removeClass('active');\r\n    }\r\n  }\r\n\r\n  get striped() {\r\n    var dom = this.dom.find('> .progress-bar');\r\n    return dom.hasClass('progress-bar-striped');\r\n  }\r\n\r\n  set striped(value) {\r\n    var dom = this.dom.find('> .progress-bar');\r\n\r\n    if (value) {\r\n      dom.addClass('progress-bar-striped');\r\n    } else {\r\n      dom.removeClass('progress-bar-striped');\r\n    }\r\n  }\r\n\r\n  createDom() {\r\n    var dom = jQuery('<div class=\"progress ux-progress-bar\"><div class=\"progress-bar\" role=\"progressbar\"></div></div>');\r\n\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default ProgressBar;\r\n","import Node from './Node';\r\n\r\nexport default class SelectControl extends Node {\r\n  constructor(items) {\r\n    super();\r\n    if (items) {\r\n      this.items = items;\r\n    }\r\n  }\r\n\r\n  get items() {\r\n    var result = {};\r\n\r\n    this.dom.find('option').each(function () {\r\n      result[this.attr('value')] = $(this).text();\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  set items(value) {\r\n    this.dom.find('option').remove();\r\n\r\n    for (var key in value) {\r\n      if (value.hasOwnProperty(key)) {\r\n        this.dom.append(jQuery(`<option value='${key}'>${value[key]}</option>`));\r\n      }\r\n    }\r\n  }\r\n\r\n  get selected() {\r\n    return this.dom.val();\r\n  }\r\n\r\n  set selected(value) {\r\n    this.dom.val(value);\r\n  }\r\n\r\n  get selectedText() {\r\n    return this.dom.find('option:selected').text();\r\n  }\r\n\r\n  set selectedText(value) {\r\n    this.selected = null;\r\n\r\n    this.dom.find('option').each(function () {\r\n      if ($(this).text() === value) {\r\n        $(this).prop('selected', true);\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n  createDom() {\r\n    var dom = jQuery('<select class=\"form-control ux-select-control\">');\r\n    return dom;\r\n  }\r\n}\r\n","import TextInputControl from './TextInputControl';\r\n\r\nclass TextArea extends TextInputControl {\r\n\r\n  get wrap() {\r\n    return this.dom.attr('wrap');\r\n  }\r\n\r\n  set wrap(value) {\r\n    this.dom.attr('wrap', value);\r\n  }\r\n\r\n  createDom() {\r\n    var dom = jQuery('<textarea class=\"form-control ux-text-input-control ux-text-area\" />');\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default TextArea;\r\n","import TextInputControl from './TextInputControl';\r\n\r\nclass TextField extends TextInputControl {\r\n  createDom() {\r\n    const dom = jQuery('<input type=\"text\" class=\"form-control ux-text-input-control ux-text-field\" />');\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default TextField;\r\n","import Node from './Node';\r\n\r\nclass TextInputControl extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.dom.on('keydown.TextInputControl', (e) => {\r\n      if (this.uiMediator) {\r\n        setTimeout(() => this.uiMediator.sendUserInput(this, {text: this.text}), 0);\r\n      }\r\n    });\r\n  }\r\n\r\n  get placeholder() {\r\n    return this.dom.attr('placeholder');\r\n  }\r\n\r\n  set placeholder(value) {\r\n    this.dom.attr('placeholder', value);\r\n  }\r\n\r\n  get editable() {\r\n    return !this.dom.prop('readonly');\r\n  }\r\n\r\n  set editable(value) {\r\n    this.dom.prop('readonly', !value);\r\n  }\r\n\r\n  get textAlign() {\r\n    return thid.dom.css('text-algin');\r\n  }\r\n\r\n  set textAlign(value) {\r\n    this.dom.css('text-algin', value);\r\n  }\r\n\r\n  get font() {\r\n    return Font.getFromDom(this.dom);\r\n  }\r\n\r\n  set font(value) {\r\n    Font.applyToDom(value);\r\n  }\r\n\r\n  get text() {\r\n    return this.dom.val();\r\n  }\r\n\r\n  set text(value) {\r\n    this.dom.val(value);\r\n  }\r\n}\r\n\r\nexport default TextInputControl;\r\n","import Button from './Button';\r\n\r\nclass ToggleButton extends Button {\r\n  createDom() {\r\n    var dom = super.createDom();\r\n    dom.addClass('ux-toggle-button');\r\n    dom.attr('data-toggle', 'button');\r\n    return dom;\r\n  }\r\n\r\n  get selected() {\r\n    return this.dom.hasClass('active');\r\n  }\r\n\r\n  set selected(value) {\r\n    if (value) {\r\n      this.dom.addClass('active');\r\n      this.dom.attr('aria-pressed', true);\r\n    } else {\r\n      this.dom.removeClass('active');\r\n      this.dom.attr('aria-pressed', false);\r\n    }\r\n  }\r\n\r\n  __bindEvents(dom) {\r\n    dom.on('click', () => {\r\n      this.selected = !this.selected;\r\n    });\r\n  }\r\n}\r\n\r\nexport default ToggleButton;\r\n","import Node from './Node';\r\nimport Button from './Button';\r\nimport ToggleButton from './ToggleButton';\r\nimport Labeled from './Labeled';\r\nimport Label from './Label';\r\nimport Checkbox from './Checkbox';\r\nimport Combobox from './Combobox';\r\nimport Listbox from './Listbox';\r\nimport ProgressBar from './ProgressBar';\r\nimport Container from './Container';\r\nimport HBox from './HBox';\r\nimport VBox from './VBox';\r\nimport ListView from './ListView';\r\nimport AnchorPane from './AnchorPane';\r\nimport ImageView from './ImageView';\r\nimport TextInputControl from './TextInputControl';\r\nimport TextField from './TextField';\r\nimport PasswordField from './PasswordField';\r\nimport TextArea from './TextArea';\r\n\r\n\r\nimport Font from './paint/Font';\r\nimport Utils from './util/Utils';\r\n\r\nexport default {\r\n  Node,\r\n  ImageView,\r\n  Button, ToggleButton,\r\n  Labeled,\r\n  Label, Checkbox, Combobox, Listbox, ProgressBar,\r\n  TextInputControl, TextField, PasswordField, TextArea,\r\n  Container, HBox, VBox, AnchorPane, ListView,\r\n\r\n  Font\r\n}\r\n","import Container from './Container';\r\n\r\nclass VBox extends Container {\r\n\r\n  constructor(nodes) {\r\n    super(...arguments);\r\n\r\n    this.spacing = 0;\r\n    this.align = ['top', 'left'];\r\n  }\r\n\r\n  get fitWidth() {\r\n    return this.dom.hasClass('ux-m-fit-width');\r\n  }\r\n\r\n  set fitWidth(value) {\r\n    if (value) {\r\n      this.dom.addClass('ux-m-fit-width');\r\n    } else {\r\n      this.dom.removeClass('ux-m-fit-width');\r\n    }\r\n  }\r\n\r\n  get spacing() {\r\n    return this._spacing;\r\n  }\r\n\r\n  set spacing(value) {\r\n    this._spacing = value;\r\n    const slots = this.dom.find('> div');\r\n\r\n    slots.css('margin-bottom', value + 'px');\r\n    slots.last().css('margin-bottom', 0);\r\n  }\r\n\r\n  createDom() {\r\n    const dom = super.createDom();\r\n    dom.addClass('ux-v-box');\r\n    return dom;\r\n  }\r\n\r\n  createSlotDom(object) {\r\n    const dom = super.createSlotDom(object);\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default VBox;\r\n","import Utils from './../util/Utils';\r\n\r\nclass Font {\r\n  constructor(name, size) {\r\n    this._dom = null;\r\n    this.name = name || 'serif';\r\n    this.size = size || 12;\r\n  }\r\n\r\n  get name() {\r\n    return this._name;\r\n  }\r\n\r\n  set name(value) {\r\n    this._name = value;\r\n\r\n    if (this._dom) {\r\n      this._dom.css('font-family', value);\r\n    }\r\n  }\r\n\r\n  get size() {\r\n    return this._size;\r\n  }\r\n\r\n  set size(value) {\r\n    this._size = value | 0;\r\n\r\n    if (this._dom) {\r\n      this._dom.css('font-size', value + 'px');\r\n    }\r\n  }\r\n\r\n  get bold() {\r\n    return this._bold | false;\r\n  }\r\n\r\n  set bold(value) {\r\n    this._bold = value | false;\r\n\r\n    if (this._dom) {\r\n      this._dom.css('font-weight', this._bold ? 'bold' : 'normal');\r\n    }\r\n  }\r\n\r\n  get italic() {\r\n    return this._italic | false;\r\n  }\r\n\r\n  set italic(value) {\r\n    this._italic = value | false;\r\n\r\n    if (this._dom) {\r\n      this._dom.css('font-style', this._italic ? 'italic' : 'normal');\r\n    }\r\n  }\r\n\r\n  get underline() {\r\n    return this._underline | false;\r\n  }\r\n\r\n  set underline(value) {\r\n    this._underline = value | false;\r\n\r\n    if (this._dom) {\r\n      this._dom.css('text-decoration', this._underline ? 'underline' : 'none');\r\n    }\r\n  }\r\n\r\n  static applyToDom(dom, font) {\r\n    if (font instanceof Font) {\r\n      dom.css('font-family', font.name);\r\n      dom.css('font-size', font.size);\r\n\r\n      if (font.bold) {\r\n        dom.css('font-weight', 'bold');\r\n      }\r\n\r\n      if (font.italic) {\r\n        dom.css('font-style', 'italic');\r\n      }\r\n\r\n      if (font.underline) {\r\n        dom.css('text-decoration', 'underline');\r\n      }\r\n    } else if (typeof font === 'object') {\r\n      if (font['family']) {\r\n        dom.css('font-family', font.family);\r\n      }\r\n\r\n      if (font['size']) {\r\n        dom.css('font-size', font.size);\r\n      }\r\n\r\n      if (font['bold']) {\r\n        dom.css('font-weight', 'bold');\r\n      }\r\n\r\n      if (font['italic']) {\r\n        dom.css('font-style', 'italic');\r\n      }\r\n\r\n      if (font['underline']) {\r\n        dom.css('text-decoration', 'underline');\r\n      }\r\n    }\r\n  }\r\n\r\n  static getFromDom(dom) {\r\n    if (dom instanceof jQuery) {\r\n      const family = dom.css('font-family');\r\n      const size = Utils.toPt(dom.css('font-size'));\r\n\r\n      const bold = dom.css('font-weight') === 'bold';\r\n      const italic = dom.css('font-style') === 'italic';\r\n\r\n      const font = new Font(family, size);\r\n\r\n      if (bold) font.bold = true;\r\n      if (italic) font.italic = true;\r\n\r\n      font._dom = dom;\r\n      return font;\r\n    }\r\n\r\n    throw new TypeError('getFromDom(): 1 argument must be jquery object');\r\n  }\r\n}\r\n\r\nexport default Font;\r\n","\r\n\r\nclass Utils\r\n{\r\n  static isElement(obj) {\r\n    try {\r\n      //Using W3 DOM2 (works for FF, Opera and Chrom)\r\n      return obj instanceof HTMLElement;\r\n    } catch(e){\r\n      //Browsers not supporting W3 DOM2 don't have HTMLElement and\r\n      //an exception is thrown and we end up here. Testing some\r\n      //properties that all elements have. (works on IE7)\r\n      return (typeof obj===\"object\") &&\r\n        (obj.nodeType===1) && (typeof obj.style === \"object\") &&\r\n        (typeof obj.ownerDocument ===\"object\");\r\n    }\r\n  }\r\n\r\n  static toPt(cssValue) {\r\n    return parseInt(cssValue);\r\n  }\r\n}\r\n\r\nexport default Utils;\r\n","import NX from './NX/NX';\r\nimport UX from './UX/UX';\r\n\r\nwindow.NX = NX;\r\nwindow.UX = UX;\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}