{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/NX/App.js","src/NX/AppDispatcher.js","src/NX/AppMediator.js","src/NX/ChromiumEmbeddedAppDispatcher.js","src/NX/NX.js","src/NX/UILoader.js","src/NX/WebSocketAppDispatcher.js","src/UX/AnchorPane.js","src/UX/Button.js","src/UX/Checkbox.js","src/UX/Combobox.js","src/UX/Container.js","src/UX/HBox.js","src/UX/Hyperlink.js","src/UX/Icon.js","src/UX/ImageView.js","src/UX/Label.js","src/UX/Labeled.js","src/UX/ListView.js","src/UX/Listbox.js","src/UX/Node.js","src/UX/PasswordField.js","src/UX/ProgressBar.js","src/UX/SelectControl.js","src/UX/Switch.js","src/UX/TextArea.js","src/UX/TextField.js","src/UX/TextInputControl.js","src/UX/ToggleButton.js","src/UX/UX.js","src/UX/VBox.js","src/UX/Window.js","src/UX/paint/Font.js","src/UX/util/Utils.js","src/lib.js"],"names":[],"mappings":"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","file":"dnext-engine.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","class App {\r\n  constructor() {\r\n    this._callbacks = {};\r\n  }\r\n\r\n  /**\r\n   * @param {string} message\r\n   */\r\n  log(message) {\r\n    console.log(message);\r\n  }\r\n\r\n  launch() {\r\n    this.socket = new WebSocket(\"/dnext/ws/\");\r\n\r\n    this.socket.onmessage = function (event) {\r\n      const data = JSON.parse(event.data);\r\n\r\n      if (data.id && data.message) {\r\n        const callback = this._callbacks[data.id];\r\n\r\n        if (callback) {\r\n          callback(data);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  send(message, data, callback) {\r\n    data.message = message;\r\n    data.id = Math.random().toString(36).substring(7);\r\n\r\n    if (callback) {\r\n      this._callbacks[data.id] = callback;\r\n    }\r\n\r\n    this.socket.send(JSON.stringify(data));\r\n  }\r\n}\r\n\r\nexport default App;\r\n","\r\nclass AppDispatcher {\r\n\r\n  onOpen(callback) {\r\n    throw \"onOpen() is not implemented\";\r\n  }\r\n\r\n  onMessage(callback) {\r\n    throw \"onMessage() is not implemented\";\r\n  }\r\n\r\n  onError(callback) {\r\n    throw \"onError() is not implemented\";\r\n  }\r\n\r\n  onClose(callback) {\r\n    throw \"onClose() is not implemented\";\r\n  }\r\n\r\n  /**\r\n   * @param {string} data\r\n   */\r\n  send(data) {\r\n    throw \"send() is not implemented\";\r\n  }\r\n}\r\n\r\nexport default AppDispatcher;","import UILoader from \"./UILoader\";\r\nimport Node from \"../UX/Node\";\r\nimport WebSocketAppDispatcher from \"./WebSocketAppDispatcher\";\r\n\r\nclass AppMediator {\r\n  init(rootDom, dispatcherType) {\r\n    this.rootDom = rootDom;\r\n    this.dispatcherType = dispatcherType;\r\n    this.activated = true;\r\n    this._callbacks = [];\r\n    this._nodes = {};\r\n\r\n    const uuid = sessionStorage.getItem('AppMediator.uuid');\r\n\r\n    if (!uuid) {\r\n      this.uuid = Math.random().toString(36).substring(7);\r\n      sessionStorage.setItem('AppMediator.uuid', this.uuid);\r\n    } else {\r\n      this.uuid = uuid;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param contextUrl\r\n   * @param wsUrl\r\n   * @param sessionId\r\n   */\r\n  startWatching(contextUrl, wsUrl, sessionId) {\r\n    this.sessionId = sessionId;\r\n\r\n    this.dispatcher = new this.dispatcherType(wsUrl);\r\n\r\n    this.dispatcher.onError(() => {\r\n      if (sessionStorage.getItem('AppMediator.reloading')) {\r\n        setTimeout(() => window.location.reload(true), 200);\r\n      }\r\n    });\r\n\r\n    this.dispatcher.onOpen(() => {\r\n      sessionStorage.setItem('AppMediator.reloading', false);\r\n\r\n      this.send('initialize', {});\r\n      this.sendIfCan('ui-ready', {\r\n        location: {\r\n          contextUrl: contextUrl,\r\n          hash: window.location.hash ? window.location.hash.substr(1) : '',\r\n          path: window.location.pathname,\r\n          host: window.location.host,\r\n          port: window.location.port,\r\n          protocol: window.location.protocol,\r\n          target: window.location.target,\r\n        }\r\n      });\r\n    });\r\n\r\n    this.dispatcher.onClose(() => {\r\n      this.dispatcher = null;\r\n\r\n      if (this.node) {\r\n        this.node.free();\r\n      }\r\n    });\r\n\r\n    const handlers = {\r\n      'ui-render': this.triggerRenderView,\r\n      'ui-reload': this.triggerReload,\r\n      'ui-alert': this.triggerAlert,\r\n      'ui-set-property': this.triggerSetProperty,\r\n      'ui-call-method': this.triggerCallMethod,\r\n      'ui-event-link': this.triggerOnEventLink,\r\n      'ui-create-node': this.triggerCreateNode,\r\n    };\r\n\r\n    this.dispatcher.onMessage((data) => {\r\n      const message = JSON.parse(data);\r\n      const type = message.type;\r\n\r\n      console.debug(\"AppMediator.receive\", message);\r\n\r\n      if (handlers.hasOwnProperty(type)) {\r\n        handlers[type].call(this, message);\r\n      } else {\r\n        switch (type) {\r\n          case \"system-console-log\":\r\n            const text = message['message'];\r\n\r\n            switch (message['kind']) {\r\n              case 'warn':\r\n                console.warn(text);\r\n                break;\r\n              case 'error':\r\n                console.error(text);\r\n                break;\r\n              case 'info':\r\n                console.info(text);\r\n                break;\r\n              case 'debug':\r\n                console.debug(text);\r\n                break;\r\n              case 'trace':\r\n                console.trace(text);\r\n                break;\r\n              case 'clear':\r\n                console.clear();\r\n                break;\r\n              default:\r\n                console.log(text);\r\n                break;\r\n            }\r\n\r\n            break;\r\n\r\n          case \"system-eval\":\r\n            const {script, callback} = message;\r\n            const result = eval(script);\r\n\r\n            if (callback) {\r\n              callback(result);\r\n            }\r\n\r\n            break;\r\n\r\n          case \"system-callback\":\r\n            const {id} = message;\r\n\r\n            if (this._callbacks[id]) {\r\n              this._callbacks[id].apply(message);\r\n              delete this._callbacks[id];\r\n            }\r\n\r\n            break;\r\n\r\n          case \"history-push\":\r\n            const url = message['url'];\r\n            const title = message['title'];\r\n            const hash = message['hash'];\r\n\r\n            if (window.location.pathname === url) {\r\n              if (title !== undefined) {\r\n                document.title = title;\r\n              }\r\n              if (hash !== undefined) {\r\n                window.location.hash = hash;\r\n              }\r\n\r\n              break;\r\n            }\r\n\r\n            window.history.pushState(null, message['title'], url);\r\n\r\n            if (title !== undefined) {\r\n              document.title = title;\r\n            }\r\n            if (hash !== undefined) {\r\n              window.location.hash = hash;\r\n            }\r\n\r\n            break;\r\n\r\n          case \"page-set-properties\":\r\n            if (message['title'] !== undefined) {\r\n              document.title = message['title'];\r\n            }\r\n\r\n            if (message['hash'] !== undefined) {\r\n              window.location.hash = message['hash'];\r\n            }\r\n\r\n            break;\r\n        }\r\n      }\r\n    });\r\n\r\n    setInterval(() => {\r\n      const docVisible = !document.hidden;\r\n\r\n      if (docVisible !== this.activated) {\r\n        this.activated = docVisible;\r\n\r\n        if (this.activated) {\r\n          this.sendIfCan('activate', {});\r\n        }\r\n      }\r\n    }, 1);\r\n  }\r\n\r\n  parseValue(value) {\r\n    if (value instanceof Object) {\r\n      if (value.hasOwnProperty('$node')) {\r\n        return this.findNodeByUuidGlobally(value['$node']);\r\n      } else if (value.hasOwnProperty('$createNode')) {\r\n        const schema = value['$createNode'];\r\n\r\n        const uiLoader = new UILoader();\r\n        return uiLoader.load(schema);\r\n      } else if (value.hasOwnProperty('$callable')) {\r\n        const uuid = value['$callable'];\r\n\r\n        return () => {\r\n          this.sendIfCan('callback-trigger', {\r\n            'uuid': uuid,\r\n            'args': arguments\r\n          });\r\n        };\r\n      }\r\n    }\r\n\r\n    if (value instanceof Array) {\r\n      for (let i = 0; i < value.length; i++) {\r\n        value[i] = this.parseValue(value[i]);\r\n      }\r\n\r\n      return value;\r\n    }\r\n\r\n    if (value instanceof Object) {\r\n      const newValue = {};\r\n\r\n      for (let key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          newValue[key] = this.parseValue(value[key]);\r\n        }\r\n      }\r\n\r\n      return newValue;\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  prepareValue(value) {\r\n    if (value instanceof Node) {\r\n      if (value.uuid !== undefined) {\r\n        return {'$node': value.uuid}\r\n      } else {\r\n        console.error('Cannot send unregistered node', value);\r\n        return null;\r\n      }\r\n    }\r\n\r\n    if (value instanceof Array) {\r\n      for (let i = 0; i < value.length; i++) {\r\n        value[i] = this.prepareValue(value[i]);\r\n      }\r\n\r\n      return value;\r\n    }\r\n\r\n    if (value instanceof Object) {\r\n      const newValue = {};\r\n\r\n      for (let key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          newValue[key] = this.prepareValue(value[key]);\r\n        }\r\n      }\r\n\r\n      return newValue;\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * @param node\r\n   * @param data\r\n   * @param callback\r\n   */\r\n  sendUserInput(node, data, callback = null) {\r\n    if (!this.dispatcher) {\r\n      return;\r\n    }\r\n\r\n    if (!document.hidden) {\r\n      setTimeout(() => {\r\n        let newData = data;\r\n\r\n        if (typeof data === \"function\") {\r\n          newData = data();\r\n        }\r\n\r\n        this.sendIfCan('ui-user-input', {\r\n          'uuid': node.uuid,\r\n          'data': this.prepareValue(newData)\r\n        }, callback)\r\n      }, 0);\r\n    } else {\r\n      console.warn('Ignore User input');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param type\r\n   * @param message\r\n   * @param callback\r\n   * @returns {boolean}\r\n   */\r\n  sendIfCan(type, message, callback) {\r\n    if (this.dispatcher !== undefined) {\r\n      this.send(type, message, callback);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param type\r\n   * @param message\r\n   * @param callback\r\n   */\r\n  send(type, message, callback) {\r\n    if (this.dispatcher === undefined) {\r\n      throw \"Mediator is not in watching state.\";\r\n    }\r\n\r\n    message.type = type;\r\n    message.id = Math.random().toString(36).substring(7);\r\n    message.sessionId = this.sessionId;\r\n    message.sessionIdUuid = this.uuid;\r\n\r\n    if (callback) {\r\n      this._callbacks[message.id] = callback;\r\n      message.needCallback = true;\r\n    }\r\n\r\n    console.debug(\"AppMediator.send\", message);\r\n\r\n    this.dispatcher.send(JSON.stringify(message));\r\n  }\r\n\r\n  findNodeByUuidGlobally(uuid) {\r\n    let found = this.findNodeByUuid(uuid, this.node);\r\n\r\n    if (found === null) {\r\n      if (this._nodes.hasOwnProperty(uuid)) {\r\n        found = this._nodes[uuid];\r\n      }\r\n    }\r\n\r\n    if (found === null) {\r\n      for (const key in this._nodes) {\r\n        if (this._nodes.hasOwnProperty(key)) {\r\n          const found = this.findNodeByUuid(uuid, this._nodes[key]);\r\n\r\n          if (found !== null) {\r\n            return found;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return found;\r\n  }\r\n\r\n  findNodeByUuid(uuid, node) {\r\n    if (uuid === node.uuid) {\r\n      return node;\r\n    }\r\n\r\n    let children = node.innerNodes();\r\n\r\n    for (let i = 0; i < children.length; i++) {\r\n      if (children[i].uuid === uuid) {\r\n        return children[i];\r\n      }\r\n\r\n      const found = this.findNodeByUuid(uuid, children[i]);\r\n\r\n      if (found !== null) {\r\n        return found;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  triggerEvent(node, event, e) {\r\n    const data = {\r\n      type: e.type,\r\n      which: e.which,\r\n      result: e.result,\r\n      namespace: e.namespace,\r\n      position: [e.pageX, e.pageY]\r\n    };\r\n\r\n    this.sendIfCan('ui-trigger', {\r\n      uuid: node.uuid,\r\n      event: event,\r\n      data: this.prepareValue(data),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Render new view.\r\n   * @param message\r\n   */\r\n  triggerRenderView(message) {\r\n    const uiLoader = new UILoader();\r\n    this.node = uiLoader.load(message['schema'], this);\r\n\r\n    this.rootDom.empty();\r\n    this.rootDom.append(this.node.dom);\r\n\r\n    this.sendIfCan('ui-render-done', {\r\n      size: [this.node.dom.width(), this.node.dom.height()]\r\n    });\r\n  }\r\n\r\n  triggerAlert(message) {\r\n    const text = message['text'];\r\n    alert(text);\r\n  }\r\n\r\n  triggerCallMethod(message) {\r\n    const uuid = message['uuid'];\r\n    const method = message['method'];\r\n    const args = this.parseValue(message['args'] || []);\r\n\r\n    const node = this.findNodeByUuidGlobally(uuid);\r\n\r\n    if (node !== null) {\r\n      node[method].apply(node, args);\r\n    } else {\r\n      console.warn(`Failed to call method .${method}(), node with uuid = ${uuid} is not found`);\r\n    }\r\n  }\r\n\r\n  triggerSetProperty(message) {\r\n    const uuid = message['uuid'];\r\n    const property = message['property'];\r\n    const value = this.parseValue(message['value']);\r\n\r\n    const node = this.findNodeByUuidGlobally(uuid);\r\n\r\n    if (node !== null) {\r\n      node[property] = value;\r\n    } else {\r\n      console.warn(`Failed to set property .${property}, node with uuid = ${uuid} is not found`);\r\n    }\r\n  }\r\n\r\n  triggerOnEventLink(message) {\r\n    const uuid = message['uuid'];\r\n    const event = message['event'];\r\n\r\n    const node = this.findNodeByUuidGlobally(uuid);\r\n\r\n    if (node !== null) {\r\n      node.off(`${event}.AppMediator`);\r\n\r\n      node.on(`${event}.AppMediator`, (e) => {\r\n        this.triggerEvent(node, event, e);\r\n      });\r\n    } else {\r\n      console.warn(`Failed to link event ${event}, node with uuid = ${uuid} is not found`);\r\n    }\r\n  }\r\n\r\n  triggerCreateNode(message) {\r\n    const schema = message['schema'];\r\n\r\n    const uiLoader = new UILoader();\r\n    const node = uiLoader.load(schema, this);\r\n\r\n    this._nodes[node.uuid] = node;\r\n  }\r\n\r\n  triggerReload(message) {\r\n    sessionStorage.setItem('AppMediator.reloading', true);\r\n    setTimeout(() => window.location.reload(true), 50);\r\n  }\r\n}\r\n\r\nexport default new AppMediator();","import AppDispatcher from \"./AppDispatcher\";\r\n\r\nclass ChromiumEmbeddedAppDispatcher extends AppDispatcher\r\n{\r\n  constructor(wsUrl) {\r\n    super();\r\n\r\n    this.wsUrl = wsUrl;\r\n\r\n    this.onMessage(() => {});\r\n    this.onError(() => {});\r\n    this.onClose(() => {});\r\n  }\r\n\r\n  onOpen(callback) {\r\n    window.cefOpenHandler = () => {\r\n      callback();\r\n    };\r\n\r\n    setTimeout(() => window.cefOpenHandler(), 1);\r\n  }\r\n\r\n  onMessage(callback) {\r\n    window.cefMessageHandler = (data) => callback(data);\r\n  }\r\n\r\n  onError(callback) {\r\n    window.cefErrorHandler = () => callback();\r\n  }\r\n\r\n  onClose(callback) {\r\n    window.cefCloseHandler = () => callback();\r\n  }\r\n\r\n  send(data) {\r\n    window.cefQuery({\r\n      request: 'ws:' + this.wsUrl + ':' + data,\r\n      persistent: false,\r\n      onSuccess: (res) => {\r\n      },\r\n      onFailure: (error_code, error_message) => {\r\n        if (window.cefErrorHandler && error_code !== -1) {\r\n          window.cefErrorHandler.call();\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default ChromiumEmbeddedAppDispatcher;","import App from './App';\r\nimport UILoader from './UILoader';\r\nimport AppMediator from \"./AppMediator\";\r\nimport WebSocketAppDispatcher from \"./WebSocketAppDispatcher\";\r\nimport ChromiumEmbeddedAppDispatcher from \"./ChromiumEmbeddedAppDispatcher\";\r\n\r\nexport default {\r\n  App, UILoader, AppMediator,\r\n  WebSocketAppDispatcher, ChromiumEmbeddedAppDispatcher\r\n}\r\n","import Node from './../UX/Node';\r\nimport Container from './../UX/Container';\r\nimport UX from './../UX/UX';\r\nimport AppMediator from './AppMediator';\r\n\r\nclass UILoader {\r\n\r\n  linkToMediator(node, data) {\r\n    const watchedEvents = data['_watchedEvents'];\r\n    if (watchedEvents !== undefined) {\r\n      for (let watchedEvent of watchedEvents) {\r\n        node.on(`${watchedEvent}.AppMediator`, (e) => {\r\n          AppMediator.triggerEvent(node, watchedEvent, e);\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param object\r\n   * @returns {Node}\r\n   */\r\n  load(object) {\r\n    if (object && typeof object === \"object\") {\r\n      const type = object['_'];\r\n\r\n      if (!type) {\r\n        throw new Error(\"Type is not defined in '_' property!\");\r\n      }\r\n\r\n      let cls = UX[type];\r\n\r\n      if (!cls) {\r\n        cls = window[type];\r\n      }\r\n\r\n      if (!cls) {\r\n        throw new Error(`Type '${type}' is not defined`);\r\n      }\r\n\r\n      const node = new cls();\r\n\r\n      if (node instanceof Node) {\r\n        if (node instanceof Container && jQuery.isArray(object['_content'])) {\r\n          const children = object['_content'];\r\n\r\n          for (let i = 0; i < children.length; i++) {\r\n            const child = this.load(children[i], AppMediator);\r\n            node.add(child);\r\n          }\r\n        }\r\n\r\n        node.loadSchema(object);\r\n        this.linkToMediator(node, object);\r\n        return node;\r\n      } else {\r\n        throw new Error(`Type '${type}' is not UI component class`);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {string} jsonString\r\n   * @returns {Node}\r\n   */\r\n  loadFromJson(jsonString) {\r\n    return this.load(JSON.parse(jsonString));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} urlToJson\r\n   * @param {function} callback\r\n   */\r\n  loadFromUrl(urlToJson, callback) {\r\n    jQuery.getJSON(urlToJson, (data) => {\r\n      callback(this.load(data));\r\n    });\r\n  }\r\n}\r\n\r\nexport default UILoader;\r\n","\r\nimport AppDispatcher from \"./AppDispatcher\";\r\n\r\n/**\r\n * WebSocket App Dispatcher\r\n */\r\nclass WebSocketAppDispatcher extends AppDispatcher\r\n{\r\n  constructor(wsUrl) {\r\n    super();\r\n\r\n    const loc = window.location;\r\n\r\n    this.wsUrl = wsUrl;\r\n    let newUri = '';\r\n\r\n    if (loc.protocol === \"https:\") {\r\n      newUri = \"wss:\";\r\n    } else {\r\n      newUri = \"ws:\";\r\n    }\r\n\r\n    newUri += \"//\" + loc.host;\r\n    newUri += wsUrl;\r\n\r\n    this.ws = new WebSocket(newUri);\r\n  }\r\n\r\n  onOpen(callback) {\r\n    this.ws.onopen = () => callback();\r\n  }\r\n\r\n  onMessage(callback) {\r\n    this.ws.onmessage = (e) => callback(e.data);\r\n  }\r\n\r\n  onError(callback) {\r\n    this.ws.onerror = () => callback();\r\n  }\r\n\r\n  onClose(callback) {\r\n    this.ws.onclose = () => callback();\r\n  }\r\n\r\n  send(data) {\r\n    return this.ws.send(data);\r\n  }\r\n}\r\n\r\nexport default WebSocketAppDispatcher;","import Container from './Container';\r\n\r\nclass AnchorPane extends Container {\r\n  createDom() {\r\n    const dom = super.createDom();\r\n    dom.addClass('ux-anchor-pane');\r\n    return dom;\r\n  }\r\n\r\n  createSlotDom(object) {\r\n    object.dom.css('position', 'absolute');\r\n    return object.dom;\r\n  }\r\n\r\n  childToBack(object) {\r\n    const dom = object.dom;\r\n    dom.detach();\r\n\r\n    this.dom.prepend(dom);\r\n  }\r\n\r\n  childToFront(object) {\r\n    const dom = object.dom;\r\n    dom.detach();\r\n    this.dom.append(dom);\r\n  }\r\n}\r\n\r\nexport default AnchorPane;\r\n","import Labeled from './Labeled';\r\n\r\nconst kinds = [\r\n  'success', 'primary', 'secondary', 'info', 'warning', 'danger', 'link', 'dark', 'light'\r\n];\r\n\r\nclass Button extends Labeled {\r\n\r\n  constructor(text, graphic) {\r\n    super(text, graphic);\r\n\r\n    this.on('click.Button', function () {\r\n      this.trigger('action');\r\n    });\r\n  }\r\n\r\n  get outline() {\r\n    return !!this.dom.data('--outline');\r\n  }\r\n\r\n  set outline(value) {\r\n    const kind = this.kind;\r\n    this.dom.data('--outline', !!value);\r\n    this.kind = kind;\r\n  }\r\n\r\n  get kind() {\r\n    const dom = this.dom;\r\n\r\n    for (let kind of kinds) {\r\n      if (dom.hasClass(`btn-${kind}`) || dom.hasClass(`btn-outline-${kind}`)) {\r\n        return kind;\r\n      }\r\n    }\r\n\r\n    return 'default';\r\n  }\r\n\r\n  set kind(value) {\r\n    this.dom.removeClass(`btn-${this.kind}`);\r\n    this.dom.removeClass(`btn-outline-${this.kind}`);\r\n\r\n    if (this.outline) {\r\n      this.dom.addClass(`btn-outline-${value}`);\r\n    } else {\r\n      this.dom.addClass(`btn-${value}`);\r\n    }\r\n  }\r\n\r\n  createDom() {\r\n    const dom = jQuery('<button><span class=\"ux-labeled-text\"></span></button>');\r\n    dom.addClass('ux-labeled');\r\n    dom.addClass('ux-button');\r\n\r\n    dom.addClass('btn');\r\n    dom.addClass('btn-default');\r\n\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import Labeled from './Labeled';\r\nimport AppMediator from '../NX/AppMediator';\r\n\r\nclass Checkbox extends Labeled {\r\n  constructor(text, graphic) {\r\n    super(text, graphic);\r\n\r\n    this.dom.on('click.Checkbox', (e) => {\r\n      if (e.target.tagName === 'INPUT') {\r\n        AppMediator.sendUserInput(this, {selected: this.selected}, () => {\r\n          this.trigger('action', e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  createDom() {\r\n      const dom = jQuery('<span><label><input type=\"checkbox\"><span class=\"cr\"><i class=\"cr-icon material-icons\" style=\"font-weight: bold;\">check</i></span><span class=\"ux-labeled-text\"></span></label></span>');\r\n      dom.addClass('ux-labeled');\r\n      dom.addClass('ux-checkbox');\r\n      return dom;\r\n  }\r\n\r\n  get checked() {\r\n    return this.dom.find('input[type=checkbox]').prop('checked');\r\n  }\r\n\r\n  set checked(value) {\r\n    this.dom.find('input[type=checkbox]').prop('checked', value);\r\n  }\r\n\r\n  get selected() {\r\n    return this.checked;\r\n  }\r\n\r\n  set selected(value) {\r\n    this.checked = value;\r\n  }\r\n\r\n  get enabled() {\r\n    return !this.dom.find('input[type=checkbox]').prop(\"disabled\");\r\n  }\r\n\r\n  set enabled(value) {\r\n    this.dom.find('input[type=checkbox]').prop('disabled', !value);\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","import SelectControl from './SelectControl';\r\n\r\nclass Combobox extends SelectControl {\r\n  createDom() {\r\n    var dom = super.createDom();\r\n    dom.addClass('ux-combobox');\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default Combobox;\r\n","import Node from \"./Node\";\r\n\r\nclass Container extends Node {\r\n  constructor(nodes) {\r\n    super();\r\n    this.add(...arguments);\r\n    this.contentDom = this.dom;\r\n  }\r\n\r\n  get align() {\r\n    return [this.verAlign, this.horAlign];\r\n  }\r\n\r\n  set align(value) {\r\n    if (value instanceof Array && value.length >= 2) {\r\n      this.horAlign = value[1];\r\n      this.verAlign = value[0];\r\n    }\r\n  }\r\n\r\n  get horAlign() {\r\n    if (this.dom.hasClass('ux-m-halign-right')) {\r\n      return 'right';\r\n    } else if (this.hasClass('ux-m-halign-center')) {\r\n      return 'center';\r\n    }\r\n\r\n    return 'left';\r\n  }\r\n\r\n  set horAlign(value) {\r\n    this.dom.removeClass('ux-m-halign-left');\r\n    this.dom.removeClass('ux-m-halign-right');\r\n    this.dom.removeClass('ux-m-halign-center');\r\n\r\n    this.dom.addClass('ux-m-halign-' + value);\r\n  }\r\n\r\n  get verAlign() {\r\n    if (this.dom.hasClass('ux-m-valign-bottom')) {\r\n      return 'bottom';\r\n    } else if (this.hasClass('ux-m-valign-center')) {\r\n      return 'center';\r\n    }\r\n\r\n    return 'top';\r\n  }\r\n\r\n  set verAlign(value) {\r\n    this.dom.removeClass('ux-m-valign-top');\r\n    this.dom.removeClass('ux-m-valign-bottom');\r\n    this.dom.removeClass('ux-m-valign-center');\r\n\r\n    this.dom.addClass('ux-m-valign-' + value);\r\n  }\r\n\r\n  createSlotDom(object) {\r\n    if (!(object instanceof Node)) {\r\n      throw new TypeError('createSlotDom(): 1 argument must be instance of Node')\r\n    }\r\n\r\n    const dom = jQuery('<div/>').append(object.dom);\r\n    dom.addClass('ux-slot');\r\n\r\n    dom.data('--wrapper', object);\r\n    object.dom.data('--wrapper-dom', dom);\r\n\r\n    const width = object.data('--width-percent');\r\n    const height = object.data('--height-percent');\r\n    const visible = object.css('display') !== 'none';\r\n\r\n    if (typeof width === 'string') {\r\n      dom.width(width);\r\n      object.dom.width('100%');\r\n    }\r\n\r\n    if (typeof height === 'string') {\r\n      dom.height(height);\r\n      object.dom.height('100%');\r\n    }\r\n\r\n    if (!visible) {\r\n      dom.hide();\r\n    }\r\n\r\n    return dom;\r\n  }\r\n\r\n  createDom() {\r\n    const dom = jQuery('<div></div>');\r\n    dom.addClass('ux-container');\r\n\r\n    return dom;\r\n  }\r\n\r\n  child(id) {\r\n    const dom = this.contentDom.find(`#${id}`);\r\n\r\n    if (dom && dom.length) {\r\n      return Node.getFromDom(dom);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  count() {\r\n    return this.contentDom.children().length;\r\n  }\r\n\r\n  children() {\r\n    const children = [];\r\n\r\n    this.contentDom.children().each(function () {\r\n      children.push(Node.getFromDom(jQuery(this)));\r\n    });\r\n\r\n    return children;\r\n  }\r\n\r\n  innerNodes() {\r\n    return this.children();\r\n  }\r\n\r\n  removeByIndex(index) {\r\n    const child = this.children()[index];\r\n    \r\n    if (child) {\r\n      child.free();\r\n    }\r\n  }\r\n\r\n  add(nodes) {\r\n    for (let i = 0; i < arguments.length; i++) {\r\n      this.contentDom.append(this.createSlotDom(arguments[i]));\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  insert(index, nodes) {\r\n    index = index | 0;\r\n\r\n    const children = this.contentDom.children();\r\n\r\n    if (!children.length || index >= children.length) {\r\n      return this.add(...Array.prototype.slice.call(arguments, 1));\r\n    }\r\n\r\n    nodes = Array.prototype.slice.call(arguments, 1);\r\n\r\n    let i = 0;\r\n    const self = this;\r\n\r\n    this.dom.children().each(function () {\r\n      if (index === i) {\r\n        for (let k = 0; k < nodes.length; k++) {\r\n          const slot = self.createSlotDom(nodes[k]);\r\n          slot.insertBefore(this);\r\n        }\r\n\r\n        return false;\r\n      }\r\n\r\n      i++;\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  clear() {\r\n    this.contentDom.empty();\r\n  }\r\n\r\n  show() {\r\n    this.dom.css('display', '');\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default Container;\r\n","import Container from './Container';\r\n\r\nclass HBox extends Container {\r\n\r\n  constructor(nodes) {\r\n    super(...arguments);\r\n\r\n    this.spacing = 0;\r\n    this.align = ['top', 'left'];\r\n  }\r\n\r\n  get fitHeight() {\r\n    return this.dom.hasClass('ux-m-fit-height');\r\n  }\r\n\r\n  set fitHeight(value) {\r\n    if (value) {\r\n      this.dom.addClass('ux-m-fit-height');\r\n    } else {\r\n      this.dom.removeClass('ux-m-fit-height');\r\n    }\r\n  }\r\n\r\n  get spacing() {\r\n    return this._spacing;\r\n  }\r\n\r\n  set spacing(value) {\r\n    this._spacing = value;\r\n    const slots = this.dom.find('> div');\r\n\r\n    slots.css('margin-right', value + 'px');\r\n    slots.last().css('margin-right', 0);\r\n  }\r\n\r\n  createDom() {\r\n    const dom = super.createDom();\r\n    dom.addClass('ux-h-box');\r\n\r\n    return dom;\r\n  }\r\n\r\n  createSlotDom(object) {\r\n    const dom = super.createSlotDom(object);\r\n    return dom;\r\n  }\r\n\r\n  add(nodes) {\r\n    super.add(...arguments);\r\n    this.spacing = this.spacing;\r\n  }\r\n\r\n  insert(index, nodes) {\r\n    super.insert(...arguments);\r\n    this.spacing = this.spacing;\r\n  }\r\n}\r\n\r\nexport default HBox;\r\n","import Labeled from \"./Labeled\";\r\n\r\n/**\r\n *\r\n */\r\nclass Hyperlink extends Labeled {\r\n  get href() {\r\n    return this.dom.attr('href');\r\n  }\r\n\r\n  set href(value) {\r\n    this.dom.attr('href', value);\r\n  }\r\n\r\n  get target() {\r\n    return this.dom.attr('target') || '_self';\r\n  }\r\n\r\n  set target(value) {\r\n    this.dom.attr('target', value);\r\n  }\r\n\r\n  createDom() {\r\n    const dom = jQuery('<a class=\"ux-labeled ux-hyperlink\" href><span class=\"ux-labeled-text\"></span></a>');\r\n    dom.on('click.Hyperlink', (e) => {\r\n      if (this.href === '#') {\r\n        e.preventDefault();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default Hyperlink;","import Node from './Node';\r\nimport Utils from \"./util/Utils\";\r\n\r\nclass Icon extends Node {\r\n  get kind() {\r\n    this.dom.text();\r\n  }\r\n\r\n  set kind(value) {\r\n    this.dom.text(value);\r\n  }\r\n\r\n  get color() {\r\n    return this.dom.css('color') || 'black';\r\n  }\r\n\r\n  set color(value) {\r\n    this.dom.css('color', value);\r\n  }\r\n\r\n  get imageSize() {\r\n    return Utils.toPt(this.dom.css('font-size'));\r\n  }\r\n\r\n  set imageSize(value) {\r\n    this.dom.css('font-size', value);\r\n  }\r\n\r\n  createDom() {\r\n    return jQuery('<i class=\"material-icons ux-icon\"></i>');\r\n  }\r\n}\r\n\r\nexport default Icon;","import Node from './Node';\r\n\r\nclass ImageView extends Node {\r\n\r\n  constructor(image) {\r\n    super();\r\n\r\n    this.proportional = true;\r\n    this.displayType = 'origin';\r\n\r\n    if (image !== undefined) {\r\n      this.source = image;\r\n    }\r\n  }\r\n\r\n  get source() {\r\n    let source = this.dom.css('background-image');\r\n\r\n    if (source) {\r\n      source = /^url\\((['\"]?)(.*)\\1\\)$/.exec(source);\r\n      return source ? source[2] : null;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  set source(value) {\r\n    this.dom.css({'background-image': `url('${value}')`});\r\n\r\n    if (this.displayType === 'origin') {\r\n      this.dom.find('img').attr('src', value);\r\n    }\r\n  }\r\n\r\n  get centered() {\r\n    return this.dom.css('background-position') === '50% 50%';\r\n  }\r\n\r\n  set centered(value) {\r\n    this.dom.css('background-position', value ? '50% 50%' : '0 0');\r\n  }\r\n\r\n  get displayType() {\r\n    switch (this.dom.css('background-size')) {\r\n      case '100% 100%': return 'filled';\r\n      case 'cover': return 'cropped';\r\n      case 'resized': return 'resized';\r\n\r\n      case 'auto':\r\n      case 'auto auto': return 'origin';\r\n\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  set displayType(type) {\r\n    this.dom.find('img').remove();\r\n\r\n    switch (type.toString().toLowerCase()) {\r\n      case 'filled':\r\n        this.dom.css('background-size', `100% 100%`);\r\n        break;\r\n      case 'cropped':\r\n        this.dom.css('background-size', 'cover');\r\n        break;\r\n      case 'resized':\r\n        this.dom.css('background-size', 'contain');\r\n        break;\r\n      case 'origin':\r\n        const source = this.source;\r\n        this.dom.css('background-size', 'auto auto');\r\n        this.dom.append(jQuery('<img style=\"visibility: hidden\" />'));\r\n        this.source = source;\r\n        break;\r\n    }\r\n  }\r\n\r\n  createDom() {\r\n    const dom = jQuery('<div></div>');\r\n    dom.addClass('ux-image-view');\r\n\r\n    dom.css({\r\n      display: 'inline-block',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundSize: '100% 100%',\r\n      backgroundPosition: '0 0'\r\n    });\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default ImageView;\r\n","import Labeled from './Labeled';\r\n\r\n\r\nclass Label extends Labeled {\r\n\r\n  createDom() {\r\n      const dom = jQuery('<span class=\"ux-labeled ux-label\"><span class=\"ux-labeled-text\"></span></span>');\r\n      return dom;\r\n  }\r\n}\r\n\r\nexport default Label;\r\n","import Node from './Node';\r\nimport Font from './paint/Font';\r\nimport ImageView from './ImageView';\r\nimport Utils from './util/Utils';\r\n\r\nclass Labeled extends Node {\r\n  constructor(text, graphic) {\r\n    super();\r\n    this.textPreFormatted = false;\r\n    this.textType = 'text';\r\n    this.contentDisplay = 'left';\r\n    this.graphicTextGap = 4;\r\n    this.graphic = graphic;\r\n    this.text = text;\r\n    this.align = ['center', 'center'];\r\n  }\r\n\r\n  get font() {\r\n    return Font.getFromDom(this.dom);\r\n  }\r\n\r\n  set font(value) {\r\n    Font.applyToDom(this.dom, value);\r\n  }\r\n\r\n  get align() {\r\n    return [this.verAlign, this.horAlign];\r\n  }\r\n\r\n  set align(value) {\r\n    if (value instanceof Array && value.length >= 2) {\r\n      this.horAlign = value[1];\r\n      this.verAlign = value[0];\r\n    }\r\n  }\r\n\r\n  get horAlign() {\r\n    if (this.dom.hasClass('ux-m-halign-right')) {\r\n      return 'right';\r\n    } else if (this.hasClass('ux-m-halign-center')) {\r\n      return 'center';\r\n    }\r\n\r\n    return 'left';\r\n  }\r\n\r\n  set horAlign(value) {\r\n    this.dom.removeClass('ux-m-halign-left');\r\n    this.dom.removeClass('ux-m-halign-right');\r\n    this.dom.removeClass('ux-m-halign-center');\r\n\r\n    this.dom.addClass('ux-m-halign-' + value);\r\n  }\r\n\r\n  get verAlign() {\r\n    if (this.dom.hasClass('ux-m-valign-bottom')) {\r\n      return 'bottom';\r\n    } else if (this.hasClass('ux-m-valign-center')) {\r\n      return 'center';\r\n    }\r\n\r\n    return 'top';\r\n  }\r\n\r\n  set verAlign(value) {\r\n    this.dom.removeClass('ux-m-valign-top');\r\n    this.dom.removeClass('ux-m-valign-bottom');\r\n    this.dom.removeClass('ux-m-valign-center');\r\n\r\n    this.dom.addClass('ux-m-valign-' + value);\r\n  }\r\n\r\n  get text() {\r\n    let dom = this.dom.find('span.ux-labeled-text');\r\n\r\n    if (this.textPreFormatted) {\r\n      dom = dom.find('> pre');\r\n    }\r\n\r\n    switch (this.textType) {\r\n      case 'text':\r\n        return dom.text();\r\n      case 'html':\r\n        return dom.html();\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  set text(value) {\r\n    let dom = this.dom.find('span.ux-labeled-text');\r\n\r\n    if (this.textPreFormatted) {\r\n      dom = dom.find('> pre');\r\n    }\r\n\r\n    switch (this.textType) {\r\n      case 'text':\r\n        dom.text(value);\r\n        break;\r\n\r\n      case 'html':\r\n        dom.html(value);\r\n        break;\r\n    }\r\n  }\r\n\r\n  get textPreFormatted() {\r\n    return this.dom.find('span.ux-labeled-text').has('> pre').length > 0;\r\n  }\r\n\r\n  set textPreFormatted(value) {\r\n    if (this.textPreFormatted === value) {\r\n      return;\r\n    }\r\n\r\n    const dom = this.dom.find('span.ux-labeled-text');\r\n    if (value) {\r\n      dom.html('<pre>' + dom.html() + '</pre>');\r\n    } else {\r\n      dom.html(dom.find('> pre').html());\r\n    }\r\n  }\r\n\r\n  get textColor() {\r\n    return this.dom.css('color');\r\n  }\r\n\r\n  set textColor(value) {\r\n    this.dom.css('color', value ? value : '');\r\n  }\r\n\r\n  get textType() {\r\n    return this._textType;\r\n  }\r\n\r\n  set textType(value) {\r\n    const text = this.text;\r\n    const graphic = this.graphic;\r\n\r\n    if (value) {\r\n      this._textType = value.toString().toLowerCase();\r\n    } else {\r\n      this._textType = 'text';\r\n    }\r\n\r\n    this.text = text;\r\n    this.graphic = graphic;\r\n  }\r\n\r\n  get contentDisplay() {\r\n    if (this.dom.first().hasClass('ux-graphic')) {\r\n      if (this.dom.hasClass('ux-labeled-vertical')) {\r\n        return 'top';\r\n      } else {\r\n        return 'left';\r\n      }\r\n    } else if (this.dom.last().hasClass('ux-graphic')) {\r\n      if (this.dom.hasClass('ux-labeled-vertical')) {\r\n        return 'bottom';\r\n      } else {\r\n        return 'right';\r\n      }\r\n    } else {\r\n      return this._contentDisplay;\r\n    }\r\n  }\r\n\r\n  set contentDisplay(value) {\r\n    const graphic = this.graphic;\r\n    const graphicGap = this.graphicTextGap;\r\n    this._contentDisplay = value;\r\n\r\n    switch (value) {\r\n      case 'top':\r\n      case 'bottom':\r\n        this.dom.addClass('ux-labeled-vertical');\r\n        break;\r\n\r\n      case 'right':\r\n        this.dom.removeClass('ux-labeled-vertical');\r\n        break;\r\n\r\n      case 'left':\r\n      default:\r\n        this.dom.removeClass('ux-labeled-vertical');\r\n        this._contentDisplay = 'left';\r\n        break;\r\n    }\r\n\r\n    this.graphic = graphic;\r\n    this.graphicTextGap = graphicGap;\r\n  }\r\n\r\n  get graphicTextGap() {\r\n    const grDom = this.dom.find('.ux-graphic');\r\n\r\n    if (grDom.length) {\r\n      let prop = 'margin-right';\r\n\r\n      switch (this.contentDisplay) {\r\n        case 'bottom':\r\n          prop = 'margin-top';\r\n          break;\r\n        case 'right':\r\n          prop = 'margin-left';\r\n          break;\r\n        case 'top':\r\n          prop = 'margin-bottom';\r\n          break;\r\n      }\r\n\r\n      return Utils.toPt(grDom.css(prop));\r\n    } else {\r\n      return this._graphicGap;\r\n    }\r\n  }\r\n\r\n  set graphicTextGap(value) {\r\n    this._graphicGap = value;\r\n\r\n    const grDom = this.dom.find('.ux-graphic');\r\n\r\n    if (grDom.length) {\r\n      grDom.css('margin', 0);\r\n\r\n      let prop = 'margin-right';\r\n\r\n      switch (this.contentDisplay) {\r\n        case 'bottom':\r\n          prop = 'margin-top';\r\n          break;\r\n        case 'right':\r\n          prop = 'margin-left';\r\n          break;\r\n        case 'top':\r\n          prop = 'margin-bottom';\r\n          break;\r\n      }\r\n\r\n      grDom.css(prop, value + 'px');\r\n    }\r\n  }\r\n\r\n  get graphic() {\r\n    return Node.getFromDom(this.dom.find('.ux-graphic > *').first());\r\n  }\r\n\r\n  set graphic(node) {\r\n    const graphicGap = this.graphicTextGap;\r\n    this.dom.find('.ux-graphic').remove();\r\n\r\n    if (node) {\r\n      if (typeof node === 'string' || node instanceof String) {\r\n        node = new ImageView(node);\r\n      }\r\n\r\n      const dom = jQuery('<span class=\"ux-graphic\" />').append(node.dom);\r\n\r\n      switch (this.contentDisplay) {\r\n        case 'top':\r\n        case 'left':\r\n          this.dom.prepend(dom);\r\n          break;\r\n        case 'bottom':\r\n        case 'right':\r\n          this.dom.append(dom);\r\n          break;\r\n      }\r\n\r\n      this.graphicTextGap = graphicGap;\r\n    }\r\n  }\r\n\r\n  innerNodes() {\r\n    const result = [];\r\n\r\n    if (this.graphic) {\r\n      result.push(this.graphic);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default Labeled;\r\n","import Container from './Container';\r\nimport Node from './Node';\r\nimport AppMediator from '../NX/AppMediator';\r\nimport Font from \"./paint/Font\";\r\n\r\nclass ListView extends Container {\r\n  constructor() {\r\n    super();\r\n\r\n    this.spacing = 0;\r\n    this.align = ['center', 'left'];\r\n\r\n    this.dom.on('change.ListView', () => {\r\n      const data = {\r\n        selected: this.selected,\r\n        selectedIndex: this.selectedIndex\r\n      };\r\n\r\n      AppMediator.sendUserInput(this, data, () => {\r\n        this.trigger('action');\r\n      });\r\n    })\r\n  }\r\n\r\n  get font() {\r\n    return Font.getFromDom(this.dom);\r\n  }\r\n\r\n  set font(value) {\r\n    Font.applyToDom(this.dom, value);\r\n  }\r\n\r\n  get selectedIndex() {\r\n    let index = -1;\r\n    let result = -1;\r\n\r\n    this.dom.find('> .ux-slot').each(function () {\r\n      index++;\r\n\r\n      if (jQuery(this).hasClass('active')) {\r\n        result = index;\r\n        return true;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  set selectedIndex(value) {\r\n    const children = this.children();\r\n\r\n    if (value >= 0 && value < children.length) {\r\n      this.selected = children[value];\r\n    } else {\r\n      this.selected = null;\r\n    }\r\n  }\r\n\r\n  get selected() {\r\n    const dom = this.dom.find('> .ux-slot.active').first();\r\n\r\n    if (dom) {\r\n      return Node.getFromDom(dom);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  set selected(object) {\r\n    this.dom.find('> .ux-slot.active').removeClass('active');\r\n\r\n    if (object instanceof Node) {\r\n      object.dom.closest('.ux-slot').addClass('active');\r\n    }\r\n  }\r\n\r\n  createDom() {\r\n    const dom = super.createDom();\r\n    dom.addClass('list-group');\r\n    dom.addClass('ux-list-view');\r\n    return dom;\r\n  }\r\n\r\n  createSlotDom(object) {\r\n    if (!(object instanceof Node)) {\r\n      throw new TypeError('createSlotDom(): 1 argument must be instance of Node')\r\n    }\r\n\r\n    const dom = jQuery('<span class=\"list-group-item ux-slot\" />').append(object.dom);\r\n\r\n    dom.on('click.ListView', (e) => {\r\n      dom.closest('.ux-list-view').find('> .ux-slot').removeClass('active');\r\n      dom.addClass('active');\r\n\r\n      this.trigger('change');\r\n      e.preventDefault();\r\n      return false;\r\n    });\r\n\r\n    dom.data('--wrapper', object);\r\n    object.dom.data('--wrapper-dom', dom);\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default ListView;\r\n","import SelectControl from './SelectControl';\r\n\r\nclass Listbox extends SelectControl {\r\n\r\n  createDom() {\r\n    var dom = super.createDom();\r\n    dom.prop('multiple', true);\r\n    dom.addClass('ux-listbox');\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default Listbox;\r\n","import Utils from './util/Utils';\r\nimport UILoader from \"../NX/UILoader\";\r\n\r\nconst KEY_CODES = {\r\n  Enter: 13,\r\n  Backspace: 8,\r\n  Tab: 9,\r\n  Cancel: 0x03,\r\n  Clear: 0x0C,\r\n  Shift: 0x10,\r\n  Ctrl: 0x11,\r\n  Alt: 0x12,\r\n  Pause: 0x13,\r\n  CapsLock: 0x14,\r\n  Esc: 0x1B,\r\n  Escape: 0x1B,\r\n  Space: 0x20,\r\n  PageUp: 0x21,\r\n  PageDown: 0x22,\r\n  End: 0x23,\r\n  Home: 0x24,\r\n  Left: 0x25,\r\n  Up: 0x26,\r\n  Right: 0x27,\r\n  Down: 0x28,\r\n  Comma:0x2C,\r\n  Delete: 0x7F,\r\n  F1: 0x70, F2: 0x71, F3: 0x72, F4: 0x73, F5: 0x74, F6: 0x75, F7: 0x76, F8: 0x77, F9: 0x78, F10: 0x79, F11: 0x7A, F12: 0x7B,\r\n  PrintScreen: 0x9A,\r\n  Insert: 0x9B\r\n};\r\n\r\n/**\r\n * Base HTML Node class.\r\n **/\r\nclass Node {\r\n  constructor(dom) {\r\n    this.__observers = [];\r\n\r\n    if (dom === undefined) {\r\n      this.dom = this.createDom();\r\n\r\n      if (!(this.dom instanceof jQuery)) {\r\n        throw new Error(\"Method createDom() must return instance of an jQuery object\");\r\n      }\r\n    } else {\r\n      if (dom instanceof jQuery) {\r\n        this.dom = dom;\r\n      } else {\r\n        throw new Error(\"Non-jquery object cannot be passed into Node.construct()\");\r\n      }\r\n    }\r\n\r\n    this.dom.data('--wrapper', this);\r\n\r\n    this.dom.on('dblclick.Node', (e) => {\r\n      this.trigger('click-2x', e);\r\n    });\r\n\r\n    this.dom.on('click.Node', (e) => {\r\n      switch (e.which) {\r\n        case 1:\r\n          this.trigger('click-left', e); break;\r\n        case 2:\r\n          this.trigger('click-middle', e); break;\r\n        case 3:\r\n          this.trigger('click-right', e); break;\r\n      }\r\n    });\r\n\r\n    const keyEventBuilder = (event) => {\r\n      return (e) => {\r\n        let found = false;\r\n\r\n        for (let key in KEY_CODES) {\r\n          const value = KEY_CODES[key];\r\n\r\n          if (value === e.keyCode) {\r\n            this.trigger(event + '-' + key.toLowerCase(), e);\r\n\r\n            if (event.shiftKey) this.trigger(`${event}-shift+${key.toLowerCase()}`, e);\r\n            if (event.ctrlKey) this.trigger(`${event}-ctrl+${key.toLowerCase()}`, e);\r\n            if (event.altKey) this.trigger(`${event}-alt+${key.toLowerCase()}`, e);\r\n\r\n            found = true;\r\n          }\r\n        }\r\n\r\n        switch (event.keyCode) {\r\n          case KEY_CODES.Up:\r\n          case KEY_CODES.Right:\r\n          case KEY_CODES.Down:\r\n          case KEY_CODES.Left:\r\n            this.trigger(event + '-anydirection', e);\r\n\r\n            if (event.shiftKey) this.trigger(`${event}-shift+anydirection`, e);\r\n            if (event.ctrlKey) this.trigger(`${event}-ctrl+anydirection`, e);\r\n            if (event.altKey) this.trigger(`${event}-alt+anydirection`, e);\r\n\r\n            break;\r\n        }\r\n\r\n        if (event.hasOwnProperty('char') && !found) {\r\n          const char = event.char.toString().toLowerCase();\r\n          this.trigger(event + '-' + char, e);\r\n\r\n          if (event.shiftKey) this.trigger(`${event}-shift+${char}`, e);\r\n          if (event.ctrlKey) this.trigger(`${event}-ctrl+${char}`, e);\r\n          if (event.altKey) this.trigger(`${event}-alt+${char}`, e);\r\n\r\n          if ('0123456789'.indexOf(char) > -1) {\r\n            this.trigger(event + '-anydigit', e);\r\n\r\n            if (event.shiftKey) this.trigger(`${event}-shift+anydigit`, e);\r\n            if (event.ctrlKey) this.trigger(`${event}-ctrl+anydigit`, e);\r\n            if (event.altKey) this.trigger(`${event}-alt+anydigit`, e);\r\n          }\r\n\r\n          if ('qwertyuiopasdfghjklzxcvbnm'.indexOf(char) > -1) {\r\n            this.trigger(event + '-anyletter', e);\r\n\r\n            if (event.shiftKey) this.trigger(`${event}-shift+anyletter`, e);\r\n            if (event.ctrlKey) this.trigger(`${event}-ctrl+anyletter`, e);\r\n            if (event.altKey) this.trigger(`${event}-alt+anyletter`, e);\r\n          }\r\n        }\r\n      };\r\n    };\r\n\r\n    this.dom.on('keydown.Node', keyEventBuilder('keydown'));\r\n    this.dom.on('keyup.Node', keyEventBuilder('keyup'));\r\n  }\r\n\r\n  /**\r\n   * @param {function} handler\r\n   */\r\n  __forEachObservers(handler) {\r\n    for (let observer of this.__observers) {\r\n      handler(observer);\r\n    }\r\n  }\r\n\r\n  __triggerPropertyChange(name, newValue) {\r\n    this.__forEachObservers(observer => {\r\n      const oldValue = this[name];\r\n      observer.triggerPropertyChange(name, oldValue, newValue)\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @returns {string}\r\n   */\r\n  get uuid() {\r\n    return this.dom.attr('uuid')\r\n  }\r\n\r\n  /**\r\n   * @param {string} value\r\n   */\r\n  set uuid(value) {\r\n    this.dom.removeClass(this.uuid);\r\n    this.dom.attr('uuid', value);\r\n    this.dom.addClass(value);\r\n  }\r\n\r\n  get id() {\r\n    return this.dom.attr('id')\r\n  }\r\n\r\n  set id(value) {\r\n    this.dom.attr('id', value);\r\n  }\r\n\r\n  /**\r\n   * @returns {Array}\r\n   */\r\n  get classes() {\r\n    return this.dom.data('custom-classes') || [];\r\n  }\r\n\r\n  /**\r\n   * @param {Array} value\r\n   */\r\n  set classes(value) {\r\n    const oldClasses = this.classes;\r\n    let classes = [];\r\n\r\n    if (value instanceof Array) {\r\n      classes = value;\r\n    } else {\r\n      classes = value.toString().split(' ');\r\n    }\r\n\r\n    this.dom.data('custom-classes', classes);\r\n\r\n    if (oldClasses.length > 0) {\r\n      this.dom.removeClass(oldClasses.join(' '));\r\n    }\r\n\r\n    this.dom.addClass(classes.join(' '));\r\n  }\r\n\r\n  get style() {\r\n    return this.dom.attr('style');\r\n  }\r\n\r\n  set style(value) {\r\n    this.dom.attr('style', value);\r\n  }\r\n\r\n  get visible() {\r\n    let dom = this.dom;\r\n\r\n    if (this.dom.data('--wrapper-dom')) {\r\n      dom = this.dom.data('--wrapper-dom');\r\n    }\r\n\r\n    return dom.is(':visible');\r\n  }\r\n\r\n  set visible(value) {\r\n    if (value) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  get opacity() {\r\n    return this.dom.css('opacity');\r\n  }\r\n\r\n  set opacity(value) {\r\n    this.dom.css('opacity', value);\r\n  }\r\n\r\n  get enabled() {\r\n    return !this.dom.prop(\"disabled\");\r\n  }\r\n\r\n  set enabled(value) {\r\n    this.dom.prop('disabled', !value);\r\n  }\r\n\r\n  get selectionEnabled() {\r\n    return this.dom.css('user-select') !== 'none';\r\n  }\r\n\r\n  set selectionEnabled(value) {\r\n    this.dom.css('user-select', value ? '' : 'none');\r\n  }\r\n\r\n  get focused() {\r\n    return this.dom.is(':focus');\r\n  }\r\n\r\n  get x() {\r\n    return this.dom.position().left;\r\n  }\r\n\r\n  set x(value) {\r\n    this.dom.css({left: value});\r\n  }\r\n\r\n  get y() {\r\n    return this.dom.position().top;\r\n  }\r\n\r\n  set y(value) {\r\n    this.dom.css({top: value});\r\n  }\r\n\r\n  get position() {\r\n    return [this.x, this.y];\r\n  }\r\n\r\n  set position(value) {\r\n    if (value instanceof Array && value.length >= 2) {\r\n      this.x = value[0];\r\n      this.y = value[1];\r\n    }\r\n  }\r\n\r\n  get width() {\r\n    if (this.data('--width-percent')) {\r\n      return this.data('--width-percent');\r\n    }\r\n\r\n    return this.dom.width()\r\n  }\r\n\r\n  set width(value) {\r\n    this.dom.width(value);\r\n\r\n    if (typeof value === 'string' && value.indexOf('%') > -1) {\r\n      this.data('--width-percent', value);\r\n\r\n      const wrapperDom = this.dom.data('--wrapper-dom');\r\n      if (wrapperDom) {\r\n        this.dom.width('100%');\r\n      }\r\n    } else {\r\n      this.data('--width-percent', null);\r\n    }\r\n  }\r\n\r\n  get height() {\r\n    if (this.data('--height-percent')) {\r\n      return this.data('--height-percent');\r\n    }\r\n\r\n    return this.dom.height()\r\n  }\r\n\r\n  set height(value) {\r\n    this.dom.height(value);\r\n\r\n    if (typeof value === 'string' && value.indexOf('%') > -1) {\r\n      this.data('--height-percent', value);\r\n\r\n      const wrapperDom = this.dom.data('--wrapper-dom');\r\n      if (wrapperDom) {\r\n        this.dom.height('100%');\r\n      }\r\n    } else {\r\n      this.data('--height-percent', null);\r\n    }\r\n  }\r\n\r\n  get size() {\r\n    return [this.width, this.height]\r\n  }\r\n\r\n  set size(value) {\r\n    if (value instanceof Array && value.length >= 2) {\r\n      this.width = value[0];\r\n      this.height = value[1];\r\n    }\r\n  }\r\n\r\n  get tooltip() {\r\n    return this.dom.data('tooltip');\r\n  }\r\n\r\n  __setTooltip(tooltip) {\r\n    this.dom.data('--tooltip', tooltip);\r\n\r\n    /*if (this.dom.data('bs.tooltip')) {\r\n      this.dom.tooltip('dispose');\r\n    }*/\r\n\r\n    if (tooltip) {\r\n      const options = jQuery.extend({},\r\n        { title: tooltip instanceof Node ? tooltip.dom : tooltip },\r\n        this.tooltipOptions\r\n      );\r\n\r\n      this.dom.tooltip(options);\r\n    }\r\n  }\r\n\r\n  set tooltip(tooltip) {\r\n    if (this.tooltip === tooltip) return;\r\n\r\n    this.__setTooltip(tooltip);\r\n  }\r\n\r\n  get tooltipOptions() {\r\n    return this.dom.data('--tooltipOptions') || {};\r\n  }\r\n\r\n  set tooltipOptions(options) {\r\n    this.dom.data('--tooltipOptions', options || {});\r\n    this.__setTooltip(this.tooltip);\r\n  }\r\n\r\n  get padding() {\r\n    return [\r\n      Utils.toPt(this.dom.css('padding-top')),\r\n      Utils.toPt(this.dom.css('padding-right')),\r\n      Utils.toPt(this.dom.css('padding-bottom')),\r\n      Utils.toPt(this.dom.css('padding-left'))\r\n    ];\r\n  }\r\n\r\n  set padding(value) {\r\n    if (value instanceof Array) {\r\n      if (value.length >= 4) {\r\n        this.dom.css({\r\n          'padding-top': value[0], 'padding-right': value[1],\r\n          'padding-bottom': value[2], 'padding-left': value[3]\r\n        });\r\n      } else if (value.length >= 2) {\r\n        this.dom.css({\r\n          'padding-top': value[0], 'padding-right': value[1],\r\n          'padding-bottom': value[0], 'padding-left': value[1]\r\n        });\r\n      } else if (value.length >= 1) {\r\n        this.dom.css('padding', value[0]);\r\n      } else {\r\n        this.dom.css('padding', 0);\r\n      }\r\n    } else {\r\n      this.dom.css('padding', value);\r\n    }\r\n  }\r\n\r\n  get cursor() {\r\n    return this.dom.css('cursor');\r\n  }\r\n\r\n  set cursor(value) {\r\n    this.dom.css('cursor', value);\r\n  }\r\n\r\n  get parent() {\r\n    let parent = null;\r\n\r\n    if (this.dom.data('--wrapper-dom')) {\r\n      parent = this.dom.data('--wrapper-dom').parent();\r\n    } else {\r\n      parent = this.dom.parent();\r\n    }\r\n\r\n    if (!parent) {\r\n      return null;\r\n    }\r\n\r\n    return Node.getFromDom(parent);\r\n  }\r\n\r\n  get userData() {\r\n    return this.dom.data('--user-data');\r\n  }\r\n\r\n  set userData(value) {\r\n    this.dom.data('--user-data', value);\r\n  }\r\n\r\n  createDom() {\r\n    throw new Error(\"Cannot call abstract method createDom()\");\r\n  }\r\n\r\n  requestFocus() {\r\n    this.focus();\r\n  }\r\n\r\n  relocate(x, y) {\r\n    this.position = [x, y];\r\n  }\r\n\r\n  resize(width, height) {\r\n    this.size = [width, height];\r\n  }\r\n\r\n  focus() {\r\n    this.dom.focus();\r\n  }\r\n\r\n  css(value) {\r\n    return this.dom.css(...arguments);\r\n  }\r\n\r\n  data(params) {\r\n    if (arguments.length === 1) {\r\n      return this.dom.data(...arguments);\r\n    } else {\r\n      this.dom.data(...arguments);\r\n      return this;\r\n    }\r\n  }\r\n\r\n  lookup(selector) {\r\n    const dom = this.dom.find(selector).first();\r\n\r\n    if (dom) {\r\n      return Node.getFromDom(dom);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  lookupAll(selector) {\r\n    const nodes = [];\r\n\r\n    this.dom.find(selector).each(() => {\r\n      nodes.push(Node.getFromDom(this));\r\n    });\r\n\r\n    return nodes;\r\n  }\r\n\r\n  toFront() {\r\n    const parent = this.parent;\r\n\r\n    if (parent) {\r\n      if (parent['childToFront']) {\r\n        parent.childToFront(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  toBack() {\r\n    const parent = this.parent;\r\n\r\n    if (parent) {\r\n      if (parent['childToBack']) {\r\n        parent.childToBack(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  free() {\r\n    const wrapperDom = this.dom.data('--wrapper-dom');\r\n\r\n    if (wrapperDom) {\r\n      wrapperDom.remove();\r\n    } else {\r\n      this.dom.detach();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  show() {\r\n    let dom = this.dom;\r\n    dom.css('display', '');\r\n\r\n    if (this.dom.data('--wrapper-dom')) {\r\n      dom = this.dom.data('--wrapper-dom');\r\n      dom.css('display', '');\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  hide() {\r\n    let dom = this.dom;\r\n    dom.hide();\r\n\r\n    if (this.dom.data('--wrapper-dom')) {\r\n      dom = this.dom.data('--wrapper-dom');\r\n      dom.hide();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  toggle() {\r\n    if (this.visible) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {object} properties\r\n   * @param {object} options\r\n   */\r\n  animate(properties, options) {\r\n    this.dom.animate(properties, options);\r\n  }\r\n\r\n  on(event, callback) {\r\n    this.dom.on(event, (event) => {\r\n      event.sender = this;\r\n      callback.call(this, event);\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {string} event\r\n   * @returns {Node}\r\n   */\r\n  off(event) {\r\n    this.dom.off(event);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {string} event\r\n   * @param params\r\n   * @returns {*}\r\n   */\r\n  trigger(event, params) {\r\n    return this.dom.trigger(event, params);\r\n  }\r\n\r\n  /**\r\n   * @param {string} id\r\n   * @returns {Node}\r\n   */\r\n  child(id) {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Returns inner Nodes as array.\r\n   * @returns {Array}\r\n   */\r\n  innerNodes() {\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * @param object\r\n   */\r\n  loadSchema(object) {\r\n    for (const prop in object) {\r\n      if (object.hasOwnProperty(prop)) {\r\n        if (prop[0] === '_') {\r\n          continue;\r\n        }\r\n\r\n        let value = object[prop];\r\n\r\n        if (value.hasOwnProperty('_')) {\r\n          const uiLoader = new UILoader();\r\n          value = uiLoader.load(value);\r\n        }\r\n\r\n        switch (prop) {\r\n          default:\r\n            this[prop] = value;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (object.classes) {\r\n      this.classes = object.classes;\r\n    }\r\n  }\r\n\r\n  static getFromDom(jqueryObject) {\r\n    if (jqueryObject === null || jqueryObject.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    if (jqueryObject instanceof jQuery) {\r\n      let wrapper = jqueryObject.data('--wrapper');\r\n      return wrapper ? wrapper : new Node(jqueryObject);\r\n    }\r\n\r\n    throw new Error(\"Node.getFromDom(): 1 argument must be an jQuery object\");\r\n  }\r\n}\r\n\r\nexport default Node;\r\n","import TextInputControl from './TextInputControl';\r\n\r\nclass PasswordField extends TextInputControl {\r\n  createDom() {\r\n    var dom = jQuery('<input type=\"password\" class=\"form-control ux-text-input-control ux-password-field\" />');\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default PasswordField;\r\n","import Node from './Node';\r\nimport Utils from './util/Utils';\r\n\r\nclass ProgressBar extends Node {\r\n  get progress() {\r\n    return Utils.toPt(this.dom.find('> .progress-bar').css('width'));\r\n  }\r\n\r\n  set progress(value) {\r\n    this.dom.find('> .progress-bar').css('width', value + '%');\r\n  }\r\n\r\n  get kind() {\r\n    const dom = this.dom.find('> .progress-bar');\r\n\r\n    if (dom.hasClass('progress-bar-success')) {\r\n      return 'success';\r\n    } else if (dom.hasClass('progress-bar-info')) {\r\n      return 'info';\r\n    } else if (dom.hasClass('progress-bar-warning')) {\r\n      return 'warning';\r\n    } else if (dom.hasClass('progress-bar-danger')) {\r\n      return 'danger';\r\n    }\r\n\r\n    return 'default';\r\n  }\r\n\r\n  set kind(value) {\r\n    const dom = this.dom.find('> .progress-bar');\r\n    \r\n    dom.removeClass(`progress-bar-${this.kind}`);\r\n    dom.addClass(`progress-bar-${value}`);\r\n  }\r\n\r\n  get animated() {\r\n    const dom = this.dom.find('> .progress-bar');\r\n    return dom.hasClass('active');\r\n  }\r\n\r\n  set animated(value) {\r\n    const dom = this.dom.find('> .progress-bar');\r\n\r\n    if (value) {\r\n      dom.addClass('active');\r\n    } else {\r\n      dom.removeClass('active');\r\n    }\r\n  }\r\n\r\n  get striped() {\r\n    const dom = this.dom.find('> .progress-bar');\r\n    return dom.hasClass('progress-bar-striped');\r\n  }\r\n\r\n  set striped(value) {\r\n    const dom = this.dom.find('> .progress-bar');\r\n\r\n    if (value) {\r\n      dom.addClass('progress-bar-striped');\r\n    } else {\r\n      dom.removeClass('progress-bar-striped');\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    let width = this.dom.find('> .progress-bar').css('width');\r\n\r\n    if (!width) {\r\n      return 0;\r\n    }\r\n\r\n    return parseInt(width);\r\n  }\r\n\r\n  set value(v) {\r\n    this.dom.find('> .progress-bar').css('width', v + \"%\");\r\n  }\r\n\r\n  createDom() {\r\n    const dom = jQuery('<div class=\"progress ux-progress-bar\"><div class=\"progress-bar\" role=\"progressbar\"></div></div>');\r\n\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default ProgressBar;\r\n","import Node from './Node';\r\nimport AppMediator from '../NX/AppMediator';\r\n\r\nexport default class SelectControl extends Node {\r\n  constructor(items) {\r\n    super();\r\n\r\n    if (items) {\r\n      this.items = items;\r\n    }\r\n\r\n    this.dom.on('change.SelectControl', (e) => {\r\n      AppMediator.sendUserInput(this, {selected: this.selected, selectedText: this.selectedText}, () => {\r\n        this.trigger('action', e);\r\n      });\r\n    });\r\n  }\r\n\r\n  get items() {\r\n    const result = {};\r\n\r\n    this.dom.find('option').each(function () {\r\n      result[jQuery(this).attr('value')] = jQuery(this).text();\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  set items(value) {\r\n    this.dom.find('option').remove();\r\n\r\n    for (const key in value) {\r\n      if (value.hasOwnProperty(key)) {\r\n        this.dom.append(jQuery(`<option value='${key}'>${value[key]}</option>`));\r\n      }\r\n    }\r\n  }\r\n\r\n  get selected() {\r\n    return this.dom.val();\r\n  }\r\n\r\n  set selected(value) {\r\n    this.dom.val(value);\r\n  }\r\n\r\n  get selectedText() {\r\n    return this.dom.find('option:selected').text();\r\n  }\r\n\r\n  set selectedText(value) {\r\n    this.selected = null;\r\n\r\n    this.dom.find('option').each(function () {\r\n      if (jQuery(this).text() === value) {\r\n        jQuery(this).prop('selected', true);\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  loadSchema(object) {\r\n    super.loadSchema(object);\r\n\r\n    if (object.hasOwnProperty('selected')) {\r\n      this.selected = object.selected;\r\n    }\r\n\r\n    if (object.hasOwnProperty('selectedText')) {\r\n      this.selectedText = object.selectedText;\r\n    }\r\n  }\r\n\r\n  createDom() {\r\n    const dom = jQuery('<select class=\"form-control ux-select-control\">');\r\n    return dom;\r\n  }\r\n}\r\n","\r\nimport Checkbox from \"./Checkbox\";\r\nimport AppMediator from \"../NX/AppMediator\";\r\nimport Utils from \"./util/Utils\";\r\n\r\nconst KINDS = [\r\n  'success', 'primary', 'secondary', 'info', 'warning', 'danger', 'link', 'dark', 'light'\r\n];\r\n\r\nclass Switch extends Checkbox {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  get iconSize() {\r\n    return Utils.toPt(this.dom.find('label').css('font-size'));\r\n  }\r\n\r\n  set iconSize(value) {\r\n    const dom = this.dom.find('label');\r\n    dom.css('font-size', value);\r\n\r\n    const labeled = this.dom.find('.ux-labeled-text');\r\n\r\n    if (this.iconDisplay === 'left') {\r\n      labeled.css('padding-left', value * 2.5);\r\n    } else {\r\n      labeled.css('padding-left', '');\r\n    }\r\n  }\r\n\r\n  set kind(value) {\r\n    if (!value) {\r\n      value = 'default';\r\n    }\r\n\r\n    const dom = this.dom.find('label');\r\n\r\n    dom.removeClass(`badge-${this.kind}`);\r\n\r\n    if (value) {\r\n      dom.addClass(`badge-${value}`);\r\n    }\r\n  }\r\n\r\n  get kind() {\r\n    const dom = this.dom.find('label');\r\n\r\n    for (let kind of KINDS) {\r\n      if (dom.hasClass(`badge-${kind}`)) {\r\n        return kind;\r\n      }\r\n    }\r\n\r\n    return 'default';\r\n  }\r\n\r\n  get iconGap() {\r\n    const labeled = this.dom.find('.ux-labeled-text');\r\n    switch (this.iconDisplay) {\r\n      case 'left': return Utils.toPt(labeled.css('margin-left'));\r\n      case 'right': return Utils.toPt(labeled.css('margin-right'));\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  set iconGap(value) {\r\n    const labeled = this.dom.find('.ux-labeled-text');\r\n    labeled.css('margin-right', '');\r\n    labeled.css('margin-left', '');\r\n    labeled.css('padding-left', '');\r\n\r\n    switch (this.iconDisplay) {\r\n      case 'left':\r\n        labeled.css('margin-left', value);\r\n        labeled.css('padding-left', this.iconSize * 2.5);\r\n        break;\r\n\r\n      case 'right':\r\n        labeled.css('margin-right', value); break;\r\n    }\r\n  }\r\n\r\n  get iconDisplay() {\r\n    if (this.dom.find('> *:first').hasClass('ux-labeled-text')) {\r\n      return 'right';\r\n    } else {\r\n      return 'left';\r\n    }\r\n  }\r\n\r\n  set iconDisplay(value) {\r\n    if (this.iconDisplay === value) return;\r\n\r\n    const gap = this.iconGap;\r\n\r\n    const checkbox = this.dom.find('input[type=checkbox]');\r\n    const label = this.dom.find('label');\r\n    label.remove();\r\n    checkbox.remove();\r\n\r\n    let labeled = this.dom.find('.ux-labeled-text');\r\n\r\n    switch (value) {\r\n      case \"right\":\r\n        label.insertAfter(labeled);\r\n        checkbox.insertAfter(labeled);\r\n        break;\r\n      case \"left\":\r\n        checkbox.insertBefore(labeled);\r\n        label.insertBefore(labeled);\r\n        break;\r\n    }\r\n\r\n    this.iconGap = gap;\r\n  }\r\n\r\n  createDom() {\r\n    const dom = jQuery('<span><input type=\"checkbox\" /><label class=\"badge-default\"></label><span class=\"ux-labeled-text\"></span></span>');\r\n    dom.addClass('ux-labeled');\r\n    dom.addClass('ux-switch');\r\n\r\n\r\n    dom.on('click.Switch', (e) => {\r\n      const checkbox = dom.find('input[type=checkbox]');\r\n\r\n      if (!checkbox.prop('disabled')) {\r\n        checkbox.prop('checked', !checkbox.prop('checked'));\r\n\r\n        AppMediator.sendUserInput(this, {selected: this.selected}, () => {\r\n          this.trigger('action', e);\r\n        });\r\n      }\r\n    });\r\n\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default Switch;","import TextInputControl from './TextInputControl';\r\n\r\nclass TextArea extends TextInputControl {\r\n\r\n  get wrap() {\r\n    return this.dom.attr('wrap');\r\n  }\r\n\r\n  set wrap(value) {\r\n    this.dom.attr('wrap', value);\r\n  }\r\n\r\n  createDom() {\r\n    var dom = jQuery('<textarea class=\"form-control ux-text-input-control ux-text-area\" />');\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default TextArea;\r\n","import TextInputControl from './TextInputControl';\r\n\r\nclass TextField extends TextInputControl {\r\n  createDom() {\r\n    const dom = jQuery('<input type=\"text\" class=\"form-control ux-text-input-control ux-text-field\" />');\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default TextField;\r\n","import Node from './Node';\r\nimport AppMediator from '../NX/AppMediator';\r\nimport Font from \"./paint/Font\";\r\n\r\nclass TextInputControl extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.dom.on('keydown.TextInputControl', (e) => {\r\n        AppMediator.sendUserInput(this, () => {\r\n          return { text: this.text }\r\n        });\r\n    });\r\n  }\r\n\r\n  get placeholder() {\r\n    return this.dom.attr('placeholder');\r\n  }\r\n\r\n  set placeholder(value) {\r\n    this.dom.attr('placeholder', value);\r\n  }\r\n\r\n  get editable() {\r\n    return !this.dom.prop('readonly');\r\n  }\r\n\r\n  set editable(value) {\r\n    this.dom.prop('readonly', !value);\r\n  }\r\n\r\n  get textAlign() {\r\n    return thid.dom.css('text-algin');\r\n  }\r\n\r\n  set textAlign(value) {\r\n    this.dom.css('text-algin', value);\r\n  }\r\n\r\n  get font() {\r\n    return Font.getFromDom(this.dom);\r\n  }\r\n\r\n  set font(value) {\r\n    Font.applyToDom(this.dom, value);\r\n  }\r\n\r\n  get text() {\r\n    return this.dom.val();\r\n  }\r\n\r\n  set text(value) {\r\n    this.dom.val(value);\r\n  }\r\n}\r\n\r\nexport default TextInputControl;\r\n","import Button from './Button';\r\nimport AppMediator from '../NX/AppMediator';\r\n\r\nclass ToggleButton extends Button {\r\n  constructor(text, graphic) {\r\n    super(text, graphic);\r\n\r\n    this.dom.on('click.ToggleButton', () => {\r\n      AppMediator.sendUserInput(this, () => {\r\n        return {'selected': this.selected}\r\n      });\r\n    });\r\n  }\r\n\r\n  createDom() {\r\n    const dom = super.createDom();\r\n    dom.addClass('ux-toggle-button');\r\n    dom.attr('data-toggle', 'button');\r\n    return dom;\r\n  }\r\n\r\n  get selected() {\r\n    return this.dom.hasClass('active');\r\n  }\r\n\r\n  set selected(value) {\r\n    if (value) {\r\n      this.dom.addClass('active');\r\n      this.dom.attr('aria-pressed', true);\r\n    } else {\r\n      this.dom.removeClass('active');\r\n      this.dom.attr('aria-pressed', false);\r\n    }\r\n  }\r\n}\r\n\r\nexport default ToggleButton;\r\n","import Node from './Node';\r\nimport Button from './Button';\r\nimport ToggleButton from './ToggleButton';\r\nimport Labeled from './Labeled';\r\nimport Label from './Label';\r\nimport Checkbox from './Checkbox';\r\nimport Combobox from './Combobox';\r\nimport Listbox from './Listbox';\r\nimport ProgressBar from './ProgressBar';\r\nimport Container from './Container';\r\nimport HBox from './HBox';\r\nimport VBox from './VBox';\r\nimport ListView from './ListView';\r\nimport AnchorPane from './AnchorPane';\r\nimport ImageView from './ImageView';\r\nimport TextInputControl from './TextInputControl';\r\nimport TextField from './TextField';\r\nimport PasswordField from './PasswordField';\r\nimport TextArea from './TextArea';\r\nimport Window from './Window';\r\nimport Icon from './Icon';\r\nimport Hyperlink from './Hyperlink';\r\nimport Switch from './Switch';\r\n\r\n\r\nimport Font from './paint/Font';\r\nimport Utils from './util/Utils';\r\n\r\nexport default {\r\n  Node, Window,\r\n  ImageView,\r\n  Button, ToggleButton,\r\n  Labeled,\r\n  Label, Checkbox, Combobox, Listbox, ProgressBar,\r\n  TextInputControl, TextField, PasswordField, TextArea,\r\n  Container, HBox, VBox, AnchorPane, ListView, Icon, Hyperlink, Switch,\r\n\r\n  Font\r\n}\r\n","import Container from './Container';\r\n\r\nclass VBox extends Container {\r\n\r\n  constructor(nodes) {\r\n    super(...arguments);\r\n\r\n    this.spacing = 0;\r\n    this.align = ['top', 'left'];\r\n  }\r\n\r\n  get fitWidth() {\r\n    return this.dom.hasClass('ux-m-fit-width');\r\n  }\r\n\r\n  set fitWidth(value) {\r\n    if (value) {\r\n      this.dom.addClass('ux-m-fit-width');\r\n    } else {\r\n      this.dom.removeClass('ux-m-fit-width');\r\n    }\r\n  }\r\n\r\n  get spacing() {\r\n    return this._spacing;\r\n  }\r\n\r\n  set spacing(value) {\r\n    this._spacing = value;\r\n    const slots = this.dom.find('> div');\r\n\r\n    slots.css('margin-bottom', value + 'px');\r\n    slots.last().css('margin-bottom', 0);\r\n  }\r\n\r\n  createDom() {\r\n    const dom = super.createDom();\r\n    dom.addClass('ux-v-box');\r\n    return dom;\r\n  }\r\n\r\n  createSlotDom(object) {\r\n    const dom = super.createSlotDom(object);\r\n\r\n    if (this.spacing !== 0) {\r\n      const slots = this.dom.find('> div');\r\n      slots.last().css('margin-bottom', this.spacing);\r\n      dom.css('margin-bottom', 0);\r\n    }\r\n\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default VBox;\r\n","import Node from './Node';\r\nimport Container from \"./Container\";\r\nimport AppMediator from '../NX/AppMediator';\r\n\r\nclass Window extends Container {\r\n  constructor() {\r\n    super();\r\n\r\n    this.contentDom = this.dom.find('.modal-body');\r\n    this.dom.modal({\r\n      backdrop: 'static',\r\n      keyboard: false\r\n    });\r\n\r\n    this.dom.on('hide.bs.modal.Window', () => {\r\n      const data = {\r\n        visible: false,\r\n        close: true,\r\n      };\r\n\r\n      AppMediator.sendUserInput(this, data);\r\n    });\r\n  }\r\n\r\n  get centered() {\r\n    return this.dom.hasClass('ux-centered')\r\n  }\r\n\r\n  set centered(value) {\r\n    if (value) {\r\n      this.dom.addClass('ux-centered');\r\n    } else {\r\n      this.dom.removeClass('ux-centered')\r\n    }\r\n  }\r\n\r\n  get closable() {\r\n    return this.dom.hasClass('ux-closable')\r\n  }\r\n\r\n  set closable(value) {\r\n    if (value) {\r\n      this.dom.addClass('ux-closable');\r\n    } else {\r\n      this.dom.removeClass('ux-closable');\r\n    }\r\n  }\r\n\r\n  get title() {\r\n    return this.dom.find('.ux-window-title').text();\r\n  }\r\n\r\n  set title(value) {\r\n    return this.dom.find('.ux-window-title').text(value);\r\n  }\r\n\r\n  get width() {\r\n    return this.dom.find('.modal-dialog').width()\r\n  }\r\n\r\n  set width(value) {\r\n    this.dom.find('.modal-dialog').width(value);\r\n  }\r\n\r\n  get height() {\r\n    return this.dom.find('.modal-dialog').height()\r\n  }\r\n\r\n  set height(value) {\r\n    this.dom.find('.modal-dialog').height(value);\r\n  }\r\n\r\n  get footer() {\r\n    const footer = this.dom.find('.modal-footer > *').first();\r\n    return Node.getFromDom(footer);\r\n  }\r\n\r\n  set footer(value) {\r\n    const footer = this.dom.find('.modal-footer');\r\n    footer.empty();\r\n\r\n    if (value instanceof Node) {\r\n      footer.append(value.dom);\r\n      footer.show();\r\n    } else if (value === null) {\r\n      footer.hide();\r\n    } else {\r\n      throw new Error(\"footer value must be Node or null, passed \" + (typeof value));\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    this.dom.modal('hide');\r\n  }\r\n\r\n  show() {\r\n    this.dom.modal('show');\r\n  }\r\n\r\n  free() {\r\n    this.hide();\r\n\r\n    setTimeout(() => {\r\n      super.free();\r\n    }, 3000);\r\n\r\n    return this;\r\n  }\r\n\r\n  createDom() {\r\n    const dom = jQuery('<div class=\"modal fade in ux-window ux-closable\" role=\"dialog\" aria-hidden=\"true\"><div class=\"modal-dialog\"><div class=\"modal-content\">' +\r\n      '<div class=\"modal-header\">' +\r\n        '<h5 class=\"modal-title ux-window-title\"></h5>' +\r\n        '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"Close\">×</button>' +\r\n      '</div>' +\r\n      '<div class=\"modal-body\"></div>' +\r\n      '<div class=\"modal-footer\" style=\"display: none;\"></div>' +\r\n      '</div></div></div>');\r\n\r\n    return dom;\r\n  }\r\n\r\n  innerNodes() {\r\n    const result = super.innerNodes();\r\n\r\n    if (this.footer) {\r\n      result.push(this.footer);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default Window;\r\n","import Utils from './../util/Utils';\r\n\r\nclass Font {\r\n  constructor(name, size) {\r\n    this._dom = null;\r\n    this.name = name || 'serif';\r\n    this.size = size || 12;\r\n  }\r\n\r\n  get name() {\r\n    return this._name;\r\n  }\r\n\r\n  set name(value) {\r\n    this._name = value;\r\n\r\n    if (this._dom) {\r\n      this._dom.css('font-family', value);\r\n    }\r\n  }\r\n\r\n  get size() {\r\n    return this._size;\r\n  }\r\n\r\n  set size(value) {\r\n    this._size = value | 0;\r\n\r\n    if (this._dom) {\r\n      this._dom.css('font-size', value + 'px');\r\n    }\r\n  }\r\n\r\n  get bold() {\r\n    return this._bold | false;\r\n  }\r\n\r\n  set bold(value) {\r\n    this._bold = value | false;\r\n\r\n    if (this._dom) {\r\n      this._dom.css('font-weight', this._bold ? 'bold' : 'normal');\r\n    }\r\n  }\r\n\r\n  get italic() {\r\n    return this._italic | false;\r\n  }\r\n\r\n  set italic(value) {\r\n    this._italic = value | false;\r\n\r\n    if (this._dom) {\r\n      this._dom.css('font-style', this._italic ? 'italic' : 'normal');\r\n    }\r\n  }\r\n\r\n  get underline() {\r\n    return this._underline | false;\r\n  }\r\n\r\n  set underline(value) {\r\n    this._underline = value | false;\r\n\r\n    if (this._underline) {\r\n      this._linethrough = false;\r\n    }\r\n\r\n    if (this._dom) {\r\n      this._dom.css('text-decoration', this._underline ? 'underline' : 'none');\r\n    }\r\n  }\r\n\r\n  get linethrough() {\r\n    return this._linethrough | false;\r\n  }\r\n\r\n  set linethrough(value) {\r\n    this._linethrough = value | false;\r\n\r\n    if (this._linethrough) {\r\n      this._underline = false;\r\n    }\r\n\r\n    if (this._dom) {\r\n      this.dom.css('text-decoration', this._linethrough ? 'line-through' : 'none')\r\n    }\r\n  }\r\n\r\n  static applyToDom(dom, font) {\r\n    if (font instanceof Font) {\r\n      dom.css('font-family', font.name);\r\n\r\n      if (font.size) {\r\n        dom.css('font-size', font.size);\r\n      } else {\r\n        dom.css('font-size', '');\r\n      }\r\n\r\n      if (font.bold) {\r\n        dom.css('font-weight', 'bold');\r\n      } else {\r\n        dom.css('font-weight', '');\r\n      }\r\n\r\n      if (font.italic) {\r\n        dom.css('font-style', 'italic');\r\n      } else {\r\n        dom.css('font-style', '');\r\n      }\r\n\r\n      if (font.underline) {\r\n        dom.css('text-decoration', 'underline');\r\n      } else if (font.linethrough) {\r\n        dom.css('text-decoration', 'line-through');\r\n      } else {\r\n        dom.css('text-decoration', '');\r\n      }\r\n    } else if (typeof font === 'object') {\r\n      if (font.hasOwnProperty('name')) {\r\n        if (font.name) {\r\n          dom.css('font-family', font.name);\r\n        } else {\r\n          dom.css('font-family', '');\r\n        }\r\n      }\r\n\r\n      if (font.hasOwnProperty('size')) {\r\n        if (font.size) {\r\n          dom.css('font-size', font.size);\r\n        } else {\r\n          dom.css('font-size', '');\r\n        }\r\n      }\r\n\r\n      if (font.hasOwnProperty('bold')) {\r\n        if (font.bold) {\r\n          dom.css('font-weight', 'bold');\r\n        } else {\r\n          dom.css('font-weight', '');\r\n        }\r\n      }\r\n\r\n      if (font.hasOwnProperty('italic')) {\r\n        if (font.italic) {\r\n          dom.css('font-style', 'italic');\r\n        } else {\r\n          dom.css('font-style', '');\r\n        }\r\n      }\r\n\r\n      if (font.hasOwnProperty('underline') && font.underline) {\r\n        dom.css('text-decoration', 'underline');\r\n      } else if (font.hasOwnProperty('linethrough') && font.linethrough) {\r\n        dom.css('text-decoration', 'line-through');\r\n      } else {\r\n        dom.css('text-decoration', '');\r\n      }\r\n    }\r\n  }\r\n\r\n  static getFromDom(dom) {\r\n    if (dom instanceof jQuery) {\r\n      const family = dom.css('font-family');\r\n      const size = Utils.toPt(dom.css('font-size'));\r\n\r\n      const bold = dom.css('font-weight') === 'bold';\r\n      const italic = dom.css('font-style') === 'italic';\r\n      const linethrough = dom.css('text-decoration') === 'line-through';\r\n      const underline = dom.css('text-decoration') === 'underline';\r\n\r\n      const font = new Font(family, size);\r\n\r\n      if (bold) font.bold = true;\r\n      if (italic) font.italic = true;\r\n      if (underline) font.underline = true;\r\n      if (linethrough) font.linethrough = true;\r\n\r\n      font._dom = dom;\r\n      return font;\r\n    }\r\n\r\n    throw new TypeError('getFromDom(): 1 argument must be jquery object');\r\n  }\r\n}\r\n\r\nexport default Font;\r\n","\r\n\r\nclass Utils\r\n{\r\n  static isElement(obj) {\r\n    try {\r\n      //Using W3 DOM2 (works for FF, Opera and Chrom)\r\n      return obj instanceof HTMLElement;\r\n    } catch(e){\r\n      //Browsers not supporting W3 DOM2 don't have HTMLElement and\r\n      //an exception is thrown and we end up here. Testing some\r\n      //properties that all elements have. (works on IE7)\r\n      return (typeof obj===\"object\") &&\r\n        (obj.nodeType===1) && (typeof obj.style === \"object\") &&\r\n        (typeof obj.ownerDocument ===\"object\");\r\n    }\r\n  }\r\n\r\n  static toPt(cssValue) {\r\n    return parseInt(cssValue);\r\n  }\r\n}\r\n\r\nexport default Utils;\r\n","import NX from './NX/NX';\r\nimport UX from './UX/UX';\r\n\r\nwindow.NX = NX;\r\nwindow.UX = UX;\r\n\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}