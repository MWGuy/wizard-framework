{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/NX/App.js","src/NX/AppDispatcher.js","src/NX/AppMediator.js","src/NX/ChromiumEmbeddedAppDispatcher.js","src/NX/NX.js","src/NX/UILoader.js","src/NX/WebSocketAppDispatcher.js","src/UX/AnchorPane.js","src/UX/Button.js","src/UX/Checkbox.js","src/UX/Combobox.js","src/UX/Container.js","src/UX/HBox.js","src/UX/Hyperlink.js","src/UX/Icon.js","src/UX/ImageView.js","src/UX/Label.js","src/UX/Labeled.js","src/UX/ListView.js","src/UX/Listbox.js","src/UX/Node.js","src/UX/PasswordField.js","src/UX/ProgressBar.js","src/UX/SelectControl.js","src/UX/Switch.js","src/UX/TextArea.js","src/UX/TextField.js","src/UX/TextInputControl.js","src/UX/ToggleButton.js","src/UX/UX.js","src/UX/VBox.js","src/UX/Window.js","src/UX/paint/Font.js","src/UX/util/Utils.js","src/lib.js"],"names":[],"mappings":"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","file":"dnext-engine.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","class App {\r\n  constructor() {\r\n    this._callbacks = {};\r\n  }\r\n\r\n  /**\r\n   * @param {string} message\r\n   */\r\n  log(message) {\r\n    console.log(message);\r\n  }\r\n\r\n  launch() {\r\n    this.socket = new WebSocket(\"/dnext/ws/\");\r\n\r\n    this.socket.onmessage = function (event) {\r\n      const data = JSON.parse(event.data);\r\n\r\n      if (data.id && data.message) {\r\n        const callback = this._callbacks[data.id];\r\n\r\n        if (callback) {\r\n          callback(data);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  send(message, data, callback) {\r\n    data.message = message;\r\n    data.id = Math.random().toString(36).substring(7);\r\n\r\n    if (callback) {\r\n      this._callbacks[data.id] = callback;\r\n    }\r\n\r\n    this.socket.send(JSON.stringify(data));\r\n  }\r\n}\r\n\r\nexport default App;\r\n","\r\nclass AppDispatcher {\r\n\r\n  onOpen(callback) {\r\n    throw \"onOpen() is not implemented\";\r\n  }\r\n\r\n  onMessage(callback) {\r\n    throw \"onMessage() is not implemented\";\r\n  }\r\n\r\n  onError(callback) {\r\n    throw \"onError() is not implemented\";\r\n  }\r\n\r\n  onClose(callback) {\r\n    throw \"onClose() is not implemented\";\r\n  }\r\n\r\n  /**\r\n   * @param {string} data\r\n   */\r\n  send(data) {\r\n    throw \"send() is not implemented\";\r\n  }\r\n}\r\n\r\nexport default AppDispatcher;","import UILoader from \"./UILoader\";\r\nimport Node from \"../UX/Node\";\r\nimport WebSocketAppDispatcher from \"./WebSocketAppDispatcher\";\r\n\r\nclass AppMediator {\r\n  init(rootDom, dispatcherType) {\r\n    this.rootDom = rootDom;\r\n    this.dispatcherType = dispatcherType;\r\n    this.activated = true;\r\n    this._callbacks = [];\r\n    this._nodes = {};\r\n\r\n    const uuid = sessionStorage.getItem('AppMediator.uuid');\r\n\r\n    if (!uuid) {\r\n      this.uuid = Math.random().toString(36).substring(7);\r\n      sessionStorage.setItem('AppMediator.uuid', this.uuid);\r\n    } else {\r\n      this.uuid = uuid;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param contextUrl\r\n   * @param wsUrl\r\n   * @param sessionId\r\n   */\r\n  startWatching(contextUrl, wsUrl, sessionId) {\r\n    this.sessionId = sessionId;\r\n\r\n    this.dispatcher = new this.dispatcherType(wsUrl);\r\n\r\n    this.dispatcher.onError(() => {\r\n      if (sessionStorage.getItem('AppMediator.reloading')) {\r\n        setTimeout(() => window.location.reload(true), 200);\r\n      }\r\n    });\r\n\r\n    this.dispatcher.onOpen(() => {\r\n      sessionStorage.setItem('AppMediator.reloading', false);\r\n\r\n      this.send('initialize', {});\r\n      this.sendIfCan('ui-ready', {\r\n        location: {\r\n          contextUrl: contextUrl,\r\n          hash: window.location.hash ? window.location.hash.substr(1) : '',\r\n          path: window.location.pathname,\r\n          host: window.location.host,\r\n          port: window.location.port,\r\n          protocol: window.location.protocol,\r\n          target: window.location.target,\r\n        }\r\n      });\r\n    });\r\n\r\n    this.dispatcher.onClose(() => {\r\n      this.dispatcher = null;\r\n\r\n      if (this.node) {\r\n        this.node.free();\r\n      }\r\n    });\r\n\r\n    const handlers = {\r\n      'ui-render': this.triggerRenderView,\r\n      'ui-reload': this.triggerReload,\r\n      'ui-alert': this.triggerAlert,\r\n      'ui-set-property': this.triggerSetProperty,\r\n      'ui-call-method': this.triggerCallMethod,\r\n      'ui-event-link': this.triggerOnEventLink,\r\n      'ui-create-node': this.triggerCreateNode,\r\n      'ui-create-css-style': this.triggerCreateCssStyle,\r\n      'ui-destroy-css-style': this.triggerDestroyCssStyle\r\n    };\r\n\r\n    this.dispatcher.onMessage((data) => {\r\n      const message = JSON.parse(data);\r\n      const type = message.type;\r\n\r\n      console.debug(\"AppMediator.receive\", message);\r\n\r\n      if (handlers.hasOwnProperty(type)) {\r\n        handlers[type].call(this, message);\r\n      } else {\r\n        switch (type) {\r\n          case \"system-console-log\":\r\n            const text = message['message'];\r\n\r\n            switch (message['kind']) {\r\n              case 'warn':\r\n                console.warn(text);\r\n                break;\r\n              case 'error':\r\n                console.error(text);\r\n                break;\r\n              case 'info':\r\n                console.info(text);\r\n                break;\r\n              case 'debug':\r\n                console.debug(text);\r\n                break;\r\n              case 'trace':\r\n                console.trace(text);\r\n                break;\r\n              case 'clear':\r\n                console.clear();\r\n                break;\r\n              default:\r\n                console.log(text);\r\n                break;\r\n            }\r\n\r\n            break;\r\n\r\n          case \"system-eval\":\r\n            const {script, callback} = message;\r\n            const result = eval(script);\r\n\r\n            if (callback) {\r\n              callback(result);\r\n            }\r\n\r\n            break;\r\n\r\n          case \"system-callback\":\r\n            const {id} = message;\r\n\r\n            if (this._callbacks[id]) {\r\n              this._callbacks[id].apply(message);\r\n              delete this._callbacks[id];\r\n            }\r\n\r\n            break;\r\n\r\n          case \"history-push\":\r\n            const url = message['url'];\r\n            const title = message['title'];\r\n            const hash = message['hash'];\r\n\r\n            if (window.location.pathname === url) {\r\n              if (title !== undefined) {\r\n                document.title = title;\r\n              }\r\n              if (hash !== undefined) {\r\n                window.location.hash = hash;\r\n              }\r\n\r\n              break;\r\n            }\r\n\r\n            window.history.pushState(null, message['title'], url);\r\n\r\n            if (title !== undefined) {\r\n              document.title = title;\r\n            }\r\n            if (hash !== undefined) {\r\n              window.location.hash = hash;\r\n            }\r\n\r\n            break;\r\n\r\n          case \"page-set-properties\":\r\n            if (message['title'] !== undefined) {\r\n              document.title = message['title'];\r\n            }\r\n\r\n            if (message['hash'] !== undefined) {\r\n              window.location.hash = message['hash'];\r\n            }\r\n\r\n            break;\r\n        }\r\n      }\r\n    });\r\n\r\n    setInterval(() => {\r\n      const docVisible = !document.hidden;\r\n\r\n      if (docVisible !== this.activated) {\r\n        this.activated = docVisible;\r\n\r\n        if (this.activated) {\r\n          this.sendIfCan('activate', {});\r\n        }\r\n      }\r\n    }, 1);\r\n  }\r\n\r\n  parseValue(value) {\r\n    if (value instanceof Object) {\r\n      if (value.hasOwnProperty('$node')) {\r\n        return this.findNodeByUuidGlobally(value['$node']);\r\n      } else if (value.hasOwnProperty('$createNode')) {\r\n        const schema = value['$createNode'];\r\n\r\n        const uiLoader = new UILoader();\r\n        return uiLoader.load(schema);\r\n      } else if (value.hasOwnProperty('$callable')) {\r\n        const uuid = value['$callable'];\r\n\r\n        return () => {\r\n          this.sendIfCan('callback-trigger', {\r\n            'uuid': uuid,\r\n            'args': arguments\r\n          });\r\n        };\r\n      }\r\n    }\r\n\r\n    if (value instanceof Array) {\r\n      for (let i = 0; i < value.length; i++) {\r\n        value[i] = this.parseValue(value[i]);\r\n      }\r\n\r\n      return value;\r\n    }\r\n\r\n    if (value instanceof Object) {\r\n      const newValue = {};\r\n\r\n      for (let key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          newValue[key] = this.parseValue(value[key]);\r\n        }\r\n      }\r\n\r\n      return newValue;\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  prepareValue(value) {\r\n    if (value instanceof Node) {\r\n      if (value.uuid !== undefined) {\r\n        return {'$node': value.uuid}\r\n      } else {\r\n        console.error('Cannot send unregistered node', value);\r\n        return null;\r\n      }\r\n    }\r\n\r\n    if (value instanceof Array) {\r\n      for (let i = 0; i < value.length; i++) {\r\n        value[i] = this.prepareValue(value[i]);\r\n      }\r\n\r\n      return value;\r\n    }\r\n\r\n    if (value instanceof Object) {\r\n      const newValue = {};\r\n\r\n      for (let key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          newValue[key] = this.prepareValue(value[key]);\r\n        }\r\n      }\r\n\r\n      return newValue;\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * @param node\r\n   * @param data\r\n   * @param callback\r\n   */\r\n  sendUserInput(node, data, callback = null) {\r\n    if (!this.dispatcher) {\r\n      return;\r\n    }\r\n\r\n    if (!document.hidden) {\r\n      setTimeout(() => {\r\n        let newData = data;\r\n\r\n        if (typeof data === \"function\") {\r\n          newData = data();\r\n        }\r\n\r\n        this.sendIfCan('ui-user-input', {\r\n          'uuid': node.uuid,\r\n          'data': this.prepareValue(newData)\r\n        }, callback)\r\n      }, 0);\r\n    } else {\r\n      console.warn('Ignore User input');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param type\r\n   * @param message\r\n   * @param callback\r\n   * @returns {boolean}\r\n   */\r\n  sendIfCan(type, message, callback) {\r\n    if (this.dispatcher !== undefined) {\r\n      this.send(type, message, callback);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param type\r\n   * @param message\r\n   * @param callback\r\n   */\r\n  send(type, message, callback) {\r\n    if (this.dispatcher === undefined) {\r\n      throw \"Mediator is not in watching state.\";\r\n    }\r\n\r\n    message.type = type;\r\n    message.id = Math.random().toString(36).substring(7);\r\n    message.sessionId = this.sessionId;\r\n    message.sessionIdUuid = this.uuid;\r\n\r\n    if (callback) {\r\n      this._callbacks[message.id] = callback;\r\n      message.needCallback = true;\r\n    }\r\n\r\n    console.debug(\"AppMediator.send\", message);\r\n\r\n    this.dispatcher.send(JSON.stringify(message));\r\n  }\r\n\r\n  findNodeByUuidGlobally(uuid) {\r\n    let found = this.findNodeByUuid(uuid, this.node);\r\n\r\n    if (found === null) {\r\n      if (this._nodes.hasOwnProperty(uuid)) {\r\n        found = this._nodes[uuid];\r\n      }\r\n    }\r\n\r\n    if (found === null) {\r\n      for (const key in this._nodes) {\r\n        if (this._nodes.hasOwnProperty(key)) {\r\n          const found = this.findNodeByUuid(uuid, this._nodes[key]);\r\n\r\n          if (found !== null) {\r\n            return found;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return found;\r\n  }\r\n\r\n  findNodeByUuid(uuid, node) {\r\n    if (uuid === node.uuid) {\r\n      return node;\r\n    }\r\n\r\n    let children = node.innerNodes();\r\n\r\n    for (let i = 0; i < children.length; i++) {\r\n      if (children[i].uuid === uuid) {\r\n        return children[i];\r\n      }\r\n\r\n      const found = this.findNodeByUuid(uuid, children[i]);\r\n\r\n      if (found !== null) {\r\n        return found;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  triggerEvent(node, event, e) {\r\n    const data = {\r\n      type: e.type,\r\n      which: e.which,\r\n      result: e.result,\r\n      namespace: e.namespace,\r\n      position: [e.pageX, e.pageY]\r\n    };\r\n\r\n    this.sendIfCan('ui-trigger', {\r\n      uuid: node.uuid,\r\n      event: event,\r\n      data: this.prepareValue(data),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Render new view.\r\n   * @param message\r\n   */\r\n  triggerRenderView(message) {\r\n    const uiLoader = new UILoader();\r\n    this.node = uiLoader.load(message['schema']);\r\n\r\n    this.rootDom.empty();\r\n    this.rootDom.append(this.node.dom);\r\n\r\n    this.sendIfCan('ui-render-done', {\r\n      size: [this.node.dom.width(), this.node.dom.height()]\r\n    }, () => {\r\n      const triggerRender = (node) => {\r\n        node.trigger('render');\r\n\r\n        let innerNodes = node.innerNodes();\r\n\r\n        for (let key in innerNodes) {\r\n          if (innerNodes.hasOwnProperty(key)) {\r\n            triggerRender(innerNodes[key]);\r\n          }\r\n        }\r\n      };\r\n\r\n      triggerRender(this.node);\r\n\r\n      for (const key in this._nodes) {\r\n        if (this._nodes.hasOwnProperty(key)) {\r\n          triggerRender(this._nodes[key]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  triggerAlert(message) {\r\n    const text = message['text'];\r\n    alert(text);\r\n  }\r\n\r\n  triggerCallMethod(message) {\r\n    const uuid = message['uuid'];\r\n    const method = message['method'];\r\n    const args = this.parseValue(message['args'] || []);\r\n\r\n    const node = this.findNodeByUuidGlobally(uuid);\r\n\r\n    if (node !== null) {\r\n      node[method].apply(node, args);\r\n    } else {\r\n      console.warn(`Failed to call method .${method}(), node with uuid = ${uuid} is not found`);\r\n    }\r\n  }\r\n\r\n  triggerSetProperty(message) {\r\n    const uuid = message['uuid'];\r\n    const property = message['property'];\r\n    const value = this.parseValue(message['value']);\r\n\r\n    const node = this.findNodeByUuidGlobally(uuid);\r\n\r\n    if (node !== null) {\r\n      node[property] = value;\r\n    } else {\r\n      console.warn(`Failed to set property .${property}, node with uuid = ${uuid} is not found`);\r\n    }\r\n  }\r\n\r\n  triggerOnEventLink(message) {\r\n    const uuid = message['uuid'];\r\n    const event = message['event'];\r\n\r\n    const node = this.findNodeByUuidGlobally(uuid);\r\n\r\n    if (node !== null) {\r\n      node.off(`${event}.AppMediator`);\r\n\r\n      node.on(`${event}.AppMediator`, (e) => {\r\n        this.triggerEvent(node, event, e);\r\n      });\r\n    } else {\r\n      console.warn(`Failed to link event ${event}, node with uuid = ${uuid} is not found`);\r\n    }\r\n  }\r\n\r\n  triggerCreateNode(message) {\r\n    const schema = message['schema'];\r\n\r\n    const uiLoader = new UILoader();\r\n    const node = uiLoader.load(schema);\r\n\r\n    this._nodes[node.uuid] = node;\r\n\r\n    node.trigger('render');\r\n  }\r\n\r\n  triggerCreateCssStyle(message) {\r\n    this.triggerDestroyCssStyle(message);\r\n\r\n    const { id, style } = message;\r\n\r\n    const tag = document.createElement('style');\r\n\r\n    tag.type = 'text/css';\r\n    tag.innerHTML = style;\r\n    tag.id = id;\r\n    tag.className = 'dynamic-css';\r\n\r\n    jQuery('head').append(jQuery(tag));\r\n  }\r\n\r\n  triggerDestroyCssStyle(message) {\r\n    const { id } = message;\r\n    jQuery(`.dynamic-css#${id}`).remove();\r\n  }\r\n\r\n  triggerReload(message) {\r\n    sessionStorage.setItem('AppMediator.reloading', true);\r\n    setTimeout(() => window.location.reload(true), 50);\r\n  }\r\n}\r\n\r\nexport default new AppMediator();","import AppDispatcher from \"./AppDispatcher\";\r\n\r\nclass ChromiumEmbeddedAppDispatcher extends AppDispatcher\r\n{\r\n  constructor(wsUrl) {\r\n    super();\r\n\r\n    this.wsUrl = wsUrl;\r\n\r\n    this.onMessage(() => {});\r\n    this.onError(() => {});\r\n    this.onClose(() => {});\r\n  }\r\n\r\n  onOpen(callback) {\r\n    window.cefOpenHandler = () => {\r\n      callback();\r\n    };\r\n\r\n    setTimeout(() => window.cefOpenHandler(), 1);\r\n  }\r\n\r\n  onMessage(callback) {\r\n    window.cefMessageHandler = (data) => callback(data);\r\n  }\r\n\r\n  onError(callback) {\r\n    window.cefErrorHandler = () => callback();\r\n  }\r\n\r\n  onClose(callback) {\r\n    window.cefCloseHandler = () => callback();\r\n  }\r\n\r\n  send(data) {\r\n    window.cefQuery({\r\n      request: 'ws:' + this.wsUrl + ':' + data,\r\n      persistent: false,\r\n      onSuccess: (res) => {\r\n      },\r\n      onFailure: (error_code, error_message) => {\r\n        if (window.cefErrorHandler && error_code !== -1) {\r\n          window.cefErrorHandler.call();\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default ChromiumEmbeddedAppDispatcher;","import App from './App';\r\nimport UILoader from './UILoader';\r\nimport AppMediator from \"./AppMediator\";\r\nimport WebSocketAppDispatcher from \"./WebSocketAppDispatcher\";\r\nimport ChromiumEmbeddedAppDispatcher from \"./ChromiumEmbeddedAppDispatcher\";\r\n\r\nexport default {\r\n  App, UILoader, AppMediator,\r\n  WebSocketAppDispatcher, ChromiumEmbeddedAppDispatcher\r\n}\r\n","import Node from './../UX/Node';\r\nimport Container from './../UX/Container';\r\nimport UX from './../UX/UX';\r\nimport AppMediator from './AppMediator';\r\n\r\nclass UILoader {\r\n\r\n  linkToMediator(node, data) {\r\n    const watchedEvents = data['_watchedEvents'];\r\n    if (watchedEvents !== undefined) {\r\n      for (let watchedEvent of watchedEvents) {\r\n        node.on(`${watchedEvent}.AppMediator`, (e) => {\r\n          AppMediator.triggerEvent(node, watchedEvent, e);\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param object\r\n   * @returns {Node}\r\n   */\r\n  load(object) {\r\n    if (object && typeof object === \"object\") {\r\n      const type = object['_'];\r\n\r\n      if (!type) {\r\n        throw new Error(\"Type is not defined in '_' property!\");\r\n      }\r\n\r\n      let cls = UX[type];\r\n\r\n      if (!cls) {\r\n        cls = window[type];\r\n      }\r\n\r\n      if (!cls) {\r\n        throw new Error(`Type '${type}' is not defined`);\r\n      }\r\n\r\n      const node = new cls();\r\n\r\n      if (node instanceof Node) {\r\n        if (node instanceof Container && jQuery.isArray(object['_content'])) {\r\n          const children = object['_content'];\r\n\r\n          for (let i = 0; i < children.length; i++) {\r\n            const child = this.load(children[i]);\r\n            node.add(child);\r\n          }\r\n        }\r\n\r\n        node.loadSchema(object);\r\n        this.linkToMediator(node, object);\r\n        return node;\r\n      } else {\r\n        throw new Error(`Type '${type}' is not UI component class`);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {string} jsonString\r\n   * @returns {Node}\r\n   */\r\n  loadFromJson(jsonString) {\r\n    return this.load(JSON.parse(jsonString));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} urlToJson\r\n   * @param {function} callback\r\n   */\r\n  loadFromUrl(urlToJson, callback) {\r\n    jQuery.getJSON(urlToJson, (data) => {\r\n      callback(this.load(data));\r\n    });\r\n  }\r\n}\r\n\r\nexport default UILoader;\r\n","\r\nimport AppDispatcher from \"./AppDispatcher\";\r\n\r\n/**\r\n * WebSocket App Dispatcher\r\n */\r\nclass WebSocketAppDispatcher extends AppDispatcher\r\n{\r\n  constructor(wsUrl) {\r\n    super();\r\n\r\n    const loc = window.location;\r\n\r\n    this.wsUrl = wsUrl;\r\n    let newUri = '';\r\n\r\n    if (loc.protocol === \"https:\") {\r\n      newUri = \"wss:\";\r\n    } else {\r\n      newUri = \"ws:\";\r\n    }\r\n\r\n    newUri += \"//\" + loc.host;\r\n    newUri += wsUrl;\r\n\r\n    this.ws = new WebSocket(newUri);\r\n  }\r\n\r\n  onOpen(callback) {\r\n    this.ws.onopen = () => callback();\r\n  }\r\n\r\n  onMessage(callback) {\r\n    this.ws.onmessage = (e) => callback(e.data);\r\n  }\r\n\r\n  onError(callback) {\r\n    this.ws.onerror = () => callback();\r\n  }\r\n\r\n  onClose(callback) {\r\n    this.ws.onclose = () => callback();\r\n  }\r\n\r\n  send(data) {\r\n    return this.ws.send(data);\r\n  }\r\n}\r\n\r\nexport default WebSocketAppDispatcher;","import Container from './Container';\r\n\r\nclass AnchorPane extends Container {\r\n  createDom() {\r\n    const dom = super.createDom();\r\n    dom.addClass('ux-anchor-pane');\r\n    return dom;\r\n  }\r\n\r\n  createSlotDom(object) {\r\n    object.dom.css('position', 'absolute');\r\n    return object.dom;\r\n  }\r\n\r\n  childToBack(object) {\r\n    const dom = object.dom;\r\n    dom.detach();\r\n\r\n    this.dom.prepend(dom);\r\n  }\r\n\r\n  childToFront(object) {\r\n    const dom = object.dom;\r\n    dom.detach();\r\n    this.dom.append(dom);\r\n  }\r\n}\r\n\r\nexport default AnchorPane;\r\n","import Labeled from './Labeled';\r\n\r\nconst kinds = [\r\n  'success', 'primary', 'secondary', 'info', 'warning', 'danger', 'link', 'dark', 'light'\r\n];\r\n\r\nclass Button extends Labeled {\r\n\r\n  constructor(text, graphic) {\r\n    super(text, graphic);\r\n\r\n    this.on('click.Button', function () {\r\n      this.trigger('action');\r\n    });\r\n  }\r\n\r\n  get outline() {\r\n    return !!this.dom.data('--outline');\r\n  }\r\n\r\n  set outline(value) {\r\n    const kind = this.kind;\r\n    this.dom.data('--outline', !!value);\r\n    this.kind = kind;\r\n  }\r\n\r\n  get kind() {\r\n    const dom = this.dom;\r\n\r\n    for (let kind of kinds) {\r\n      if (dom.hasClass(`btn-${kind}`) || dom.hasClass(`btn-outline-${kind}`)) {\r\n        return kind;\r\n      }\r\n    }\r\n\r\n    return 'default';\r\n  }\r\n\r\n  set kind(value) {\r\n    this.dom.removeClass(`btn-${this.kind}`);\r\n    this.dom.removeClass(`btn-outline-${this.kind}`);\r\n\r\n    if (this.outline) {\r\n      this.dom.addClass(`btn-outline-${value}`);\r\n    } else {\r\n      this.dom.addClass(`btn-${value}`);\r\n    }\r\n  }\r\n\r\n  createDom() {\r\n    const dom = jQuery('<button><span class=\"ux-labeled-text\"></span></button>');\r\n    dom.addClass('ux-labeled');\r\n    dom.addClass('ux-button');\r\n\r\n    dom.addClass('btn');\r\n    dom.addClass('btn-default');\r\n\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import Labeled from './Labeled';\r\nimport AppMediator from '../NX/AppMediator';\r\n\r\nclass Checkbox extends Labeled {\r\n  constructor(text, graphic) {\r\n    super(text, graphic);\r\n\r\n    this.dom.on('click.Checkbox', (e) => {\r\n      if (e.target.tagName === 'INPUT') {\r\n        AppMediator.sendUserInput(this, {selected: this.selected}, () => {\r\n          this.trigger('action', e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  createDom() {\r\n      const dom = jQuery('<span><label><input type=\"checkbox\"><span class=\"cr\"><i class=\"cr-icon material-icons\" style=\"font-weight: bold;\">check</i></span><span class=\"ux-labeled-text\"></span></label></span>');\r\n      dom.addClass('ux-labeled');\r\n      dom.addClass('ux-checkbox');\r\n      return dom;\r\n  }\r\n\r\n  get checked() {\r\n    return this.dom.find('input[type=checkbox]').prop('checked');\r\n  }\r\n\r\n  set checked(value) {\r\n    this.dom.find('input[type=checkbox]').prop('checked', value);\r\n  }\r\n\r\n  get selected() {\r\n    return this.checked;\r\n  }\r\n\r\n  set selected(value) {\r\n    this.checked = value;\r\n  }\r\n\r\n  get enabled() {\r\n    return !this.dom.find('input[type=checkbox]').prop(\"disabled\");\r\n  }\r\n\r\n  set enabled(value) {\r\n    this.dom.find('input[type=checkbox]').prop('disabled', !value);\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n","import SelectControl from './SelectControl';\r\n\r\nclass Combobox extends SelectControl {\r\n  createDom() {\r\n    var dom = super.createDom();\r\n    dom.addClass('ux-combobox');\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default Combobox;\r\n","import Node from \"./Node\";\r\n\r\nclass Container extends Node {\r\n  constructor(nodes) {\r\n    super();\r\n    this.add(...arguments);\r\n    this.contentDom = this.dom;\r\n  }\r\n\r\n  get align() {\r\n    return [this.verAlign, this.horAlign];\r\n  }\r\n\r\n  set align(value) {\r\n    if (value instanceof Array && value.length >= 2) {\r\n      this.horAlign = value[1];\r\n      this.verAlign = value[0];\r\n    }\r\n  }\r\n\r\n  get horAlign() {\r\n    if (this.dom.hasClass('ux-m-halign-right')) {\r\n      return 'right';\r\n    } else if (this.hasClass('ux-m-halign-center')) {\r\n      return 'center';\r\n    }\r\n\r\n    return 'left';\r\n  }\r\n\r\n  set horAlign(value) {\r\n    this.dom.removeClass('ux-m-halign-left');\r\n    this.dom.removeClass('ux-m-halign-right');\r\n    this.dom.removeClass('ux-m-halign-center');\r\n\r\n    this.dom.addClass('ux-m-halign-' + value);\r\n  }\r\n\r\n  get verAlign() {\r\n    if (this.dom.hasClass('ux-m-valign-bottom')) {\r\n      return 'bottom';\r\n    } else if (this.hasClass('ux-m-valign-center')) {\r\n      return 'center';\r\n    }\r\n\r\n    return 'top';\r\n  }\r\n\r\n  set verAlign(value) {\r\n    this.dom.removeClass('ux-m-valign-top');\r\n    this.dom.removeClass('ux-m-valign-bottom');\r\n    this.dom.removeClass('ux-m-valign-center');\r\n\r\n    this.dom.addClass('ux-m-valign-' + value);\r\n  }\r\n\r\n  createSlotDom(object) {\r\n    if (!(object instanceof Node)) {\r\n      throw new TypeError('createSlotDom(): 1 argument must be instance of Node')\r\n    }\r\n\r\n    const dom = jQuery('<div/>').append(object.dom);\r\n    dom.addClass('ux-slot');\r\n\r\n    dom.data('--wrapper', object);\r\n    object.dom.data('--wrapper-dom', dom);\r\n\r\n    const width = object.data('--width-percent');\r\n    const height = object.data('--height-percent');\r\n    const visible = object.css('display') !== 'none';\r\n\r\n    if (typeof width === 'string') {\r\n      dom.width(width);\r\n      object.dom.width('100%');\r\n    }\r\n\r\n    if (typeof height === 'string') {\r\n      dom.height(height);\r\n      object.dom.height('100%');\r\n    }\r\n\r\n    if (!visible) {\r\n      dom.hide();\r\n    }\r\n\r\n    return dom;\r\n  }\r\n\r\n  createDom() {\r\n    const dom = jQuery('<div></div>');\r\n    dom.addClass('ux-container');\r\n\r\n    return dom;\r\n  }\r\n\r\n  child(id) {\r\n    const dom = this.contentDom.find(`#${id}`);\r\n\r\n    if (dom && dom.length) {\r\n      return Node.getFromDom(dom);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  count() {\r\n    return this.contentDom.children().length;\r\n  }\r\n\r\n  children() {\r\n    const children = [];\r\n\r\n    this.contentDom.children().each(function () {\r\n      children.push(Node.getFromDom(jQuery(this)));\r\n    });\r\n\r\n    return children;\r\n  }\r\n\r\n  innerNodes() {\r\n    return this.children();\r\n  }\r\n\r\n  removeByIndex(index) {\r\n    const child = this.children()[index];\r\n    \r\n    if (child) {\r\n      child.free();\r\n    }\r\n  }\r\n\r\n  add(nodes) {\r\n    for (let i = 0; i < arguments.length; i++) {\r\n      this.contentDom.append(this.createSlotDom(arguments[i]));\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  insert(index, nodes) {\r\n    index = index | 0;\r\n\r\n    const children = this.contentDom.children();\r\n\r\n    if (!children.length || index >= children.length) {\r\n      return this.add(...Array.prototype.slice.call(arguments, 1));\r\n    }\r\n\r\n    nodes = Array.prototype.slice.call(arguments, 1);\r\n\r\n    let i = 0;\r\n    const self = this;\r\n\r\n    this.dom.children().each(function () {\r\n      if (index === i) {\r\n        for (let k = 0; k < nodes.length; k++) {\r\n          const slot = self.createSlotDom(nodes[k]);\r\n          slot.insertBefore(this);\r\n        }\r\n\r\n        return false;\r\n      }\r\n\r\n      i++;\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  clear() {\r\n    this.contentDom.empty();\r\n  }\r\n\r\n  show() {\r\n    this.dom.css('display', '');\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default Container;\r\n","import Container from './Container';\r\n\r\nclass HBox extends Container {\r\n\r\n  constructor(nodes) {\r\n    super(...arguments);\r\n\r\n    this.spacing = 0;\r\n    this.align = ['top', 'left'];\r\n  }\r\n\r\n  get fitHeight() {\r\n    return this.dom.hasClass('ux-m-fit-height');\r\n  }\r\n\r\n  set fitHeight(value) {\r\n    if (value) {\r\n      this.dom.addClass('ux-m-fit-height');\r\n    } else {\r\n      this.dom.removeClass('ux-m-fit-height');\r\n    }\r\n  }\r\n\r\n  get spacing() {\r\n    return this._spacing;\r\n  }\r\n\r\n  set spacing(value) {\r\n    this._spacing = value;\r\n    const slots = this.dom.find('> div');\r\n\r\n    slots.css('margin-right', value + 'px');\r\n    slots.last().css('margin-right', 0);\r\n  }\r\n\r\n  createDom() {\r\n    const dom = super.createDom();\r\n    dom.addClass('ux-h-box');\r\n\r\n    return dom;\r\n  }\r\n\r\n  createSlotDom(object) {\r\n    const dom = super.createSlotDom(object);\r\n    return dom;\r\n  }\r\n\r\n  add(nodes) {\r\n    super.add(...arguments);\r\n    this.spacing = this.spacing;\r\n  }\r\n\r\n  insert(index, nodes) {\r\n    super.insert(...arguments);\r\n    this.spacing = this.spacing;\r\n  }\r\n}\r\n\r\nexport default HBox;\r\n","import Labeled from \"./Labeled\";\r\n\r\n/**\r\n *\r\n */\r\nclass Hyperlink extends Labeled {\r\n  get href() {\r\n    return this.dom.attr('href');\r\n  }\r\n\r\n  set href(value) {\r\n    this.dom.attr('href', value);\r\n  }\r\n\r\n  get target() {\r\n    return this.dom.attr('target') || '_self';\r\n  }\r\n\r\n  set target(value) {\r\n    this.dom.attr('target', value);\r\n  }\r\n\r\n  createDom() {\r\n    const dom = jQuery('<a class=\"ux-labeled ux-hyperlink\" href><span class=\"ux-labeled-text\"></span></a>');\r\n    dom.on('click.Hyperlink', (e) => {\r\n      if (this.href === '#') {\r\n        e.preventDefault();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default Hyperlink;","import Node from './Node';\r\nimport Utils from \"./util/Utils\";\r\n\r\nclass Icon extends Node {\r\n  get kind() {\r\n    this.dom.text();\r\n  }\r\n\r\n  set kind(value) {\r\n    this.dom.text(value);\r\n  }\r\n\r\n  get color() {\r\n    return this.dom.css('color') || 'black';\r\n  }\r\n\r\n  set color(value) {\r\n    this.dom.css('color', value);\r\n  }\r\n\r\n  get imageSize() {\r\n    return Utils.toPt(this.dom.css('font-size'));\r\n  }\r\n\r\n  set imageSize(value) {\r\n    this.dom.css('font-size', value);\r\n  }\r\n\r\n  createDom() {\r\n    return jQuery('<i class=\"material-icons ux-icon\"></i>');\r\n  }\r\n}\r\n\r\nexport default Icon;","import Node from './Node';\r\n\r\nclass ImageView extends Node {\r\n\r\n  constructor(image) {\r\n    super();\r\n\r\n    this.proportional = true;\r\n    this.displayType = 'origin';\r\n\r\n    if (image !== undefined) {\r\n      this.source = image;\r\n    }\r\n  }\r\n\r\n  get source() {\r\n    let source = this.dom.css('background-image');\r\n\r\n    if (source) {\r\n      source = /^url\\((['\"]?)(.*)\\1\\)$/.exec(source);\r\n      return source ? source[2] : null;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  set source(value) {\r\n    this.dom.css({'background-image': `url('${value}')`});\r\n\r\n    if (this.displayType === 'origin') {\r\n      this.dom.find('img').attr('src', value);\r\n    }\r\n  }\r\n\r\n  get centered() {\r\n    return this.dom.css('background-position') === '50% 50%';\r\n  }\r\n\r\n  set centered(value) {\r\n    this.dom.css('background-position', value ? '50% 50%' : '0 0');\r\n  }\r\n\r\n  get displayType() {\r\n    switch (this.dom.css('background-size')) {\r\n      case '100% 100%': return 'filled';\r\n      case 'cover': return 'cropped';\r\n      case 'resized': return 'resized';\r\n\r\n      case 'auto':\r\n      case 'auto auto': return 'origin';\r\n\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  set displayType(type) {\r\n    this.dom.find('img').remove();\r\n\r\n    switch (type.toString().toLowerCase()) {\r\n      case 'filled':\r\n        this.dom.css('background-size', `100% 100%`);\r\n        break;\r\n      case 'cropped':\r\n        this.dom.css('background-size', 'cover');\r\n        break;\r\n      case 'resized':\r\n        this.dom.css('background-size', 'contain');\r\n        break;\r\n      case 'origin':\r\n        const source = this.source;\r\n        this.dom.css('background-size', 'auto auto');\r\n        this.dom.append(jQuery('<img style=\"visibility: hidden\" />'));\r\n        this.source = source;\r\n        break;\r\n    }\r\n  }\r\n\r\n  createDom() {\r\n    const dom = jQuery('<div></div>');\r\n    dom.addClass('ux-image-view');\r\n\r\n    dom.css({\r\n      display: 'inline-block',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundSize: '100% 100%',\r\n      backgroundPosition: '0 0'\r\n    });\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default ImageView;\r\n","import Labeled from './Labeled';\r\n\r\n\r\nclass Label extends Labeled {\r\n\r\n  createDom() {\r\n      const dom = jQuery('<span class=\"ux-labeled ux-label\"><span class=\"ux-labeled-text\"></span></span>');\r\n      return dom;\r\n  }\r\n}\r\n\r\nexport default Label;\r\n","import Node from './Node';\r\nimport Font from './paint/Font';\r\nimport ImageView from './ImageView';\r\nimport Utils from './util/Utils';\r\n\r\nclass Labeled extends Node {\r\n  constructor(text, graphic) {\r\n    super();\r\n    this.textPreFormatted = false;\r\n    this.textType = 'text';\r\n    this.contentDisplay = 'left';\r\n    this.graphicTextGap = 4;\r\n    this.graphic = graphic;\r\n    this.text = text;\r\n    this.align = ['center', 'center'];\r\n  }\r\n\r\n  get font() {\r\n    return Font.getFromDom(this.dom);\r\n  }\r\n\r\n  set font(value) {\r\n    Font.applyToDom(this.dom, value);\r\n  }\r\n\r\n  get align() {\r\n    return [this.verAlign, this.horAlign];\r\n  }\r\n\r\n  set align(value) {\r\n    if (value instanceof Array && value.length >= 2) {\r\n      this.horAlign = value[1];\r\n      this.verAlign = value[0];\r\n    }\r\n  }\r\n\r\n  get horAlign() {\r\n    if (this.dom.hasClass('ux-m-halign-right')) {\r\n      return 'right';\r\n    } else if (this.hasClass('ux-m-halign-center')) {\r\n      return 'center';\r\n    }\r\n\r\n    return 'left';\r\n  }\r\n\r\n  set horAlign(value) {\r\n    this.dom.removeClass('ux-m-halign-left');\r\n    this.dom.removeClass('ux-m-halign-right');\r\n    this.dom.removeClass('ux-m-halign-center');\r\n\r\n    this.dom.addClass('ux-m-halign-' + value);\r\n  }\r\n\r\n  get verAlign() {\r\n    if (this.dom.hasClass('ux-m-valign-bottom')) {\r\n      return 'bottom';\r\n    } else if (this.hasClass('ux-m-valign-center')) {\r\n      return 'center';\r\n    }\r\n\r\n    return 'top';\r\n  }\r\n\r\n  set verAlign(value) {\r\n    this.dom.removeClass('ux-m-valign-top');\r\n    this.dom.removeClass('ux-m-valign-bottom');\r\n    this.dom.removeClass('ux-m-valign-center');\r\n\r\n    this.dom.addClass('ux-m-valign-' + value);\r\n  }\r\n\r\n  get text() {\r\n    let dom = this.dom.find('span.ux-labeled-text');\r\n\r\n    if (this.textPreFormatted) {\r\n      dom = dom.find('> pre');\r\n    }\r\n\r\n    switch (this.textType) {\r\n      case 'text':\r\n        return dom.text();\r\n      case 'html':\r\n        return dom.html();\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  set text(value) {\r\n    let dom = this.dom.find('span.ux-labeled-text');\r\n\r\n    if (this.textPreFormatted) {\r\n      dom = dom.find('> pre');\r\n    }\r\n\r\n    switch (this.textType) {\r\n      case 'text':\r\n        dom.text(value);\r\n        break;\r\n\r\n      case 'html':\r\n        dom.html(value);\r\n        break;\r\n    }\r\n  }\r\n\r\n  get textPreFormatted() {\r\n    return this.dom.find('span.ux-labeled-text').has('> pre').length > 0;\r\n  }\r\n\r\n  set textPreFormatted(value) {\r\n    if (this.textPreFormatted === value) {\r\n      return;\r\n    }\r\n\r\n    const dom = this.dom.find('span.ux-labeled-text');\r\n    if (value) {\r\n      dom.html('<pre>' + dom.html() + '</pre>');\r\n    } else {\r\n      dom.html(dom.find('> pre').html());\r\n    }\r\n  }\r\n\r\n  get textColor() {\r\n    return this.dom.css('color');\r\n  }\r\n\r\n  set textColor(value) {\r\n    this.dom.css('color', value ? value : '');\r\n  }\r\n\r\n  get textType() {\r\n    return this._textType;\r\n  }\r\n\r\n  set textType(value) {\r\n    const text = this.text;\r\n    const graphic = this.graphic;\r\n\r\n    if (value) {\r\n      this._textType = value.toString().toLowerCase();\r\n    } else {\r\n      this._textType = 'text';\r\n    }\r\n\r\n    this.text = text;\r\n    this.graphic = graphic;\r\n  }\r\n\r\n  get contentDisplay() {\r\n    if (this.dom.first().hasClass('ux-graphic')) {\r\n      if (this.dom.hasClass('ux-labeled-vertical')) {\r\n        return 'top';\r\n      } else {\r\n        return 'left';\r\n      }\r\n    } else if (this.dom.last().hasClass('ux-graphic')) {\r\n      if (this.dom.hasClass('ux-labeled-vertical')) {\r\n        return 'bottom';\r\n      } else {\r\n        return 'right';\r\n      }\r\n    } else {\r\n      return this._contentDisplay;\r\n    }\r\n  }\r\n\r\n  set contentDisplay(value) {\r\n    const graphic = this.graphic;\r\n    const graphicGap = this.graphicTextGap;\r\n    this._contentDisplay = value;\r\n\r\n    switch (value) {\r\n      case 'top':\r\n      case 'bottom':\r\n        this.dom.addClass('ux-labeled-vertical');\r\n        break;\r\n\r\n      case 'right':\r\n        this.dom.removeClass('ux-labeled-vertical');\r\n        break;\r\n\r\n      case 'left':\r\n      default:\r\n        this.dom.removeClass('ux-labeled-vertical');\r\n        this._contentDisplay = 'left';\r\n        break;\r\n    }\r\n\r\n    this.graphic = graphic;\r\n    this.graphicTextGap = graphicGap;\r\n  }\r\n\r\n  get graphicTextGap() {\r\n    const grDom = this.dom.find('.ux-graphic');\r\n\r\n    if (grDom.length) {\r\n      let prop = 'margin-right';\r\n\r\n      switch (this.contentDisplay) {\r\n        case 'bottom':\r\n          prop = 'margin-top';\r\n          break;\r\n        case 'right':\r\n          prop = 'margin-left';\r\n          break;\r\n        case 'top':\r\n          prop = 'margin-bottom';\r\n          break;\r\n      }\r\n\r\n      return Utils.toPt(grDom.css(prop));\r\n    } else {\r\n      return this._graphicGap;\r\n    }\r\n  }\r\n\r\n  set graphicTextGap(value) {\r\n    this._graphicGap = value;\r\n\r\n    const grDom = this.dom.find('.ux-graphic');\r\n\r\n    if (grDom.length) {\r\n      grDom.css('margin', 0);\r\n\r\n      let prop = 'margin-right';\r\n\r\n      switch (this.contentDisplay) {\r\n        case 'bottom':\r\n          prop = 'margin-top';\r\n          break;\r\n        case 'right':\r\n          prop = 'margin-left';\r\n          break;\r\n        case 'top':\r\n          prop = 'margin-bottom';\r\n          break;\r\n      }\r\n\r\n      grDom.css(prop, value + 'px');\r\n    }\r\n  }\r\n\r\n  get graphic() {\r\n    return Node.getFromDom(this.dom.find('.ux-graphic > *').first());\r\n  }\r\n\r\n  set graphic(node) {\r\n    const graphicGap = this.graphicTextGap;\r\n    this.dom.find('.ux-graphic').remove();\r\n\r\n    if (node) {\r\n      if (typeof node === 'string' || node instanceof String) {\r\n        node = new ImageView(node);\r\n      }\r\n\r\n      const dom = jQuery('<span class=\"ux-graphic\" />').append(node.dom);\r\n\r\n      switch (this.contentDisplay) {\r\n        case 'top':\r\n        case 'left':\r\n          this.dom.prepend(dom);\r\n          break;\r\n        case 'bottom':\r\n        case 'right':\r\n          this.dom.append(dom);\r\n          break;\r\n      }\r\n\r\n      this.graphicTextGap = graphicGap;\r\n    }\r\n  }\r\n\r\n  innerNodes() {\r\n    const result = [];\r\n\r\n    if (this.graphic) {\r\n      result.push(this.graphic);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default Labeled;\r\n","import Container from './Container';\r\nimport Node from './Node';\r\nimport AppMediator from '../NX/AppMediator';\r\nimport Font from \"./paint/Font\";\r\n\r\nclass ListView extends Container {\r\n  constructor() {\r\n    super();\r\n\r\n    this.spacing = 0;\r\n    this.align = ['center', 'left'];\r\n\r\n    this.dom.on('change.ListView', () => {\r\n      const data = {\r\n        selected: this.selected,\r\n        selectedIndex: this.selectedIndex\r\n      };\r\n\r\n      AppMediator.sendUserInput(this, data, () => {\r\n        this.trigger('action');\r\n      });\r\n    })\r\n  }\r\n\r\n  get font() {\r\n    return Font.getFromDom(this.dom);\r\n  }\r\n\r\n  set font(value) {\r\n    Font.applyToDom(this.dom, value);\r\n  }\r\n\r\n  get selectedIndex() {\r\n    let index = -1;\r\n    let result = -1;\r\n\r\n    this.dom.find('> .ux-slot').each(function () {\r\n      index++;\r\n\r\n      if (jQuery(this).hasClass('active')) {\r\n        result = index;\r\n        return true;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  set selectedIndex(value) {\r\n    const children = this.children();\r\n\r\n    if (value >= 0 && value < children.length) {\r\n      this.selected = children[value];\r\n    } else {\r\n      this.selected = null;\r\n    }\r\n  }\r\n\r\n  get selected() {\r\n    const dom = this.dom.find('> .ux-slot.active').first();\r\n\r\n    if (dom) {\r\n      return Node.getFromDom(dom);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  set selected(object) {\r\n    this.dom.find('> .ux-slot.active').removeClass('active');\r\n\r\n    if (object instanceof Node) {\r\n      object.dom.closest('.ux-slot').addClass('active');\r\n    }\r\n  }\r\n\r\n  createDom() {\r\n    const dom = super.createDom();\r\n    dom.addClass('list-group');\r\n    dom.addClass('ux-list-view');\r\n    return dom;\r\n  }\r\n\r\n  createSlotDom(object) {\r\n    if (!(object instanceof Node)) {\r\n      throw new TypeError('createSlotDom(): 1 argument must be instance of Node')\r\n    }\r\n\r\n    const dom = jQuery('<span class=\"list-group-item ux-slot\" />').append(object.dom);\r\n\r\n    dom.on('click.ListView', (e) => {\r\n      dom.closest('.ux-list-view').find('> .ux-slot').removeClass('active');\r\n      dom.addClass('active');\r\n\r\n      this.trigger('change');\r\n      e.preventDefault();\r\n      return false;\r\n    });\r\n\r\n    dom.data('--wrapper', object);\r\n    object.dom.data('--wrapper-dom', dom);\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default ListView;\r\n","import SelectControl from './SelectControl';\r\n\r\nclass Listbox extends SelectControl {\r\n\r\n  createDom() {\r\n    var dom = super.createDom();\r\n    dom.prop('multiple', true);\r\n    dom.addClass('ux-listbox');\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default Listbox;\r\n","import Utils from './util/Utils';\r\nimport UILoader from \"../NX/UILoader\";\r\n\r\nconst KEY_CODES = {\r\n  Enter: 13,\r\n  Backspace: 8,\r\n  Tab: 9,\r\n  Cancel: 0x03,\r\n  Clear: 0x0C,\r\n  Shift: 0x10,\r\n  Ctrl: 0x11,\r\n  Alt: 0x12,\r\n  Pause: 0x13,\r\n  CapsLock: 0x14,\r\n  Esc: 0x1B,\r\n  Escape: 0x1B,\r\n  Space: 0x20,\r\n  PageUp: 0x21,\r\n  PageDown: 0x22,\r\n  End: 0x23,\r\n  Home: 0x24,\r\n  Left: 0x25,\r\n  Up: 0x26,\r\n  Right: 0x27,\r\n  Down: 0x28,\r\n  Comma:0x2C,\r\n  Delete: 0x7F,\r\n  F1: 0x70, F2: 0x71, F3: 0x72, F4: 0x73, F5: 0x74, F6: 0x75, F7: 0x76, F8: 0x77, F9: 0x78, F10: 0x79, F11: 0x7A, F12: 0x7B,\r\n  PrintScreen: 0x9A,\r\n  Insert: 0x9B\r\n};\r\n\r\n/**\r\n * Base HTML Node class.\r\n **/\r\nclass Node {\r\n  constructor(dom) {\r\n    this.__observers = [];\r\n\r\n    if (dom === undefined) {\r\n      this.dom = this.createDom();\r\n\r\n      if (!(this.dom instanceof jQuery)) {\r\n        throw new Error(\"Method createDom() must return instance of an jQuery object\");\r\n      }\r\n    } else {\r\n      if (dom instanceof jQuery) {\r\n        this.dom = dom;\r\n      } else {\r\n        throw new Error(\"Non-jquery object cannot be passed into Node.construct()\");\r\n      }\r\n    }\r\n\r\n    this.dom.data('--wrapper', this);\r\n\r\n    this.dom.on('dblclick.Node', (e) => {\r\n      this.trigger('click-2x', e);\r\n    });\r\n\r\n    this.dom.on('click.Node', (e) => {\r\n      switch (e.which) {\r\n        case 1:\r\n          this.trigger('click-left', e); break;\r\n        case 2:\r\n          this.trigger('click-middle', e); break;\r\n        case 3:\r\n          this.trigger('click-right', e); break;\r\n      }\r\n    });\r\n\r\n    const keyEventBuilder = (event) => {\r\n      return (e) => {\r\n        let found = false;\r\n\r\n        for (let key in KEY_CODES) {\r\n          const value = KEY_CODES[key];\r\n\r\n          if (value === e.keyCode) {\r\n            this.trigger(event + '-' + key.toLowerCase(), e);\r\n\r\n            if (event.shiftKey) this.trigger(`${event}-shift+${key.toLowerCase()}`, e);\r\n            if (event.ctrlKey) this.trigger(`${event}-ctrl+${key.toLowerCase()}`, e);\r\n            if (event.altKey) this.trigger(`${event}-alt+${key.toLowerCase()}`, e);\r\n\r\n            found = true;\r\n          }\r\n        }\r\n\r\n        switch (event.keyCode) {\r\n          case KEY_CODES.Up:\r\n          case KEY_CODES.Right:\r\n          case KEY_CODES.Down:\r\n          case KEY_CODES.Left:\r\n            this.trigger(event + '-anydirection', e);\r\n\r\n            if (event.shiftKey) this.trigger(`${event}-shift+anydirection`, e);\r\n            if (event.ctrlKey) this.trigger(`${event}-ctrl+anydirection`, e);\r\n            if (event.altKey) this.trigger(`${event}-alt+anydirection`, e);\r\n\r\n            break;\r\n        }\r\n\r\n        if (event.hasOwnProperty('char') && !found) {\r\n          const char = event.char.toString().toLowerCase();\r\n          this.trigger(event + '-' + char, e);\r\n\r\n          if (event.shiftKey) this.trigger(`${event}-shift+${char}`, e);\r\n          if (event.ctrlKey) this.trigger(`${event}-ctrl+${char}`, e);\r\n          if (event.altKey) this.trigger(`${event}-alt+${char}`, e);\r\n\r\n          if ('0123456789'.indexOf(char) > -1) {\r\n            this.trigger(event + '-anydigit', e);\r\n\r\n            if (event.shiftKey) this.trigger(`${event}-shift+anydigit`, e);\r\n            if (event.ctrlKey) this.trigger(`${event}-ctrl+anydigit`, e);\r\n            if (event.altKey) this.trigger(`${event}-alt+anydigit`, e);\r\n          }\r\n\r\n          if ('qwertyuiopasdfghjklzxcvbnm'.indexOf(char) > -1) {\r\n            this.trigger(event + '-anyletter', e);\r\n\r\n            if (event.shiftKey) this.trigger(`${event}-shift+anyletter`, e);\r\n            if (event.ctrlKey) this.trigger(`${event}-ctrl+anyletter`, e);\r\n            if (event.altKey) this.trigger(`${event}-alt+anyletter`, e);\r\n          }\r\n        }\r\n      };\r\n    };\r\n\r\n    this.dom.on('keydown.Node', keyEventBuilder('keydown'));\r\n    this.dom.on('keyup.Node', keyEventBuilder('keyup'));\r\n  }\r\n\r\n  /**\r\n   * @param {function} handler\r\n   */\r\n  __forEachObservers(handler) {\r\n    for (let observer of this.__observers) {\r\n      handler(observer);\r\n    }\r\n  }\r\n\r\n  __triggerPropertyChange(name, newValue) {\r\n    this.__forEachObservers(observer => {\r\n      const oldValue = this[name];\r\n      observer.triggerPropertyChange(name, oldValue, newValue)\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @returns {string}\r\n   */\r\n  get uuid() {\r\n    return this.dom.attr('uuid')\r\n  }\r\n\r\n  /**\r\n   * @param {string} value\r\n   */\r\n  set uuid(value) {\r\n    this.dom.removeClass(this.uuid);\r\n    this.dom.attr('uuid', value);\r\n    this.dom.addClass(value);\r\n  }\r\n\r\n  get id() {\r\n    return this.dom.attr('id')\r\n  }\r\n\r\n  set id(value) {\r\n    this.dom.attr('id', value);\r\n  }\r\n\r\n  /**\r\n   * @returns {Array}\r\n   */\r\n  get classes() {\r\n    return this.dom.data('custom-classes') || [];\r\n  }\r\n\r\n  /**\r\n   * @param {Array} value\r\n   */\r\n  set classes(value) {\r\n    const oldClasses = this.classes;\r\n    let classes = [];\r\n\r\n    if (value instanceof Array) {\r\n      classes = value;\r\n    } else {\r\n      classes = value.toString().split(' ');\r\n    }\r\n\r\n    this.dom.data('custom-classes', classes);\r\n\r\n    if (oldClasses.length > 0) {\r\n      this.dom.removeClass(oldClasses.join(' '));\r\n    }\r\n\r\n    this.dom.addClass(classes.join(' '));\r\n  }\r\n\r\n  get style() {\r\n    return this.dom.attr('style');\r\n  }\r\n\r\n  set style(value) {\r\n    this.dom.attr('style', value);\r\n  }\r\n\r\n  get visible() {\r\n    let dom = this.dom;\r\n\r\n    if (this.dom.data('--wrapper-dom')) {\r\n      dom = this.dom.data('--wrapper-dom');\r\n    }\r\n\r\n    return dom.is(':visible');\r\n  }\r\n\r\n  set visible(value) {\r\n    if (value) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  get opacity() {\r\n    return this.dom.css('opacity');\r\n  }\r\n\r\n  set opacity(value) {\r\n    this.dom.css('opacity', value);\r\n  }\r\n\r\n  get enabled() {\r\n    return !this.dom.prop(\"disabled\");\r\n  }\r\n\r\n  set enabled(value) {\r\n    this.dom.prop('disabled', !value);\r\n  }\r\n\r\n  get selectionEnabled() {\r\n    return this.dom.css('user-select') !== 'none';\r\n  }\r\n\r\n  set selectionEnabled(value) {\r\n    this.dom.css('user-select', value ? '' : 'none');\r\n  }\r\n\r\n  get focused() {\r\n    return this.dom.is(':focus');\r\n  }\r\n\r\n  get x() {\r\n    return this.dom.position().left;\r\n  }\r\n\r\n  set x(value) {\r\n    this.dom.css({left: value});\r\n  }\r\n\r\n  get y() {\r\n    return this.dom.position().top;\r\n  }\r\n\r\n  set y(value) {\r\n    this.dom.css({top: value});\r\n  }\r\n\r\n  get position() {\r\n    return [this.x, this.y];\r\n  }\r\n\r\n  set position(value) {\r\n    if (value instanceof Array && value.length >= 2) {\r\n      this.x = value[0];\r\n      this.y = value[1];\r\n    }\r\n  }\r\n\r\n  get width() {\r\n    if (this.data('--width-percent')) {\r\n      return this.data('--width-percent');\r\n    }\r\n\r\n    return this.dom.width()\r\n  }\r\n\r\n  set width(value) {\r\n    this.dom.width(value);\r\n\r\n    if (typeof value === 'string' && value.indexOf('%') > -1) {\r\n      this.data('--width-percent', value);\r\n\r\n      const wrapperDom = this.dom.data('--wrapper-dom');\r\n      if (wrapperDom) {\r\n        this.dom.width('100%');\r\n      }\r\n    } else {\r\n      this.data('--width-percent', null);\r\n    }\r\n  }\r\n\r\n  get height() {\r\n    if (this.data('--height-percent')) {\r\n      return this.data('--height-percent');\r\n    }\r\n\r\n    return this.dom.height()\r\n  }\r\n\r\n  set height(value) {\r\n    this.dom.height(value);\r\n\r\n    if (typeof value === 'string' && value.indexOf('%') > -1) {\r\n      this.data('--height-percent', value);\r\n\r\n      const wrapperDom = this.dom.data('--wrapper-dom');\r\n      if (wrapperDom) {\r\n        this.dom.height('100%');\r\n      }\r\n    } else {\r\n      this.data('--height-percent', null);\r\n    }\r\n  }\r\n\r\n  get size() {\r\n    return [this.width, this.height]\r\n  }\r\n\r\n  set size(value) {\r\n    if (value instanceof Array && value.length >= 2) {\r\n      this.width = value[0];\r\n      this.height = value[1];\r\n    }\r\n  }\r\n\r\n  get tooltip() {\r\n    return this.dom.data('tooltip');\r\n  }\r\n\r\n  __setTooltip(tooltip) {\r\n    this.dom.data('--tooltip', tooltip);\r\n\r\n    /*if (this.dom.data('bs.tooltip')) {\r\n      this.dom.tooltip('dispose');\r\n    }*/\r\n\r\n    if (tooltip) {\r\n      const options = jQuery.extend({},\r\n        { title: tooltip instanceof Node ? tooltip.dom : tooltip },\r\n        this.tooltipOptions\r\n      );\r\n\r\n      this.dom.tooltip(options);\r\n    }\r\n  }\r\n\r\n  set tooltip(tooltip) {\r\n    if (this.tooltip === tooltip) return;\r\n\r\n    this.__setTooltip(tooltip);\r\n  }\r\n\r\n  get tooltipOptions() {\r\n    return this.dom.data('--tooltipOptions') || {};\r\n  }\r\n\r\n  set tooltipOptions(options) {\r\n    this.dom.data('--tooltipOptions', options || {});\r\n    this.__setTooltip(this.tooltip);\r\n  }\r\n\r\n  get padding() {\r\n    return [\r\n      Utils.toPt(this.dom.css('padding-top')),\r\n      Utils.toPt(this.dom.css('padding-right')),\r\n      Utils.toPt(this.dom.css('padding-bottom')),\r\n      Utils.toPt(this.dom.css('padding-left'))\r\n    ];\r\n  }\r\n\r\n  set padding(value) {\r\n    if (value instanceof Array) {\r\n      if (value.length >= 4) {\r\n        this.dom.css({\r\n          'padding-top': value[0], 'padding-right': value[1],\r\n          'padding-bottom': value[2], 'padding-left': value[3]\r\n        });\r\n      } else if (value.length >= 2) {\r\n        this.dom.css({\r\n          'padding-top': value[0], 'padding-right': value[1],\r\n          'padding-bottom': value[0], 'padding-left': value[1]\r\n        });\r\n      } else if (value.length >= 1) {\r\n        this.dom.css('padding', value[0]);\r\n      } else {\r\n        this.dom.css('padding', 0);\r\n      }\r\n    } else {\r\n      this.dom.css('padding', value);\r\n    }\r\n  }\r\n\r\n  get cursor() {\r\n    return this.dom.css('cursor');\r\n  }\r\n\r\n  set cursor(value) {\r\n    this.dom.css('cursor', value);\r\n  }\r\n\r\n  get parent() {\r\n    let parent = null;\r\n\r\n    if (this.dom.data('--wrapper-dom')) {\r\n      parent = this.dom.data('--wrapper-dom').parent();\r\n    } else {\r\n      parent = this.dom.parent();\r\n    }\r\n\r\n    if (!parent) {\r\n      return null;\r\n    }\r\n\r\n    return Node.getFromDom(parent);\r\n  }\r\n\r\n  get userData() {\r\n    return this.dom.data('--user-data');\r\n  }\r\n\r\n  set userData(value) {\r\n    this.dom.data('--user-data', value);\r\n  }\r\n\r\n  createDom() {\r\n    throw new Error(\"Cannot call abstract method createDom()\");\r\n  }\r\n\r\n  requestFocus() {\r\n    this.focus();\r\n  }\r\n\r\n  relocate(x, y) {\r\n    this.position = [x, y];\r\n  }\r\n\r\n  resize(width, height) {\r\n    this.size = [width, height];\r\n  }\r\n\r\n  focus() {\r\n    this.dom.focus();\r\n  }\r\n\r\n  css(value) {\r\n    return this.dom.css(...arguments);\r\n  }\r\n\r\n  data(params) {\r\n    if (arguments.length === 1) {\r\n      return this.dom.data(...arguments);\r\n    } else {\r\n      this.dom.data(...arguments);\r\n      return this;\r\n    }\r\n  }\r\n\r\n  lookup(selector) {\r\n    const dom = this.dom.find(selector).first();\r\n\r\n    if (dom) {\r\n      return Node.getFromDom(dom);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  lookupAll(selector) {\r\n    const nodes = [];\r\n\r\n    this.dom.find(selector).each(() => {\r\n      nodes.push(Node.getFromDom(this));\r\n    });\r\n\r\n    return nodes;\r\n  }\r\n\r\n  toFront() {\r\n    const parent = this.parent;\r\n\r\n    if (parent) {\r\n      if (parent['childToFront']) {\r\n        parent.childToFront(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  toBack() {\r\n    const parent = this.parent;\r\n\r\n    if (parent) {\r\n      if (parent['childToBack']) {\r\n        parent.childToBack(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  free() {\r\n    const wrapperDom = this.dom.data('--wrapper-dom');\r\n\r\n    if (wrapperDom) {\r\n      wrapperDom.remove();\r\n    } else {\r\n      this.dom.detach();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  show() {\r\n    let dom = this.dom;\r\n    dom.css('display', '');\r\n\r\n    if (this.dom.data('--wrapper-dom')) {\r\n      dom = this.dom.data('--wrapper-dom');\r\n      dom.css('display', '');\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  hide() {\r\n    let dom = this.dom;\r\n    dom.hide();\r\n\r\n    if (this.dom.data('--wrapper-dom')) {\r\n      dom = this.dom.data('--wrapper-dom');\r\n      dom.hide();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  toggle() {\r\n    if (this.visible) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {object} properties\r\n   * @param {object} options\r\n   */\r\n  animate(properties, options) {\r\n    this.dom.animate(properties, options);\r\n  }\r\n\r\n  /**\r\n   * Stop animation.\r\n   */\r\n  stopAllAnimate(clearQueue, jumpToEnd, callback) {\r\n    this.dom.stop(clearQueue, jumpToEnd);\r\n\r\n    if (callback) {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop animation by queue.\r\n   * @param queue\r\n   * @param clearQueue\r\n   * @param jumpToEnd\r\n   */\r\n  stopAnimate(queue, clearQueue, jumpToEnd, callback) {\r\n    this.dom.stop(queue, clearQueue, jumpToEnd);\r\n\r\n    if (callback) {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  on(event, callback) {\r\n    this.dom.on(event, (event) => {\r\n      event.sender = this;\r\n      callback.call(this, event);\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {string} event\r\n   * @returns {Node}\r\n   */\r\n  off(event) {\r\n    this.dom.off(event);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {string} event\r\n   * @param params\r\n   * @returns {*}\r\n   */\r\n  trigger(event, params) {\r\n    return this.dom.trigger(event, params);\r\n  }\r\n\r\n  /**\r\n   * @param {string} id\r\n   * @returns {Node}\r\n   */\r\n  child(id) {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Returns inner Nodes as array.\r\n   * @returns {Array}\r\n   */\r\n  innerNodes() {\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * @param object\r\n   */\r\n  loadSchema(object) {\r\n    for (const prop in object) {\r\n      if (object.hasOwnProperty(prop)) {\r\n        if (prop[0] === '_') {\r\n          continue;\r\n        }\r\n\r\n        let value = object[prop];\r\n\r\n        if (value.hasOwnProperty('_')) {\r\n          const uiLoader = new UILoader();\r\n          value = uiLoader.load(value);\r\n        }\r\n\r\n        switch (prop) {\r\n          default:\r\n            this[prop] = value;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (object.classes) {\r\n      this.classes = object.classes;\r\n    }\r\n  }\r\n\r\n  static getFromDom(jqueryObject) {\r\n    if (jqueryObject === null || jqueryObject.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    if (jqueryObject instanceof jQuery) {\r\n      let wrapper = jqueryObject.data('--wrapper');\r\n      return wrapper ? wrapper : new Node(jqueryObject);\r\n    }\r\n\r\n    throw new Error(\"Node.getFromDom(): 1 argument must be an jQuery object\");\r\n  }\r\n}\r\n\r\nexport default Node;\r\n","import TextInputControl from './TextInputControl';\r\n\r\nclass PasswordField extends TextInputControl {\r\n  createDom() {\r\n    var dom = jQuery('<input type=\"password\" class=\"form-control ux-text-input-control ux-password-field\" />');\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default PasswordField;\r\n","import Node from './Node';\r\nimport Utils from './util/Utils';\r\n\r\nclass ProgressBar extends Node {\r\n  get progress() {\r\n    return Utils.toPt(this.dom.find('> .progress-bar').css('width'));\r\n  }\r\n\r\n  set progress(value) {\r\n    this.dom.find('> .progress-bar').css('width', value + '%');\r\n  }\r\n\r\n  get kind() {\r\n    const dom = this.dom.find('> .progress-bar');\r\n\r\n    if (dom.hasClass('progress-bar-success')) {\r\n      return 'success';\r\n    } else if (dom.hasClass('progress-bar-info')) {\r\n      return 'info';\r\n    } else if (dom.hasClass('progress-bar-warning')) {\r\n      return 'warning';\r\n    } else if (dom.hasClass('progress-bar-danger')) {\r\n      return 'danger';\r\n    }\r\n\r\n    return 'default';\r\n  }\r\n\r\n  set kind(value) {\r\n    const dom = this.dom.find('> .progress-bar');\r\n    \r\n    dom.removeClass(`progress-bar-${this.kind}`);\r\n    dom.addClass(`progress-bar-${value}`);\r\n  }\r\n\r\n  get animated() {\r\n    const dom = this.dom.find('> .progress-bar');\r\n    return dom.hasClass('active');\r\n  }\r\n\r\n  set animated(value) {\r\n    const dom = this.dom.find('> .progress-bar');\r\n\r\n    if (value) {\r\n      dom.addClass('active');\r\n    } else {\r\n      dom.removeClass('active');\r\n    }\r\n  }\r\n\r\n  get striped() {\r\n    const dom = this.dom.find('> .progress-bar');\r\n    return dom.hasClass('progress-bar-striped');\r\n  }\r\n\r\n  set striped(value) {\r\n    const dom = this.dom.find('> .progress-bar');\r\n\r\n    if (value) {\r\n      dom.addClass('progress-bar-striped');\r\n    } else {\r\n      dom.removeClass('progress-bar-striped');\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    let width = this.dom.find('> .progress-bar').css('width');\r\n\r\n    if (!width) {\r\n      return 0;\r\n    }\r\n\r\n    return parseInt(width);\r\n  }\r\n\r\n  set value(v) {\r\n    this.dom.find('> .progress-bar').css('width', v + \"%\");\r\n  }\r\n\r\n  createDom() {\r\n    const dom = jQuery('<div class=\"progress ux-progress-bar\"><div class=\"progress-bar\" role=\"progressbar\"></div></div>');\r\n\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default ProgressBar;\r\n","import Node from './Node';\r\nimport AppMediator from '../NX/AppMediator';\r\n\r\nexport default class SelectControl extends Node {\r\n  constructor(items) {\r\n    super();\r\n\r\n    if (items) {\r\n      this.items = items;\r\n    }\r\n\r\n    this.dom.on('change.SelectControl', (e) => {\r\n      AppMediator.sendUserInput(this, {selected: this.selected, selectedText: this.selectedText}, () => {\r\n        this.trigger('action', e);\r\n      });\r\n    });\r\n  }\r\n\r\n  get items() {\r\n    const result = {};\r\n\r\n    this.dom.find('option').each(function () {\r\n      result[jQuery(this).attr('value')] = jQuery(this).text();\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  set items(value) {\r\n    this.dom.find('option').remove();\r\n\r\n    for (const key in value) {\r\n      if (value.hasOwnProperty(key)) {\r\n        this.dom.append(jQuery(`<option value='${key}'>${value[key]}</option>`));\r\n      }\r\n    }\r\n  }\r\n\r\n  get selected() {\r\n    return this.dom.val();\r\n  }\r\n\r\n  set selected(value) {\r\n    this.dom.val(value);\r\n  }\r\n\r\n  get selectedText() {\r\n    return this.dom.find('option:selected').text();\r\n  }\r\n\r\n  set selectedText(value) {\r\n    this.selected = null;\r\n\r\n    this.dom.find('option').each(function () {\r\n      if (jQuery(this).text() === value) {\r\n        jQuery(this).prop('selected', true);\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  loadSchema(object) {\r\n    super.loadSchema(object);\r\n\r\n    if (object.hasOwnProperty('selected')) {\r\n      this.selected = object.selected;\r\n    }\r\n\r\n    if (object.hasOwnProperty('selectedText')) {\r\n      this.selectedText = object.selectedText;\r\n    }\r\n  }\r\n\r\n  createDom() {\r\n    const dom = jQuery('<select class=\"form-control ux-select-control\">');\r\n    return dom;\r\n  }\r\n}\r\n","\r\nimport Checkbox from \"./Checkbox\";\r\nimport AppMediator from \"../NX/AppMediator\";\r\nimport Utils from \"./util/Utils\";\r\n\r\nconst KINDS = [\r\n  'success', 'primary', 'secondary', 'info', 'warning', 'danger', 'link', 'dark', 'light'\r\n];\r\n\r\nclass Switch extends Checkbox {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  get iconSize() {\r\n    return Utils.toPt(this.dom.find('label').css('font-size'));\r\n  }\r\n\r\n  set iconSize(value) {\r\n    const dom = this.dom.find('label');\r\n    dom.css('font-size', value);\r\n\r\n    const labeled = this.dom.find('.ux-labeled-text');\r\n\r\n    if (this.iconDisplay === 'left') {\r\n      labeled.css('padding-left', value * 2.5);\r\n    } else {\r\n      labeled.css('padding-left', '');\r\n    }\r\n  }\r\n\r\n  set kind(value) {\r\n    if (!value) {\r\n      value = 'default';\r\n    }\r\n\r\n    const dom = this.dom.find('label');\r\n\r\n    dom.removeClass(`badge-${this.kind}`);\r\n\r\n    if (value) {\r\n      dom.addClass(`badge-${value}`);\r\n    }\r\n  }\r\n\r\n  get kind() {\r\n    const dom = this.dom.find('label');\r\n\r\n    for (let kind of KINDS) {\r\n      if (dom.hasClass(`badge-${kind}`)) {\r\n        return kind;\r\n      }\r\n    }\r\n\r\n    return 'default';\r\n  }\r\n\r\n  get iconGap() {\r\n    const labeled = this.dom.find('.ux-labeled-text');\r\n    switch (this.iconDisplay) {\r\n      case 'left': return Utils.toPt(labeled.css('margin-left'));\r\n      case 'right': return Utils.toPt(labeled.css('margin-right'));\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  set iconGap(value) {\r\n    const labeled = this.dom.find('.ux-labeled-text');\r\n    labeled.css('margin-right', '');\r\n    labeled.css('margin-left', '');\r\n    labeled.css('padding-left', '');\r\n\r\n    switch (this.iconDisplay) {\r\n      case 'left':\r\n        labeled.css('margin-left', value);\r\n        labeled.css('padding-left', this.iconSize * 2.5);\r\n        break;\r\n\r\n      case 'right':\r\n        labeled.css('margin-right', value); break;\r\n    }\r\n  }\r\n\r\n  get iconDisplay() {\r\n    if (this.dom.find('> *:first').hasClass('ux-labeled-text')) {\r\n      return 'right';\r\n    } else {\r\n      return 'left';\r\n    }\r\n  }\r\n\r\n  set iconDisplay(value) {\r\n    if (this.iconDisplay === value) return;\r\n\r\n    const gap = this.iconGap;\r\n\r\n    const checkbox = this.dom.find('input[type=checkbox]');\r\n    const label = this.dom.find('label');\r\n    label.remove();\r\n    checkbox.remove();\r\n\r\n    let labeled = this.dom.find('.ux-labeled-text');\r\n\r\n    switch (value) {\r\n      case \"right\":\r\n        label.insertAfter(labeled);\r\n        checkbox.insertAfter(labeled);\r\n        break;\r\n      case \"left\":\r\n        checkbox.insertBefore(labeled);\r\n        label.insertBefore(labeled);\r\n        break;\r\n    }\r\n\r\n    this.iconGap = gap;\r\n  }\r\n\r\n  createDom() {\r\n    const dom = jQuery('<span><input type=\"checkbox\" /><label class=\"badge-default\"></label><span class=\"ux-labeled-text\"></span></span>');\r\n    dom.addClass('ux-labeled');\r\n    dom.addClass('ux-switch');\r\n\r\n\r\n    dom.on('click.Switch', (e) => {\r\n      const checkbox = dom.find('input[type=checkbox]');\r\n\r\n      if (!checkbox.prop('disabled')) {\r\n        checkbox.prop('checked', !checkbox.prop('checked'));\r\n\r\n        AppMediator.sendUserInput(this, {selected: this.selected}, () => {\r\n          this.trigger('action', e);\r\n        });\r\n      }\r\n    });\r\n\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default Switch;","import TextInputControl from './TextInputControl';\r\n\r\nclass TextArea extends TextInputControl {\r\n\r\n  get wrap() {\r\n    return this.dom.attr('wrap');\r\n  }\r\n\r\n  set wrap(value) {\r\n    this.dom.attr('wrap', value);\r\n  }\r\n\r\n  createDom() {\r\n    var dom = jQuery('<textarea class=\"form-control ux-text-input-control ux-text-area\" />');\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default TextArea;\r\n","import TextInputControl from './TextInputControl';\r\n\r\nclass TextField extends TextInputControl {\r\n  createDom() {\r\n    const dom = jQuery('<input type=\"text\" class=\"form-control ux-text-input-control ux-text-field\" />');\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default TextField;\r\n","import Node from './Node';\r\nimport AppMediator from '../NX/AppMediator';\r\nimport Font from \"./paint/Font\";\r\n\r\nclass TextInputControl extends Node {\r\n  constructor() {\r\n    super();\r\n\r\n    this.dom.on('keydown.TextInputControl', (e) => {\r\n        AppMediator.sendUserInput(this, () => {\r\n          return { text: this.text }\r\n        });\r\n    });\r\n  }\r\n\r\n  get placeholder() {\r\n    return this.dom.attr('placeholder');\r\n  }\r\n\r\n  set placeholder(value) {\r\n    this.dom.attr('placeholder', value);\r\n  }\r\n\r\n  get editable() {\r\n    return !this.dom.prop('readonly');\r\n  }\r\n\r\n  set editable(value) {\r\n    this.dom.prop('readonly', !value);\r\n  }\r\n\r\n  get textAlign() {\r\n    return thid.dom.css('text-algin');\r\n  }\r\n\r\n  set textAlign(value) {\r\n    this.dom.css('text-algin', value);\r\n  }\r\n\r\n  get font() {\r\n    return Font.getFromDom(this.dom);\r\n  }\r\n\r\n  set font(value) {\r\n    Font.applyToDom(this.dom, value);\r\n  }\r\n\r\n  get text() {\r\n    return this.dom.val();\r\n  }\r\n\r\n  set text(value) {\r\n    this.dom.val(value);\r\n  }\r\n}\r\n\r\nexport default TextInputControl;\r\n","import Button from './Button';\r\nimport AppMediator from '../NX/AppMediator';\r\n\r\nclass ToggleButton extends Button {\r\n  constructor(text, graphic) {\r\n    super(text, graphic);\r\n\r\n    this.dom.on('click.ToggleButton', () => {\r\n      AppMediator.sendUserInput(this, () => {\r\n        return {'selected': this.selected}\r\n      });\r\n    });\r\n  }\r\n\r\n  createDom() {\r\n    const dom = super.createDom();\r\n    dom.addClass('ux-toggle-button');\r\n    dom.attr('data-toggle', 'button');\r\n    return dom;\r\n  }\r\n\r\n  get selected() {\r\n    return this.dom.hasClass('active');\r\n  }\r\n\r\n  set selected(value) {\r\n    if (value) {\r\n      this.dom.addClass('active');\r\n      this.dom.attr('aria-pressed', true);\r\n    } else {\r\n      this.dom.removeClass('active');\r\n      this.dom.attr('aria-pressed', false);\r\n    }\r\n  }\r\n}\r\n\r\nexport default ToggleButton;\r\n","import Node from './Node';\r\nimport Button from './Button';\r\nimport ToggleButton from './ToggleButton';\r\nimport Labeled from './Labeled';\r\nimport Label from './Label';\r\nimport Checkbox from './Checkbox';\r\nimport Combobox from './Combobox';\r\nimport Listbox from './Listbox';\r\nimport ProgressBar from './ProgressBar';\r\nimport Container from './Container';\r\nimport HBox from './HBox';\r\nimport VBox from './VBox';\r\nimport ListView from './ListView';\r\nimport AnchorPane from './AnchorPane';\r\nimport ImageView from './ImageView';\r\nimport TextInputControl from './TextInputControl';\r\nimport TextField from './TextField';\r\nimport PasswordField from './PasswordField';\r\nimport TextArea from './TextArea';\r\nimport Window from './Window';\r\nimport Icon from './Icon';\r\nimport Hyperlink from './Hyperlink';\r\nimport Switch from './Switch';\r\n\r\n\r\nimport Font from './paint/Font';\r\nimport Utils from './util/Utils';\r\n\r\nexport default {\r\n  Node, Window,\r\n  ImageView,\r\n  Button, ToggleButton,\r\n  Labeled,\r\n  Label, Checkbox, Combobox, Listbox, ProgressBar,\r\n  TextInputControl, TextField, PasswordField, TextArea,\r\n  Container, HBox, VBox, AnchorPane, ListView, Icon, Hyperlink, Switch,\r\n\r\n  Font\r\n}\r\n","import Container from './Container';\r\n\r\nclass VBox extends Container {\r\n\r\n  constructor(nodes) {\r\n    super(...arguments);\r\n\r\n    this.spacing = 0;\r\n    this.align = ['top', 'left'];\r\n  }\r\n\r\n  get fitWidth() {\r\n    return this.dom.hasClass('ux-m-fit-width');\r\n  }\r\n\r\n  set fitWidth(value) {\r\n    if (value) {\r\n      this.dom.addClass('ux-m-fit-width');\r\n    } else {\r\n      this.dom.removeClass('ux-m-fit-width');\r\n    }\r\n  }\r\n\r\n  get spacing() {\r\n    return this._spacing;\r\n  }\r\n\r\n  set spacing(value) {\r\n    this._spacing = value;\r\n    const slots = this.dom.find('> div');\r\n\r\n    slots.css('margin-bottom', value + 'px');\r\n    slots.last().css('margin-bottom', 0);\r\n  }\r\n\r\n  createDom() {\r\n    const dom = super.createDom();\r\n    dom.addClass('ux-v-box');\r\n    return dom;\r\n  }\r\n\r\n  createSlotDom(object) {\r\n    const dom = super.createSlotDom(object);\r\n\r\n    if (this.spacing !== 0) {\r\n      const slots = this.dom.find('> div');\r\n      slots.last().css('margin-bottom', this.spacing);\r\n      dom.css('margin-bottom', 0);\r\n    }\r\n\r\n    return dom;\r\n  }\r\n}\r\n\r\nexport default VBox;\r\n","import Node from './Node';\r\nimport Container from \"./Container\";\r\nimport AppMediator from '../NX/AppMediator';\r\n\r\nclass Window extends Container {\r\n  constructor() {\r\n    super();\r\n\r\n    this.contentDom = this.dom.find('.modal-body');\r\n    this.dom.modal({\r\n      backdrop: 'static',\r\n      keyboard: false\r\n    });\r\n\r\n    this.dom.on('hide.bs.modal.Window', () => {\r\n      const data = {\r\n        visible: false,\r\n        close: true,\r\n      };\r\n\r\n      AppMediator.sendUserInput(this, data);\r\n    });\r\n  }\r\n\r\n  get centered() {\r\n    return this.dom.hasClass('ux-centered')\r\n  }\r\n\r\n  set centered(value) {\r\n    if (value) {\r\n      this.dom.addClass('ux-centered');\r\n    } else {\r\n      this.dom.removeClass('ux-centered')\r\n    }\r\n  }\r\n\r\n  get closable() {\r\n    return this.dom.hasClass('ux-closable')\r\n  }\r\n\r\n  set closable(value) {\r\n    if (value) {\r\n      this.dom.addClass('ux-closable');\r\n    } else {\r\n      this.dom.removeClass('ux-closable');\r\n    }\r\n  }\r\n\r\n  get title() {\r\n    return this.dom.find('.ux-window-title').text();\r\n  }\r\n\r\n  set title(value) {\r\n    return this.dom.find('.ux-window-title').text(value);\r\n  }\r\n\r\n  get width() {\r\n    return this.dom.find('.modal-dialog').width()\r\n  }\r\n\r\n  set width(value) {\r\n    this.dom.find('.modal-dialog').width(value);\r\n  }\r\n\r\n  get height() {\r\n    return this.dom.find('.modal-dialog').height()\r\n  }\r\n\r\n  set height(value) {\r\n    this.dom.find('.modal-dialog').height(value);\r\n  }\r\n\r\n  get footer() {\r\n    const footer = this.dom.find('.modal-footer > *').first();\r\n    return Node.getFromDom(footer);\r\n  }\r\n\r\n  set footer(value) {\r\n    const footer = this.dom.find('.modal-footer');\r\n    footer.empty();\r\n\r\n    if (value instanceof Node) {\r\n      footer.append(value.dom);\r\n      footer.show();\r\n    } else if (value === null) {\r\n      footer.hide();\r\n    } else {\r\n      throw new Error(\"footer value must be Node or null, passed \" + (typeof value));\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    this.dom.modal('hide');\r\n  }\r\n\r\n  show() {\r\n    this.dom.modal('show');\r\n  }\r\n\r\n  free() {\r\n    this.hide();\r\n\r\n    setTimeout(() => {\r\n      super.free();\r\n    }, 3000);\r\n\r\n    return this;\r\n  }\r\n\r\n  createDom() {\r\n    const dom = jQuery('<div class=\"modal fade in ux-window ux-closable\" role=\"dialog\" aria-hidden=\"true\"><div class=\"modal-dialog\"><div class=\"modal-content\">' +\r\n      '<div class=\"modal-header\">' +\r\n        '<h5 class=\"modal-title ux-window-title\"></h5>' +\r\n        '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"Close\">×</button>' +\r\n      '</div>' +\r\n      '<div class=\"modal-body\"></div>' +\r\n      '<div class=\"modal-footer\" style=\"display: none;\"></div>' +\r\n      '</div></div></div>');\r\n\r\n    return dom;\r\n  }\r\n\r\n  innerNodes() {\r\n    const result = super.innerNodes();\r\n\r\n    if (this.footer) {\r\n      result.push(this.footer);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default Window;\r\n","import Utils from './../util/Utils';\r\n\r\nclass Font {\r\n  constructor(name, size) {\r\n    this._dom = null;\r\n    this.name = name || 'serif';\r\n    this.size = size || 12;\r\n  }\r\n\r\n  get name() {\r\n    return this._name;\r\n  }\r\n\r\n  set name(value) {\r\n    this._name = value;\r\n\r\n    if (this._dom) {\r\n      this._dom.css('font-family', value);\r\n    }\r\n  }\r\n\r\n  get size() {\r\n    return this._size;\r\n  }\r\n\r\n  set size(value) {\r\n    this._size = value | 0;\r\n\r\n    if (this._dom) {\r\n      this._dom.css('font-size', value + 'px');\r\n    }\r\n  }\r\n\r\n  get bold() {\r\n    return this._bold | false;\r\n  }\r\n\r\n  set bold(value) {\r\n    this._bold = value | false;\r\n\r\n    if (this._dom) {\r\n      this._dom.css('font-weight', this._bold ? 'bold' : 'normal');\r\n    }\r\n  }\r\n\r\n  get italic() {\r\n    return this._italic | false;\r\n  }\r\n\r\n  set italic(value) {\r\n    this._italic = value | false;\r\n\r\n    if (this._dom) {\r\n      this._dom.css('font-style', this._italic ? 'italic' : 'normal');\r\n    }\r\n  }\r\n\r\n  get underline() {\r\n    return this._underline | false;\r\n  }\r\n\r\n  set underline(value) {\r\n    this._underline = value | false;\r\n\r\n    if (this._underline) {\r\n      this._linethrough = false;\r\n    }\r\n\r\n    if (this._dom) {\r\n      this._dom.css('text-decoration', this._underline ? 'underline' : 'none');\r\n    }\r\n  }\r\n\r\n  get linethrough() {\r\n    return this._linethrough | false;\r\n  }\r\n\r\n  set linethrough(value) {\r\n    this._linethrough = value | false;\r\n\r\n    if (this._linethrough) {\r\n      this._underline = false;\r\n    }\r\n\r\n    if (this._dom) {\r\n      this.dom.css('text-decoration', this._linethrough ? 'line-through' : 'none')\r\n    }\r\n  }\r\n\r\n  static applyToDom(dom, font) {\r\n    if (font instanceof Font) {\r\n      dom.css('font-family', font.name);\r\n\r\n      if (font.size) {\r\n        dom.css('font-size', font.size);\r\n      } else {\r\n        dom.css('font-size', '');\r\n      }\r\n\r\n      if (font.bold) {\r\n        dom.css('font-weight', 'bold');\r\n      } else {\r\n        dom.css('font-weight', '');\r\n      }\r\n\r\n      if (font.italic) {\r\n        dom.css('font-style', 'italic');\r\n      } else {\r\n        dom.css('font-style', '');\r\n      }\r\n\r\n      if (font.underline) {\r\n        dom.css('text-decoration', 'underline');\r\n      } else if (font.linethrough) {\r\n        dom.css('text-decoration', 'line-through');\r\n      } else {\r\n        dom.css('text-decoration', '');\r\n      }\r\n    } else if (typeof font === 'object') {\r\n      if (font.hasOwnProperty('name')) {\r\n        if (font.name) {\r\n          dom.css('font-family', font.name);\r\n        } else {\r\n          dom.css('font-family', '');\r\n        }\r\n      }\r\n\r\n      if (font.hasOwnProperty('size')) {\r\n        if (font.size) {\r\n          dom.css('font-size', font.size);\r\n        } else {\r\n          dom.css('font-size', '');\r\n        }\r\n      }\r\n\r\n      if (font.hasOwnProperty('bold')) {\r\n        if (font.bold) {\r\n          dom.css('font-weight', 'bold');\r\n        } else {\r\n          dom.css('font-weight', '');\r\n        }\r\n      }\r\n\r\n      if (font.hasOwnProperty('italic')) {\r\n        if (font.italic) {\r\n          dom.css('font-style', 'italic');\r\n        } else {\r\n          dom.css('font-style', '');\r\n        }\r\n      }\r\n\r\n      if (font.hasOwnProperty('underline') && font.underline) {\r\n        dom.css('text-decoration', 'underline');\r\n      } else if (font.hasOwnProperty('linethrough') && font.linethrough) {\r\n        dom.css('text-decoration', 'line-through');\r\n      } else {\r\n        dom.css('text-decoration', '');\r\n      }\r\n    }\r\n  }\r\n\r\n  static getFromDom(dom) {\r\n    if (dom instanceof jQuery) {\r\n      const family = dom.css('font-family');\r\n      const size = Utils.toPt(dom.css('font-size'));\r\n\r\n      const bold = dom.css('font-weight') === 'bold';\r\n      const italic = dom.css('font-style') === 'italic';\r\n      const linethrough = dom.css('text-decoration') === 'line-through';\r\n      const underline = dom.css('text-decoration') === 'underline';\r\n\r\n      const font = new Font(family, size);\r\n\r\n      if (bold) font.bold = true;\r\n      if (italic) font.italic = true;\r\n      if (underline) font.underline = true;\r\n      if (linethrough) font.linethrough = true;\r\n\r\n      font._dom = dom;\r\n      return font;\r\n    }\r\n\r\n    throw new TypeError('getFromDom(): 1 argument must be jquery object');\r\n  }\r\n}\r\n\r\nexport default Font;\r\n","\r\n\r\nclass Utils\r\n{\r\n  static isElement(obj) {\r\n    try {\r\n      //Using W3 DOM2 (works for FF, Opera and Chrom)\r\n      return obj instanceof HTMLElement;\r\n    } catch(e){\r\n      //Browsers not supporting W3 DOM2 don't have HTMLElement and\r\n      //an exception is thrown and we end up here. Testing some\r\n      //properties that all elements have. (works on IE7)\r\n      return (typeof obj===\"object\") &&\r\n        (obj.nodeType===1) && (typeof obj.style === \"object\") &&\r\n        (typeof obj.ownerDocument ===\"object\");\r\n    }\r\n  }\r\n\r\n  static toPt(cssValue) {\r\n    return parseInt(cssValue);\r\n  }\r\n}\r\n\r\nexport default Utils;\r\n","import NX from './NX/NX';\r\nimport UX from './UX/UX';\r\n\r\nwindow.NX = NX;\r\nwindow.UX = UX;\r\n\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmNcXE5YXFxBcHAuanMiLCJzcmNcXE5YXFxBcHBEaXNwYXRjaGVyLmpzIiwic3JjXFxOWFxcQXBwTWVkaWF0b3IuanMiLCJzcmNcXE5YXFxDaHJvbWl1bUVtYmVkZGVkQXBwRGlzcGF0Y2hlci5qcyIsInNyY1xcTlhcXE5YLmpzIiwic3JjXFxOWFxcVUlMb2FkZXIuanMiLCJzcmNcXE5YXFxXZWJTb2NrZXRBcHBEaXNwYXRjaGVyLmpzIiwic3JjXFxVWFxcQW5jaG9yUGFuZS5qcyIsInNyY1xcVVhcXEJ1dHRvbi5qcyIsInNyY1xcVVhcXENoZWNrYm94LmpzIiwic3JjXFxVWFxcQ29tYm9ib3guanMiLCJzcmNcXFVYXFxDb250YWluZXIuanMiLCJzcmNcXFVYXFxIQm94LmpzIiwic3JjXFxVWFxcSHlwZXJsaW5rLmpzIiwic3JjXFxVWFxcSWNvbi5qcyIsInNyY1xcVVhcXEltYWdlVmlldy5qcyIsInNyY1xcVVhcXExhYmVsLmpzIiwic3JjXFxVWFxcTGFiZWxlZC5qcyIsInNyY1xcVVhcXExpc3RWaWV3LmpzIiwic3JjXFxVWFxcTGlzdGJveC5qcyIsInNyY1xcVVhcXE5vZGUuanMiLCJzcmNcXFVYXFxQYXNzd29yZEZpZWxkLmpzIiwic3JjXFxVWFxcUHJvZ3Jlc3NCYXIuanMiLCJzcmNcXFVYXFxTZWxlY3RDb250cm9sLmpzIiwic3JjXFxVWFxcU3dpdGNoLmpzIiwic3JjXFxVWFxcVGV4dEFyZWEuanMiLCJzcmNcXFVYXFxUZXh0RmllbGQuanMiLCJzcmNcXFVYXFxUZXh0SW5wdXRDb250cm9sLmpzIiwic3JjXFxVWFxcVG9nZ2xlQnV0dG9uLmpzIiwic3JjXFxVWFxcVVguanMiLCJzcmNcXFVYXFxWQm94LmpzIiwic3JjXFxVWFxcV2luZG93LmpzIiwic3JjXFxVWFxccGFpbnRcXEZvbnQuanMiLCJzcmNcXFVYXFx1dGlsXFxVdGlscy5qcyIsInNyY1xcbGliLmpzIl0sIm5h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Rjs7O3lCQUVXLFEsRUFBVTtBQUNwQixhQUFPLFNBQVMsUUFBVCxDQUFQO0FBQ0Q7Ozs7OztrQkFHWSxLOzs7OztBQ3ZCZjs7OztBQUNBOzs7Ozs7QUFFQSxPQUFPLEVBQVA7QUFDQSxPQUFPLEVBQVAiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiY2xhc3MgQXBwIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuX2NhbGxiYWNrcyA9IHt9O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VcclxuICAgKi9cclxuICBsb2cobWVzc2FnZSkge1xyXG4gICAgY29uc29sZS5sb2cobWVzc2FnZSk7XHJcbiAgfVxyXG5cclxuICBsYXVuY2goKSB7XHJcbiAgICB0aGlzLnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoXCIvZG5leHQvd3MvXCIpO1xyXG5cclxuICAgIHRoaXMuc29ja2V0Lm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICBjb25zdCBkYXRhID0gSlNPTi5wYXJzZShldmVudC5kYXRhKTtcclxuXHJcbiAgICAgIGlmIChkYXRhLmlkICYmIGRhdGEubWVzc2FnZSkge1xyXG4gICAgICAgIGNvbnN0IGNhbGxiYWNrID0gdGhpcy5fY2FsbGJhY2tzW2RhdGEuaWRdO1xyXG5cclxuICAgICAgICBpZiAoY2FsbGJhY2spIHtcclxuICAgICAgICAgIGNhbGxiYWNrKGRhdGEpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2VuZChtZXNzYWdlLCBkYXRhLCBjYWxsYmFjaykge1xyXG4gICAgZGF0YS5tZXNzYWdlID0gbWVzc2FnZTtcclxuICAgIGRhdGEuaWQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoNyk7XHJcblxyXG4gICAgaWYgKGNhbGxiYWNrKSB7XHJcbiAgICAgIHRoaXMuX2NhbGxiYWNrc1tkYXRhLmlkXSA9IGNhbGxiYWNrO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuc29ja2V0LnNlbmQoSlNPTi5zdHJpbmdpZnkoZGF0YSkpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQXBwO1xyXG4iLCJcclxuY2xhc3MgQXBwRGlzcGF0Y2hlciB7XHJcblxyXG4gIG9uT3BlbihjYWxsYmFjaykge1xyXG4gICAgdGhyb3cgXCJvbk9wZW4oKSBpcyBub3QgaW1wbGVtZW50ZWRcIjtcclxuICB9XHJcblxyXG4gIG9uTWVzc2FnZShjYWxsYmFjaykge1xyXG4gICAgdGhyb3cgXCJvbk1lc3NhZ2UoKSBpcyBub3QgaW1wbGVtZW50ZWRcIjtcclxuICB9XHJcblxyXG4gIG9uRXJyb3IoY2FsbGJhY2spIHtcclxuICAgIHRocm93IFwib25FcnJvcigpIGlzIG5vdCBpbXBsZW1lbnRlZFwiO1xyXG4gIH1cclxuXHJcbiAgb25DbG9zZShjYWxsYmFjaykge1xyXG4gICAgdGhyb3cgXCJvbkNsb3NlKCkgaXMgbm90IGltcGxlbWVudGVkXCI7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gZGF0YVxyXG4gICAqL1xyXG4gIHNlbmQoZGF0YSkge1xyXG4gICAgdGhyb3cgXCJzZW5kKCkgaXMgbm90IGltcGxlbWVudGVkXCI7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBBcHBEaXNwYXRjaGVyOyIsImltcG9ydCBVSUxvYWRlciBmcm9tIFwiLi9VSUxvYWRlclwiO1xyXG5pbXBvcnQgTm9kZSBmcm9tIFwiLi4vVVgvTm9kZVwiO1xyXG5pbXBvcnQgV2ViU29ja2V0QXBwRGlzcGF0Y2hlciBmcm9tIFwiLi9XZWJTb2NrZXRBcHBEaXNwYXRjaGVyXCI7XHJcblxyXG5jbGFzcyBBcHBNZWRpYXRvciB7XHJcbiAgaW5pdChyb290RG9tLCBkaXNwYXRjaGVyVHlwZSkge1xyXG4gICAgdGhpcy5yb290RG9tID0gcm9vdERvbTtcclxuICAgIHRoaXMuZGlzcGF0Y2hlclR5cGUgPSBkaXNwYXRjaGVyVHlwZTtcclxuICAgIHRoaXMuYWN0aXZhdGVkID0gdHJ1ZTtcclxuICAgIHRoaXMuX2NhbGxiYWNrcyA9IFtdO1xyXG4gICAgdGhpcy5fbm9kZXMgPSB7fTtcclxuXHJcbiAgICBjb25zdCB1dWlkID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnQXBwTWVkaWF0b3IudXVpZCcpO1xyXG5cclxuICAgIGlmICghdXVpZCkge1xyXG4gICAgICB0aGlzLnV1aWQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoNyk7XHJcbiAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ0FwcE1lZGlhdG9yLnV1aWQnLCB0aGlzLnV1aWQpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy51dWlkID0gdXVpZDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSBjb250ZXh0VXJsXHJcbiAgICogQHBhcmFtIHdzVXJsXHJcbiAgICogQHBhcmFtIHNlc3Npb25JZFxyXG4gICAqL1xyXG4gIHN0YXJ0V2F0Y2hpbmcoY29udGV4dFVybCwgd3NVcmwsIHNlc3Npb25JZCkge1xyXG4gICAgdGhpcy5zZXNzaW9uSWQgPSBzZXNzaW9uSWQ7XHJcblxyXG4gICAgdGhpcy5kaXNwYXRjaGVyID0gbmV3IHRoaXMuZGlzcGF0Y2hlclR5cGUod3NVcmwpO1xyXG5cclxuICAgIHRoaXMuZGlzcGF0Y2hlci5vbkVycm9yKCgpID0+IHtcclxuICAgICAgaWYgKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ0FwcE1lZGlhdG9yLnJlbG9hZGluZycpKSB7XHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB3aW5kb3cubG9jYXRpb24ucmVsb2FkKHRydWUpLCAyMDApO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLmRpc3BhdGNoZXIub25PcGVuKCgpID0+IHtcclxuICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnQXBwTWVkaWF0b3IucmVsb2FkaW5nJywgZmFsc2UpO1xyXG5cclxuICAgICAgdGhpcy5zZW5kKCdpbml0aWFsaXplJywge30pO1xyXG4gICAgICB0aGlzLnNlbmRJZkNhbigndWktcmVhZHknLCB7XHJcbiAgICAgICAgbG9jYXRpb246IHtcclxuICAgICAgICAgIGNvbnRleHRVcmw6IGNvbnRleHRVcmwsXHJcbiAgICAgICAgICBoYXNoOiB3aW5kb3cubG9jYXRpb24uaGFzaCA/IHdpbmRvdy5sb2NhdGlvbi5oYXNoLnN1YnN0cigxKSA6ICcnLFxyXG4gICAgICAgICAgcGF0aDogd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLFxyXG4gICAgICAgICAgaG9zdDogd2luZG93LmxvY2F0aW9uLmhvc3QsXHJcbiAgICAgICAgICBwb3J0OiB3aW5kb3cubG9jYXRpb24ucG9ydCxcclxuICAgICAgICAgIHByb3RvY29sOiB3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wsXHJcbiAgICAgICAgICB0YXJnZXQ6IHdpbmRvdy5sb2NhdGlvbi50YXJnZXQsXHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuZGlzcGF0Y2hlci5vbkNsb3NlKCgpID0+IHtcclxuICAgICAgdGhpcy5kaXNwYXRjaGVyID0gbnVsbDtcclxuXHJcbiAgICAgIGlmICh0aGlzLm5vZGUpIHtcclxuICAgICAgICB0aGlzLm5vZGUuZnJlZSgpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCBoYW5kbGVycyA9IHtcclxuICAgICAgJ3VpLXJlbmRlcic6IHRoaXMudHJpZ2dlclJlbmRlclZpZXcsXHJcbiAgICAgICd1aS1yZWxvYWQnOiB0aGlzLnRyaWdnZXJSZWxvYWQsXHJcbiAgICAgICd1aS1hbGVydCc6IHRoaXMudHJpZ2dlckFsZXJ0LFxyXG4gICAgICAndWktc2V0LXByb3BlcnR5JzogdGhpcy50cmlnZ2VyU2V0UHJvcGVydHksXHJcbiAgICAgICd1aS1jYWxsLW1ldGhvZCc6IHRoaXMudHJpZ2dlckNhbGxNZXRob2QsXHJcbiAgICAgICd1aS1ldmVudC1saW5rJzogdGhpcy50cmlnZ2VyT25FdmVudExpbmssXHJcbiAgICAgICd1aS1jcmVhdGUtbm9kZSc6IHRoaXMudHJpZ2dlckNyZWF0ZU5vZGUsXHJcbiAgICAgICd1aS1jcmVhdGUtY3NzLXN0eWxlJzogdGhpcy50cmlnZ2VyQ3JlYXRlQ3NzU3R5bGUsXHJcbiAgICAgICd1aS1kZXN0cm95LWNzcy1zdHlsZSc6IHRoaXMudHJpZ2dlckRlc3Ryb3lDc3NTdHlsZVxyXG4gICAgfTtcclxuXHJcbiAgICB0aGlzLmRpc3BhdGNoZXIub25NZXNzYWdlKChkYXRhKSA9PiB7XHJcbiAgICAgIGNvbnN0IG1lc3NhZ2UgPSBKU09OLnBhcnNlKGRhdGEpO1xyXG4gICAgICBjb25zdCB0eXBlID0gbWVzc2FnZS50eXBlO1xyXG5cclxuICAgICAgY29uc29sZS5kZWJ1ZyhcIkFwcE1lZGlhdG9yLnJlY2VpdmVcIiwgbWVzc2FnZSk7XHJcblxyXG4gICAgICBpZiAoaGFuZGxlcnMuaGFzT3duUHJvcGVydHkodHlwZSkpIHtcclxuICAgICAgICBoYW5kbGVyc1t0eXBlXS5jYWxsKHRoaXMsIG1lc3NhZ2UpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHN3aXRjaCAodHlwZSkge1xyXG4gICAgICAgICAgY2FzZSBcInN5c3RlbS1jb25zb2xlLWxvZ1wiOlxyXG4gICAgICAgICAgICBjb25zdCB0ZXh0ID0gbWVzc2FnZVsnbWVzc2FnZSddO1xyXG5cclxuICAgICAgICAgICAgc3dpdGNoIChtZXNzYWdlWydraW5kJ10pIHtcclxuICAgICAgICAgICAgICBjYXNlICd3YXJuJzpcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUud2Fybih0ZXh0KTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgIGNhc2UgJ2Vycm9yJzpcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IodGV4dCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICBjYXNlICdpbmZvJzpcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUuaW5mbyh0ZXh0KTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgIGNhc2UgJ2RlYnVnJzpcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZGVidWcodGV4dCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICBjYXNlICd0cmFjZSc6XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLnRyYWNlKHRleHQpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgY2FzZSAnY2xlYXInOlxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5jbGVhcigpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRleHQpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgIGNhc2UgXCJzeXN0ZW0tZXZhbFwiOlxyXG4gICAgICAgICAgICBjb25zdCB7c2NyaXB0LCBjYWxsYmFja30gPSBtZXNzYWdlO1xyXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBldmFsKHNjcmlwdCk7XHJcblxyXG4gICAgICAgICAgICBpZiAoY2FsbGJhY2spIHtcclxuICAgICAgICAgICAgICBjYWxsYmFjayhyZXN1bHQpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICBjYXNlIFwic3lzdGVtLWNhbGxiYWNrXCI6XHJcbiAgICAgICAgICAgIGNvbnN0IHtpZH0gPSBtZXNzYWdlO1xyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMuX2NhbGxiYWNrc1tpZF0pIHtcclxuICAgICAgICAgICAgICB0aGlzLl9jYWxsYmFja3NbaWRdLmFwcGx5KG1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgIGRlbGV0ZSB0aGlzLl9jYWxsYmFja3NbaWRdO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICBjYXNlIFwiaGlzdG9yeS1wdXNoXCI6XHJcbiAgICAgICAgICAgIGNvbnN0IHVybCA9IG1lc3NhZ2VbJ3VybCddO1xyXG4gICAgICAgICAgICBjb25zdCB0aXRsZSA9IG1lc3NhZ2VbJ3RpdGxlJ107XHJcbiAgICAgICAgICAgIGNvbnN0IGhhc2ggPSBtZXNzYWdlWydoYXNoJ107XHJcblxyXG4gICAgICAgICAgICBpZiAod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lID09PSB1cmwpIHtcclxuICAgICAgICAgICAgICBpZiAodGl0bGUgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQudGl0bGUgPSB0aXRsZTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgaWYgKGhhc2ggIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBoYXNoO1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZShudWxsLCBtZXNzYWdlWyd0aXRsZSddLCB1cmwpO1xyXG5cclxuICAgICAgICAgICAgaWYgKHRpdGxlICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICBkb2N1bWVudC50aXRsZSA9IHRpdGxlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChoYXNoICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaGFzaCA9IGhhc2g7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgIGNhc2UgXCJwYWdlLXNldC1wcm9wZXJ0aWVzXCI6XHJcbiAgICAgICAgICAgIGlmIChtZXNzYWdlWyd0aXRsZSddICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICBkb2N1bWVudC50aXRsZSA9IG1lc3NhZ2VbJ3RpdGxlJ107XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChtZXNzYWdlWydoYXNoJ10gIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gbWVzc2FnZVsnaGFzaCddO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIHNldEludGVydmFsKCgpID0+IHtcclxuICAgICAgY29uc3QgZG9jVmlzaWJsZSA9ICFkb2N1bWVudC5oaWRkZW47XHJcblxyXG4gICAgICBpZiAoZG9jVmlzaWJsZSAhPT0gdGhpcy5hY3RpdmF0ZWQpIHtcclxuICAgICAgICB0aGlzLmFjdGl2YXRlZCA9IGRvY1Zpc2libGU7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmFjdGl2YXRlZCkge1xyXG4gICAgICAgICAgdGhpcy5zZW5kSWZDYW4oJ2FjdGl2YXRlJywge30pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSwgMSk7XHJcbiAgfVxyXG5cclxuICBwYXJzZVZhbHVlKHZhbHVlKSB7XHJcbiAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBPYmplY3QpIHtcclxuICAgICAgaWYgKHZhbHVlLmhhc093blByb3BlcnR5KCckbm9kZScpKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZmluZE5vZGVCeVV1aWRHbG9iYWxseSh2YWx1ZVsnJG5vZGUnXSk7XHJcbiAgICAgIH0gZWxzZSBpZiAodmFsdWUuaGFzT3duUHJvcGVydHkoJyRjcmVhdGVOb2RlJykpIHtcclxuICAgICAgICBjb25zdCBzY2hlbWEgPSB2YWx1ZVsnJGNyZWF0ZU5vZGUnXTtcclxuXHJcbiAgICAgICAgY29uc3QgdWlMb2FkZXIgPSBuZXcgVUlMb2FkZXIoKTtcclxuICAgICAgICByZXR1cm4gdWlMb2FkZXIubG9hZChzY2hlbWEpO1xyXG4gICAgICB9IGVsc2UgaWYgKHZhbHVlLmhhc093blByb3BlcnR5KCckY2FsbGFibGUnKSkge1xyXG4gICAgICAgIGNvbnN0IHV1aWQgPSB2YWx1ZVsnJGNhbGxhYmxlJ107XHJcblxyXG4gICAgICAgIHJldHVybiAoKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLnNlbmRJZkNhbignY2FsbGJhY2stdHJpZ2dlcicsIHtcclxuICAgICAgICAgICAgJ3V1aWQnOiB1dWlkLFxyXG4gICAgICAgICAgICAnYXJncyc6IGFyZ3VtZW50c1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFycmF5KSB7XHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdmFsdWUubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICB2YWx1ZVtpXSA9IHRoaXMucGFyc2VWYWx1ZSh2YWx1ZVtpXSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBPYmplY3QpIHtcclxuICAgICAgY29uc3QgbmV3VmFsdWUgPSB7fTtcclxuXHJcbiAgICAgIGZvciAobGV0IGtleSBpbiB2YWx1ZSkge1xyXG4gICAgICAgIGlmICh2YWx1ZS5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgICAgICBuZXdWYWx1ZVtrZXldID0gdGhpcy5wYXJzZVZhbHVlKHZhbHVlW2tleV0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgcmV0dXJuIG5ld1ZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB2YWx1ZTtcclxuICB9XHJcblxyXG4gIHByZXBhcmVWYWx1ZSh2YWx1ZSkge1xyXG4gICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgTm9kZSkge1xyXG4gICAgICBpZiAodmFsdWUudXVpZCAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgcmV0dXJuIHsnJG5vZGUnOiB2YWx1ZS51dWlkfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Nhbm5vdCBzZW5kIHVucmVnaXN0ZXJlZCBub2RlJywgdmFsdWUpO1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQXJyYXkpIHtcclxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB2YWx1ZS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIHZhbHVlW2ldID0gdGhpcy5wcmVwYXJlVmFsdWUodmFsdWVbaV0pO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgT2JqZWN0KSB7XHJcbiAgICAgIGNvbnN0IG5ld1ZhbHVlID0ge307XHJcblxyXG4gICAgICBmb3IgKGxldCBrZXkgaW4gdmFsdWUpIHtcclxuICAgICAgICBpZiAodmFsdWUuaGFzT3duUHJvcGVydHkoa2V5KSkge1xyXG4gICAgICAgICAgbmV3VmFsdWVba2V5XSA9IHRoaXMucHJlcGFyZVZhbHVlKHZhbHVlW2tleV0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgcmV0dXJuIG5ld1ZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB2YWx1ZTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSBub2RlXHJcbiAgICogQHBhcmFtIGRhdGFcclxuICAgKiBAcGFyYW0gY2FsbGJhY2tcclxuICAgKi9cclxuICBzZW5kVXNlcklucHV0KG5vZGUsIGRhdGEsIGNhbGxiYWNrID0gbnVsbCkge1xyXG4gICAgaWYgKCF0aGlzLmRpc3BhdGNoZXIpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICghZG9jdW1lbnQuaGlkZGVuKSB7XHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIGxldCBuZXdEYXRhID0gZGF0YTtcclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiBkYXRhID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICAgIG5ld0RhdGEgPSBkYXRhKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLnNlbmRJZkNhbigndWktdXNlci1pbnB1dCcsIHtcclxuICAgICAgICAgICd1dWlkJzogbm9kZS51dWlkLFxyXG4gICAgICAgICAgJ2RhdGEnOiB0aGlzLnByZXBhcmVWYWx1ZShuZXdEYXRhKVxyXG4gICAgICAgIH0sIGNhbGxiYWNrKVxyXG4gICAgICB9LCAwKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnNvbGUud2FybignSWdub3JlIFVzZXIgaW5wdXQnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB0eXBlXHJcbiAgICogQHBhcmFtIG1lc3NhZ2VcclxuICAgKiBAcGFyYW0gY2FsbGJhY2tcclxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICAgKi9cclxuICBzZW5kSWZDYW4odHlwZSwgbWVzc2FnZSwgY2FsbGJhY2spIHtcclxuICAgIGlmICh0aGlzLmRpc3BhdGNoZXIgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICB0aGlzLnNlbmQodHlwZSwgbWVzc2FnZSwgY2FsbGJhY2spO1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB0eXBlXHJcbiAgICogQHBhcmFtIG1lc3NhZ2VcclxuICAgKiBAcGFyYW0gY2FsbGJhY2tcclxuICAgKi9cclxuICBzZW5kKHR5cGUsIG1lc3NhZ2UsIGNhbGxiYWNrKSB7XHJcbiAgICBpZiAodGhpcy5kaXNwYXRjaGVyID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgdGhyb3cgXCJNZWRpYXRvciBpcyBub3QgaW4gd2F0Y2hpbmcgc3RhdGUuXCI7XHJcbiAgICB9XHJcblxyXG4gICAgbWVzc2FnZS50eXBlID0gdHlwZTtcclxuICAgIG1lc3NhZ2UuaWQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoNyk7XHJcbiAgICBtZXNzYWdlLnNlc3Npb25JZCA9IHRoaXMuc2Vzc2lvbklkO1xyXG4gICAgbWVzc2FnZS5zZXNzaW9uSWRVdWlkID0gdGhpcy51dWlkO1xyXG5cclxuICAgIGlmIChjYWxsYmFjaykge1xyXG4gICAgICB0aGlzLl9jYWxsYmFja3NbbWVzc2FnZS5pZF0gPSBjYWxsYmFjaztcclxuICAgICAgbWVzc2FnZS5uZWVkQ2FsbGJhY2sgPSB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnNvbGUuZGVidWcoXCJBcHBNZWRpYXRvci5zZW5kXCIsIG1lc3NhZ2UpO1xyXG5cclxuICAgIHRoaXMuZGlzcGF0Y2hlci5zZW5kKEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UpKTtcclxuICB9XHJcblxyXG4gIGZpbmROb2RlQnlVdWlkR2xvYmFsbHkodXVpZCkge1xyXG4gICAgbGV0IGZvdW5kID0gdGhpcy5maW5kTm9kZUJ5VXVpZCh1dWlkLCB0aGlzLm5vZGUpO1xyXG5cclxuICAgIGlmIChmb3VuZCA9PT0gbnVsbCkge1xyXG4gICAgICBpZiAodGhpcy5fbm9kZXMuaGFzT3duUHJvcGVydHkodXVpZCkpIHtcclxuICAgICAgICBmb3VuZCA9IHRoaXMuX25vZGVzW3V1aWRdO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGZvdW5kID09PSBudWxsKSB7XHJcbiAgICAgIGZvciAoY29uc3Qga2V5IGluIHRoaXMuX25vZGVzKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX25vZGVzLmhhc093blByb3BlcnR5KGtleSkpIHtcclxuICAgICAgICAgIGNvbnN0IGZvdW5kID0gdGhpcy5maW5kTm9kZUJ5VXVpZCh1dWlkLCB0aGlzLl9ub2Rlc1trZXldKTtcclxuXHJcbiAgICAgICAgICBpZiAoZm91bmQgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZvdW5kO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBmb3VuZDtcclxuICB9XHJcblxyXG4gIGZpbmROb2RlQnlVdWlkKHV1aWQsIG5vZGUpIHtcclxuICAgIGlmICh1dWlkID09PSBub2RlLnV1aWQpIHtcclxuICAgICAgcmV0dXJuIG5vZGU7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IGNoaWxkcmVuID0gbm9kZS5pbm5lck5vZGVzKCk7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xyXG4gICAgICBpZiAoY2hpbGRyZW5baV0udXVpZCA9PT0gdXVpZCkge1xyXG4gICAgICAgIHJldHVybiBjaGlsZHJlbltpXTtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29uc3QgZm91bmQgPSB0aGlzLmZpbmROb2RlQnlVdWlkKHV1aWQsIGNoaWxkcmVuW2ldKTtcclxuXHJcbiAgICAgIGlmIChmb3VuZCAhPT0gbnVsbCkge1xyXG4gICAgICAgIHJldHVybiBmb3VuZDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxuXHJcbiAgdHJpZ2dlckV2ZW50KG5vZGUsIGV2ZW50LCBlKSB7XHJcbiAgICBjb25zdCBkYXRhID0ge1xyXG4gICAgICB0eXBlOiBlLnR5cGUsXHJcbiAgICAgIHdoaWNoOiBlLndoaWNoLFxyXG4gICAgICByZXN1bHQ6IGUucmVzdWx0LFxyXG4gICAgICBuYW1lc3BhY2U6IGUubmFtZXNwYWNlLFxyXG4gICAgICBwb3NpdGlvbjogW2UucGFnZVgsIGUucGFnZVldXHJcbiAgICB9O1xyXG5cclxuICAgIHRoaXMuc2VuZElmQ2FuKCd1aS10cmlnZ2VyJywge1xyXG4gICAgICB1dWlkOiBub2RlLnV1aWQsXHJcbiAgICAgIGV2ZW50OiBldmVudCxcclxuICAgICAgZGF0YTogdGhpcy5wcmVwYXJlVmFsdWUoZGF0YSksXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJlbmRlciBuZXcgdmlldy5cclxuICAgKiBAcGFyYW0gbWVzc2FnZVxyXG4gICAqL1xyXG4gIHRyaWdnZXJSZW5kZXJWaWV3KG1lc3NhZ2UpIHtcclxuICAgIGNvbnN0IHVpTG9hZGVyID0gbmV3IFVJTG9hZGVyKCk7XHJcbiAgICB0aGlzLm5vZGUgPSB1aUxvYWRlci5sb2FkKG1lc3NhZ2VbJ3NjaGVtYSddKTtcclxuXHJcbiAgICB0aGlzLnJvb3REb20uZW1wdHkoKTtcclxuICAgIHRoaXMucm9vdERvbS5hcHBlbmQodGhpcy5ub2RlLmRvbSk7XHJcblxyXG4gICAgdGhpcy5zZW5kSWZDYW4oJ3VpLXJlbmRlci1kb25lJywge1xyXG4gICAgICBzaXplOiBbdGhpcy5ub2RlLmRvbS53aWR0aCgpLCB0aGlzLm5vZGUuZG9tLmhlaWdodCgpXVxyXG4gICAgfSwgKCkgPT4ge1xyXG4gICAgICBjb25zdCB0cmlnZ2VyUmVuZGVyID0gKG5vZGUpID0+IHtcclxuICAgICAgICBub2RlLnRyaWdnZXIoJ3JlbmRlcicpO1xyXG5cclxuICAgICAgICBsZXQgaW5uZXJOb2RlcyA9IG5vZGUuaW5uZXJOb2RlcygpO1xyXG5cclxuICAgICAgICBmb3IgKGxldCBrZXkgaW4gaW5uZXJOb2Rlcykge1xyXG4gICAgICAgICAgaWYgKGlubmVyTm9kZXMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xyXG4gICAgICAgICAgICB0cmlnZ2VyUmVuZGVyKGlubmVyTm9kZXNba2V5XSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgdHJpZ2dlclJlbmRlcih0aGlzLm5vZGUpO1xyXG5cclxuICAgICAgZm9yIChjb25zdCBrZXkgaW4gdGhpcy5fbm9kZXMpIHtcclxuICAgICAgICBpZiAodGhpcy5fbm9kZXMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xyXG4gICAgICAgICAgdHJpZ2dlclJlbmRlcih0aGlzLl9ub2Rlc1trZXldKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgdHJpZ2dlckFsZXJ0KG1lc3NhZ2UpIHtcclxuICAgIGNvbnN0IHRleHQgPSBtZXNzYWdlWyd0ZXh0J107XHJcbiAgICBhbGVydCh0ZXh0KTtcclxuICB9XHJcblxyXG4gIHRyaWdnZXJDYWxsTWV0aG9kKG1lc3NhZ2UpIHtcclxuICAgIGNvbnN0IHV1aWQgPSBtZXNzYWdlWyd1dWlkJ107XHJcbiAgICBjb25zdCBtZXRob2QgPSBtZXNzYWdlWydtZXRob2QnXTtcclxuICAgIGNvbnN0IGFyZ3MgPSB0aGlzLnBhcnNlVmFsdWUobWVzc2FnZVsnYXJncyddIHx8IFtdKTtcclxuXHJcbiAgICBjb25zdCBub2RlID0gdGhpcy5maW5kTm9kZUJ5VXVpZEdsb2JhbGx5KHV1aWQpO1xyXG5cclxuICAgIGlmIChub2RlICE9PSBudWxsKSB7XHJcbiAgICAgIG5vZGVbbWV0aG9kXS5hcHBseShub2RlLCBhcmdzKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnNvbGUud2FybihgRmFpbGVkIHRvIGNhbGwgbWV0aG9kIC4ke21ldGhvZH0oKSwgbm9kZSB3aXRoIHV1aWQgPSAke3V1aWR9IGlzIG5vdCBmb3VuZGApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdHJpZ2dlclNldFByb3BlcnR5KG1lc3NhZ2UpIHtcclxuICAgIGNvbnN0IHV1aWQgPSBtZXNzYWdlWyd1dWlkJ107XHJcbiAgICBjb25zdCBwcm9wZXJ0eSA9IG1lc3NhZ2VbJ3Byb3BlcnR5J107XHJcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMucGFyc2VWYWx1ZShtZXNzYWdlWyd2YWx1ZSddKTtcclxuXHJcbiAgICBjb25zdCBub2RlID0gdGhpcy5maW5kTm9kZUJ5VXVpZEdsb2JhbGx5KHV1aWQpO1xyXG5cclxuICAgIGlmIChub2RlICE9PSBudWxsKSB7XHJcbiAgICAgIG5vZGVbcHJvcGVydHldID0gdmFsdWU7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjb25zb2xlLndhcm4oYEZhaWxlZCB0byBzZXQgcHJvcGVydHkgLiR7cHJvcGVydHl9LCBub2RlIHdpdGggdXVpZCA9ICR7dXVpZH0gaXMgbm90IGZvdW5kYCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICB0cmlnZ2VyT25FdmVudExpbmsobWVzc2FnZSkge1xyXG4gICAgY29uc3QgdXVpZCA9IG1lc3NhZ2VbJ3V1aWQnXTtcclxuICAgIGNvbnN0IGV2ZW50ID0gbWVzc2FnZVsnZXZlbnQnXTtcclxuXHJcbiAgICBjb25zdCBub2RlID0gdGhpcy5maW5kTm9kZUJ5VXVpZEdsb2JhbGx5KHV1aWQpO1xyXG5cclxuICAgIGlmIChub2RlICE9PSBudWxsKSB7XHJcbiAgICAgIG5vZGUub2ZmKGAke2V2ZW50fS5BcHBNZWRpYXRvcmApO1xyXG5cclxuICAgICAgbm9kZS5vbihgJHtldmVudH0uQXBwTWVkaWF0b3JgLCAoZSkgPT4ge1xyXG4gICAgICAgIHRoaXMudHJpZ2dlckV2ZW50KG5vZGUsIGV2ZW50LCBlKTtcclxuICAgICAgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjb25zb2xlLndhcm4oYEZhaWxlZCB0byBsaW5rIGV2ZW50ICR7ZXZlbnR9LCBub2RlIHdpdGggdXVpZCA9ICR7dXVpZH0gaXMgbm90IGZvdW5kYCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICB0cmlnZ2VyQ3JlYXRlTm9kZShtZXNzYWdlKSB7XHJcbiAgICBjb25zdCBzY2hlbWEgPSBtZXNzYWdlWydzY2hlbWEnXTtcclxuXHJcbiAgICBjb25zdCB1aUxvYWRlciA9IG5ldyBVSUxvYWRlcigpO1xyXG4gICAgY29uc3Qgbm9kZSA9IHVpTG9hZGVyLmxvYWQoc2NoZW1hKTtcclxuXHJcbiAgICB0aGlzLl9ub2Rlc1tub2RlLnV1aWRdID0gbm9kZTtcclxuXHJcbiAgICBub2RlLnRyaWdnZXIoJ3JlbmRlcicpO1xyXG4gIH1cclxuXHJcbiAgdHJpZ2dlckNyZWF0ZUNzc1N0eWxlKG1lc3NhZ2UpIHtcclxuICAgIHRoaXMudHJpZ2dlckRlc3Ryb3lDc3NTdHlsZShtZXNzYWdlKTtcclxuXHJcbiAgICBjb25zdCB7IGlkLCBzdHlsZSB9ID0gbWVzc2FnZTtcclxuXHJcbiAgICBjb25zdCB0YWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xyXG5cclxuICAgIHRhZy50eXBlID0gJ3RleHQvY3NzJztcclxuICAgIHRhZy5pbm5lckhUTUwgPSBzdHlsZTtcclxuICAgIHRhZy5pZCA9IGlkO1xyXG4gICAgdGFnLmNsYXNzTmFtZSA9ICdkeW5hbWljLWNzcyc7XHJcblxyXG4gICAgalF1ZXJ5KCdoZWFkJykuYXBwZW5kKGpRdWVyeSh0YWcpKTtcclxuICB9XHJcblxyXG4gIHRyaWdnZXJEZXN0cm95Q3NzU3R5bGUobWVzc2FnZSkge1xyXG4gICAgY29uc3QgeyBpZCB9ID0gbWVzc2FnZTtcclxuICAgIGpRdWVyeShgLmR5bmFtaWMtY3NzIyR7aWR9YCkucmVtb3ZlKCk7XHJcbiAgfVxyXG5cclxuICB0cmlnZ2VyUmVsb2FkKG1lc3NhZ2UpIHtcclxuICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ0FwcE1lZGlhdG9yLnJlbG9hZGluZycsIHRydWUpO1xyXG4gICAgc2V0VGltZW91dCgoKSA9PiB3aW5kb3cubG9jYXRpb24ucmVsb2FkKHRydWUpLCA1MCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBuZXcgQXBwTWVkaWF0b3IoKTsiLCJpbXBvcnQgQXBwRGlzcGF0Y2hlciBmcm9tIFwiLi9BcHBEaXNwYXRjaGVyXCI7XHJcblxyXG5jbGFzcyBDaHJvbWl1bUVtYmVkZGVkQXBwRGlzcGF0Y2hlciBleHRlbmRzIEFwcERpc3BhdGNoZXJcclxue1xyXG4gIGNvbnN0cnVjdG9yKHdzVXJsKSB7XHJcbiAgICBzdXBlcigpO1xyXG5cclxuICAgIHRoaXMud3NVcmwgPSB3c1VybDtcclxuXHJcbiAgICB0aGlzLm9uTWVzc2FnZSgoKSA9PiB7fSk7XHJcbiAgICB0aGlzLm9uRXJyb3IoKCkgPT4ge30pO1xyXG4gICAgdGhpcy5vbkNsb3NlKCgpID0+IHt9KTtcclxuICB9XHJcblxyXG4gIG9uT3BlbihjYWxsYmFjaykge1xyXG4gICAgd2luZG93LmNlZk9wZW5IYW5kbGVyID0gKCkgPT4ge1xyXG4gICAgICBjYWxsYmFjaygpO1xyXG4gICAgfTtcclxuXHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHdpbmRvdy5jZWZPcGVuSGFuZGxlcigpLCAxKTtcclxuICB9XHJcblxyXG4gIG9uTWVzc2FnZShjYWxsYmFjaykge1xyXG4gICAgd2luZG93LmNlZk1lc3NhZ2VIYW5kbGVyID0gKGRhdGEpID0+IGNhbGxiYWNrKGRhdGEpO1xyXG4gIH1cclxuXHJcbiAgb25FcnJvcihjYWxsYmFjaykge1xyXG4gICAgd2luZG93LmNlZkVycm9ySGFuZGxlciA9ICgpID0+IGNhbGxiYWNrKCk7XHJcbiAgfVxyXG5cclxuICBvbkNsb3NlKGNhbGxiYWNrKSB7XHJcbiAgICB3aW5kb3cuY2VmQ2xvc2VIYW5kbGVyID0gKCkgPT4gY2FsbGJhY2soKTtcclxuICB9XHJcblxyXG4gIHNlbmQoZGF0YSkge1xyXG4gICAgd2luZG93LmNlZlF1ZXJ5KHtcclxuICAgICAgcmVxdWVzdDogJ3dzOicgKyB0aGlzLndzVXJsICsgJzonICsgZGF0YSxcclxuICAgICAgcGVyc2lzdGVudDogZmFsc2UsXHJcbiAgICAgIG9uU3VjY2VzczogKHJlcykgPT4ge1xyXG4gICAgICB9LFxyXG4gICAgICBvbkZhaWx1cmU6IChlcnJvcl9jb2RlLCBlcnJvcl9tZXNzYWdlKSA9PiB7XHJcbiAgICAgICAgaWYgKHdpbmRvdy5jZWZFcnJvckhhbmRsZXIgJiYgZXJyb3JfY29kZSAhPT0gLTEpIHtcclxuICAgICAgICAgIHdpbmRvdy5jZWZFcnJvckhhbmRsZXIuY2FsbCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDaHJvbWl1bUVtYmVkZGVkQXBwRGlzcGF0Y2hlcjsiLCJpbXBvcnQgQXBwIGZyb20gJy4vQXBwJztcclxuaW1wb3J0IFVJTG9hZGVyIGZyb20gJy4vVUlMb2FkZXInO1xyXG5pbXBvcnQgQXBwTWVkaWF0b3IgZnJvbSBcIi4vQXBwTWVkaWF0b3JcIjtcclxuaW1wb3J0IFdlYlNvY2tldEFwcERpc3BhdGNoZXIgZnJvbSBcIi4vV2ViU29ja2V0QXBwRGlzcGF0Y2hlclwiO1xyXG5pbXBvcnQgQ2hyb21pdW1FbWJlZGRlZEFwcERpc3BhdGNoZXIgZnJvbSBcIi4vQ2hyb21pdW1FbWJlZGRlZEFwcERpc3BhdGNoZXJcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBBcHAsIFVJTG9hZGVyLCBBcHBNZWRpYXRvcixcclxuICBXZWJTb2NrZXRBcHBEaXNwYXRjaGVyLCBDaHJvbWl1bUVtYmVkZGVkQXBwRGlzcGF0Y2hlclxyXG59XHJcbiIsImltcG9ydCBOb2RlIGZyb20gJy4vLi4vVVgvTm9kZSc7XHJcbmltcG9ydCBDb250YWluZXIgZnJvbSAnLi8uLi9VWC9Db250YWluZXInO1xyXG5pbXBvcnQgVVggZnJvbSAnLi8uLi9VWC9VWCc7XHJcbmltcG9ydCBBcHBNZWRpYXRvciBmcm9tICcuL0FwcE1lZGlhdG9yJztcclxuXHJcbmNsYXNzIFVJTG9hZGVyIHtcclxuXHJcbiAgbGlua1RvTWVkaWF0b3Iobm9kZSwgZGF0YSkge1xyXG4gICAgY29uc3Qgd2F0Y2hlZEV2ZW50cyA9IGRhdGFbJ193YXRjaGVkRXZlbnRzJ107XHJcbiAgICBpZiAod2F0Y2hlZEV2ZW50cyAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIGZvciAobGV0IHdhdGNoZWRFdmVudCBvZiB3YXRjaGVkRXZlbnRzKSB7XHJcbiAgICAgICAgbm9kZS5vbihgJHt3YXRjaGVkRXZlbnR9LkFwcE1lZGlhdG9yYCwgKGUpID0+IHtcclxuICAgICAgICAgIEFwcE1lZGlhdG9yLnRyaWdnZXJFdmVudChub2RlLCB3YXRjaGVkRXZlbnQsIGUpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSBvYmplY3RcclxuICAgKiBAcmV0dXJucyB7Tm9kZX1cclxuICAgKi9cclxuICBsb2FkKG9iamVjdCkge1xyXG4gICAgaWYgKG9iamVjdCAmJiB0eXBlb2Ygb2JqZWN0ID09PSBcIm9iamVjdFwiKSB7XHJcbiAgICAgIGNvbnN0IHR5cGUgPSBvYmplY3RbJ18nXTtcclxuXHJcbiAgICAgIGlmICghdHlwZSkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlR5cGUgaXMgbm90IGRlZmluZWQgaW4gJ18nIHByb3BlcnR5IVwiKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgbGV0IGNscyA9IFVYW3R5cGVdO1xyXG5cclxuICAgICAgaWYgKCFjbHMpIHtcclxuICAgICAgICBjbHMgPSB3aW5kb3dbdHlwZV07XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmICghY2xzKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBUeXBlICcke3R5cGV9JyBpcyBub3QgZGVmaW5lZGApO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCBub2RlID0gbmV3IGNscygpO1xyXG5cclxuICAgICAgaWYgKG5vZGUgaW5zdGFuY2VvZiBOb2RlKSB7XHJcbiAgICAgICAgaWYgKG5vZGUgaW5zdGFuY2VvZiBDb250YWluZXIgJiYgalF1ZXJ5LmlzQXJyYXkob2JqZWN0WydfY29udGVudCddKSkge1xyXG4gICAgICAgICAgY29uc3QgY2hpbGRyZW4gPSBvYmplY3RbJ19jb250ZW50J107XHJcblxyXG4gICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjb25zdCBjaGlsZCA9IHRoaXMubG9hZChjaGlsZHJlbltpXSk7XHJcbiAgICAgICAgICAgIG5vZGUuYWRkKGNoaWxkKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIG5vZGUubG9hZFNjaGVtYShvYmplY3QpO1xyXG4gICAgICAgIHRoaXMubGlua1RvTWVkaWF0b3Iobm9kZSwgb2JqZWN0KTtcclxuICAgICAgICByZXR1cm4gbm9kZTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFR5cGUgJyR7dHlwZX0nIGlzIG5vdCBVSSBjb21wb25lbnQgY2xhc3NgKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGpzb25TdHJpbmdcclxuICAgKiBAcmV0dXJucyB7Tm9kZX1cclxuICAgKi9cclxuICBsb2FkRnJvbUpzb24oanNvblN0cmluZykge1xyXG4gICAgcmV0dXJuIHRoaXMubG9hZChKU09OLnBhcnNlKGpzb25TdHJpbmcpKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IHVybFRvSnNvblxyXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrXHJcbiAgICovXHJcbiAgbG9hZEZyb21VcmwodXJsVG9Kc29uLCBjYWxsYmFjaykge1xyXG4gICAgalF1ZXJ5LmdldEpTT04odXJsVG9Kc29uLCAoZGF0YSkgPT4ge1xyXG4gICAgICBjYWxsYmFjayh0aGlzLmxvYWQoZGF0YSkpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBVSUxvYWRlcjtcclxuIiwiXHJcbmltcG9ydCBBcHBEaXNwYXRjaGVyIGZyb20gXCIuL0FwcERpc3BhdGNoZXJcIjtcclxuXHJcbi8qKlxyXG4gKiBXZWJTb2NrZXQgQXBwIERpc3BhdGNoZXJcclxuICovXHJcbmNsYXNzIFdlYlNvY2tldEFwcERpc3BhdGNoZXIgZXh0ZW5kcyBBcHBEaXNwYXRjaGVyXHJcbntcclxuICBjb25zdHJ1Y3Rvcih3c1VybCkge1xyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICBjb25zdCBsb2MgPSB3aW5kb3cubG9jYXRpb247XHJcblxyXG4gICAgdGhpcy53c1VybCA9IHdzVXJsO1xyXG4gICAgbGV0IG5ld1VyaSA9ICcnO1xyXG5cclxuICAgIGlmIChsb2MucHJvdG9jb2wgPT09IFwiaHR0cHM6XCIpIHtcclxuICAgICAgbmV3VXJpID0gXCJ3c3M6XCI7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBuZXdVcmkgPSBcIndzOlwiO1xyXG4gICAgfVxyXG5cclxuICAgIG5ld1VyaSArPSBcIi8vXCIgKyBsb2MuaG9zdDtcclxuICAgIG5ld1VyaSArPSB3c1VybDtcclxuXHJcbiAgICB0aGlzLndzID0gbmV3IFdlYlNvY2tldChuZXdVcmkpO1xyXG4gIH1cclxuXHJcbiAgb25PcGVuKGNhbGxiYWNrKSB7XHJcbiAgICB0aGlzLndzLm9ub3BlbiA9ICgpID0+IGNhbGxiYWNrKCk7XHJcbiAgfVxyXG5cclxuICBvbk1lc3NhZ2UoY2FsbGJhY2spIHtcclxuICAgIHRoaXMud3Mub25tZXNzYWdlID0gKGUpID0+IGNhbGxiYWNrKGUuZGF0YSk7XHJcbiAgfVxyXG5cclxuICBvbkVycm9yKGNhbGxiYWNrKSB7XHJcbiAgICB0aGlzLndzLm9uZXJyb3IgPSAoKSA9PiBjYWxsYmFjaygpO1xyXG4gIH1cclxuXHJcbiAgb25DbG9zZShjYWxsYmFjaykge1xyXG4gICAgdGhpcy53cy5vbmNsb3NlID0gKCkgPT4gY2FsbGJhY2soKTtcclxuICB9XHJcblxyXG4gIHNlbmQoZGF0YSkge1xyXG4gICAgcmV0dXJuIHRoaXMud3Muc2VuZChkYXRhKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFdlYlNvY2tldEFwcERpc3BhdGNoZXI7IiwiaW1wb3J0IENvbnRhaW5lciBmcm9tICcuL0NvbnRhaW5lcic7XHJcblxyXG5jbGFzcyBBbmNob3JQYW5lIGV4dGVuZHMgQ29udGFpbmVyIHtcclxuICBjcmVhdGVEb20oKSB7XHJcbiAgICBjb25zdCBkb20gPSBzdXBlci5jcmVhdGVEb20oKTtcclxuICAgIGRvbS5hZGRDbGFzcygndXgtYW5jaG9yLXBhbmUnKTtcclxuICAgIHJldHVybiBkb207XHJcbiAgfVxyXG5cclxuICBjcmVhdGVTbG90RG9tKG9iamVjdCkge1xyXG4gICAgb2JqZWN0LmRvbS5jc3MoJ3Bvc2l0aW9uJywgJ2Fic29sdXRlJyk7XHJcbiAgICByZXR1cm4gb2JqZWN0LmRvbTtcclxuICB9XHJcblxyXG4gIGNoaWxkVG9CYWNrKG9iamVjdCkge1xyXG4gICAgY29uc3QgZG9tID0gb2JqZWN0LmRvbTtcclxuICAgIGRvbS5kZXRhY2goKTtcclxuXHJcbiAgICB0aGlzLmRvbS5wcmVwZW5kKGRvbSk7XHJcbiAgfVxyXG5cclxuICBjaGlsZFRvRnJvbnQob2JqZWN0KSB7XHJcbiAgICBjb25zdCBkb20gPSBvYmplY3QuZG9tO1xyXG4gICAgZG9tLmRldGFjaCgpO1xyXG4gICAgdGhpcy5kb20uYXBwZW5kKGRvbSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBBbmNob3JQYW5lO1xyXG4iLCJpbXBvcnQgTGFiZWxlZCBmcm9tICcuL0xhYmVsZWQnO1xyXG5cclxuY29uc3Qga2luZHMgPSBbXHJcbiAgJ3N1Y2Nlc3MnLCAncHJpbWFyeScsICdzZWNvbmRhcnknLCAnaW5mbycsICd3YXJuaW5nJywgJ2RhbmdlcicsICdsaW5rJywgJ2RhcmsnLCAnbGlnaHQnXHJcbl07XHJcblxyXG5jbGFzcyBCdXR0b24gZXh0ZW5kcyBMYWJlbGVkIHtcclxuXHJcbiAgY29uc3RydWN0b3IodGV4dCwgZ3JhcGhpYykge1xyXG4gICAgc3VwZXIodGV4dCwgZ3JhcGhpYyk7XHJcblxyXG4gICAgdGhpcy5vbignY2xpY2suQnV0dG9uJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICB0aGlzLnRyaWdnZXIoJ2FjdGlvbicpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBnZXQgb3V0bGluZSgpIHtcclxuICAgIHJldHVybiAhIXRoaXMuZG9tLmRhdGEoJy0tb3V0bGluZScpO1xyXG4gIH1cclxuXHJcbiAgc2V0IG91dGxpbmUodmFsdWUpIHtcclxuICAgIGNvbnN0IGtpbmQgPSB0aGlzLmtpbmQ7XHJcbiAgICB0aGlzLmRvbS5kYXRhKCctLW91dGxpbmUnLCAhIXZhbHVlKTtcclxuICAgIHRoaXMua2luZCA9IGtpbmQ7XHJcbiAgfVxyXG5cclxuICBnZXQga2luZCgpIHtcclxuICAgIGNvbnN0IGRvbSA9IHRoaXMuZG9tO1xyXG5cclxuICAgIGZvciAobGV0IGtpbmQgb2Yga2luZHMpIHtcclxuICAgICAgaWYgKGRvbS5oYXNDbGFzcyhgYnRuLSR7a2luZH1gKSB8fCBkb20uaGFzQ2xhc3MoYGJ0bi1vdXRsaW5lLSR7a2luZH1gKSkge1xyXG4gICAgICAgIHJldHVybiBraW5kO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuICdkZWZhdWx0JztcclxuICB9XHJcblxyXG4gIHNldCBraW5kKHZhbHVlKSB7XHJcbiAgICB0aGlzLmRvbS5yZW1vdmVDbGFzcyhgYnRuLSR7dGhpcy5raW5kfWApO1xyXG4gICAgdGhpcy5kb20ucmVtb3ZlQ2xhc3MoYGJ0bi1vdXRsaW5lLSR7dGhpcy5raW5kfWApO1xyXG5cclxuICAgIGlmICh0aGlzLm91dGxpbmUpIHtcclxuICAgICAgdGhpcy5kb20uYWRkQ2xhc3MoYGJ0bi1vdXRsaW5lLSR7dmFsdWV9YCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmRvbS5hZGRDbGFzcyhgYnRuLSR7dmFsdWV9YCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjcmVhdGVEb20oKSB7XHJcbiAgICBjb25zdCBkb20gPSBqUXVlcnkoJzxidXR0b24+PHNwYW4gY2xhc3M9XCJ1eC1sYWJlbGVkLXRleHRcIj48L3NwYW4+PC9idXR0b24+Jyk7XHJcbiAgICBkb20uYWRkQ2xhc3MoJ3V4LWxhYmVsZWQnKTtcclxuICAgIGRvbS5hZGRDbGFzcygndXgtYnV0dG9uJyk7XHJcblxyXG4gICAgZG9tLmFkZENsYXNzKCdidG4nKTtcclxuICAgIGRvbS5hZGRDbGFzcygnYnRuLWRlZmF1bHQnKTtcclxuXHJcbiAgICByZXR1cm4gZG9tO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQnV0dG9uO1xyXG4iLCJpbXBvcnQgTGFiZWxlZCBmcm9tICcuL0xhYmVsZWQnO1xyXG5pbXBvcnQgQXBwTWVkaWF0b3IgZnJvbSAnLi4vTlgvQXBwTWVkaWF0b3InO1xyXG5cclxuY2xhc3MgQ2hlY2tib3ggZXh0ZW5kcyBMYWJlbGVkIHtcclxuICBjb25zdHJ1Y3Rvcih0ZXh0LCBncmFwaGljKSB7XHJcbiAgICBzdXBlcih0ZXh0LCBncmFwaGljKTtcclxuXHJcbiAgICB0aGlzLmRvbS5vbignY2xpY2suQ2hlY2tib3gnLCAoZSkgPT4ge1xyXG4gICAgICBpZiAoZS50YXJnZXQudGFnTmFtZSA9PT0gJ0lOUFVUJykge1xyXG4gICAgICAgIEFwcE1lZGlhdG9yLnNlbmRVc2VySW5wdXQodGhpcywge3NlbGVjdGVkOiB0aGlzLnNlbGVjdGVkfSwgKCkgPT4ge1xyXG4gICAgICAgICAgdGhpcy50cmlnZ2VyKCdhY3Rpb24nLCBlKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBjcmVhdGVEb20oKSB7XHJcbiAgICAgIGNvbnN0IGRvbSA9IGpRdWVyeSgnPHNwYW4+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIj48c3BhbiBjbGFzcz1cImNyXCI+PGkgY2xhc3M9XCJjci1pY29uIG1hdGVyaWFsLWljb25zXCIgc3R5bGU9XCJmb250LXdlaWdodDogYm9sZDtcIj5jaGVjazwvaT48L3NwYW4+PHNwYW4gY2xhc3M9XCJ1eC1sYWJlbGVkLXRleHRcIj48L3NwYW4+PC9sYWJlbD48L3NwYW4+Jyk7XHJcbiAgICAgIGRvbS5hZGRDbGFzcygndXgtbGFiZWxlZCcpO1xyXG4gICAgICBkb20uYWRkQ2xhc3MoJ3V4LWNoZWNrYm94Jyk7XHJcbiAgICAgIHJldHVybiBkb207XHJcbiAgfVxyXG5cclxuICBnZXQgY2hlY2tlZCgpIHtcclxuICAgIHJldHVybiB0aGlzLmRvbS5maW5kKCdpbnB1dFt0eXBlPWNoZWNrYm94XScpLnByb3AoJ2NoZWNrZWQnKTtcclxuICB9XHJcblxyXG4gIHNldCBjaGVja2VkKHZhbHVlKSB7XHJcbiAgICB0aGlzLmRvbS5maW5kKCdpbnB1dFt0eXBlPWNoZWNrYm94XScpLnByb3AoJ2NoZWNrZWQnLCB2YWx1ZSk7XHJcbiAgfVxyXG5cclxuICBnZXQgc2VsZWN0ZWQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5jaGVja2VkO1xyXG4gIH1cclxuXHJcbiAgc2V0IHNlbGVjdGVkKHZhbHVlKSB7XHJcbiAgICB0aGlzLmNoZWNrZWQgPSB2YWx1ZTtcclxuICB9XHJcblxyXG4gIGdldCBlbmFibGVkKCkge1xyXG4gICAgcmV0dXJuICF0aGlzLmRvbS5maW5kKCdpbnB1dFt0eXBlPWNoZWNrYm94XScpLnByb3AoXCJkaXNhYmxlZFwiKTtcclxuICB9XHJcblxyXG4gIHNldCBlbmFibGVkKHZhbHVlKSB7XHJcbiAgICB0aGlzLmRvbS5maW5kKCdpbnB1dFt0eXBlPWNoZWNrYm94XScpLnByb3AoJ2Rpc2FibGVkJywgIXZhbHVlKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENoZWNrYm94O1xyXG4iLCJpbXBvcnQgU2VsZWN0Q29udHJvbCBmcm9tICcuL1NlbGVjdENvbnRyb2wnO1xyXG5cclxuY2xhc3MgQ29tYm9ib3ggZXh0ZW5kcyBTZWxlY3RDb250cm9sIHtcclxuICBjcmVhdGVEb20oKSB7XHJcbiAgICB2YXIgZG9tID0gc3VwZXIuY3JlYXRlRG9tKCk7XHJcbiAgICBkb20uYWRkQ2xhc3MoJ3V4LWNvbWJvYm94Jyk7XHJcbiAgICByZXR1cm4gZG9tO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ29tYm9ib3g7XHJcbiIsImltcG9ydCBOb2RlIGZyb20gXCIuL05vZGVcIjtcclxuXHJcbmNsYXNzIENvbnRhaW5lciBleHRlbmRzIE5vZGUge1xyXG4gIGNvbnN0cnVjdG9yKG5vZGVzKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gICAgdGhpcy5hZGQoLi4uYXJndW1lbnRzKTtcclxuICAgIHRoaXMuY29udGVudERvbSA9IHRoaXMuZG9tO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGFsaWduKCkge1xyXG4gICAgcmV0dXJuIFt0aGlzLnZlckFsaWduLCB0aGlzLmhvckFsaWduXTtcclxuICB9XHJcblxyXG4gIHNldCBhbGlnbih2YWx1ZSkge1xyXG4gICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQXJyYXkgJiYgdmFsdWUubGVuZ3RoID49IDIpIHtcclxuICAgICAgdGhpcy5ob3JBbGlnbiA9IHZhbHVlWzFdO1xyXG4gICAgICB0aGlzLnZlckFsaWduID0gdmFsdWVbMF07XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXQgaG9yQWxpZ24oKSB7XHJcbiAgICBpZiAodGhpcy5kb20uaGFzQ2xhc3MoJ3V4LW0taGFsaWduLXJpZ2h0JykpIHtcclxuICAgICAgcmV0dXJuICdyaWdodCc7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuaGFzQ2xhc3MoJ3V4LW0taGFsaWduLWNlbnRlcicpKSB7XHJcbiAgICAgIHJldHVybiAnY2VudGVyJztcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gJ2xlZnQnO1xyXG4gIH1cclxuXHJcbiAgc2V0IGhvckFsaWduKHZhbHVlKSB7XHJcbiAgICB0aGlzLmRvbS5yZW1vdmVDbGFzcygndXgtbS1oYWxpZ24tbGVmdCcpO1xyXG4gICAgdGhpcy5kb20ucmVtb3ZlQ2xhc3MoJ3V4LW0taGFsaWduLXJpZ2h0Jyk7XHJcbiAgICB0aGlzLmRvbS5yZW1vdmVDbGFzcygndXgtbS1oYWxpZ24tY2VudGVyJyk7XHJcblxyXG4gICAgdGhpcy5kb20uYWRkQ2xhc3MoJ3V4LW0taGFsaWduLScgKyB2YWx1ZSk7XHJcbiAgfVxyXG5cclxuICBnZXQgdmVyQWxpZ24oKSB7XHJcbiAgICBpZiAodGhpcy5kb20uaGFzQ2xhc3MoJ3V4LW0tdmFsaWduLWJvdHRvbScpKSB7XHJcbiAgICAgIHJldHVybiAnYm90dG9tJztcclxuICAgIH0gZWxzZSBpZiAodGhpcy5oYXNDbGFzcygndXgtbS12YWxpZ24tY2VudGVyJykpIHtcclxuICAgICAgcmV0dXJuICdjZW50ZXInO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAndG9wJztcclxuICB9XHJcblxyXG4gIHNldCB2ZXJBbGlnbih2YWx1ZSkge1xyXG4gICAgdGhpcy5kb20ucmVtb3ZlQ2xhc3MoJ3V4LW0tdmFsaWduLXRvcCcpO1xyXG4gICAgdGhpcy5kb20ucmVtb3ZlQ2xhc3MoJ3V4LW0tdmFsaWduLWJvdHRvbScpO1xyXG4gICAgdGhpcy5kb20ucmVtb3ZlQ2xhc3MoJ3V4LW0tdmFsaWduLWNlbnRlcicpO1xyXG5cclxuICAgIHRoaXMuZG9tLmFkZENsYXNzKCd1eC1tLXZhbGlnbi0nICsgdmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlU2xvdERvbShvYmplY3QpIHtcclxuICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIE5vZGUpKSB7XHJcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2NyZWF0ZVNsb3REb20oKTogMSBhcmd1bWVudCBtdXN0IGJlIGluc3RhbmNlIG9mIE5vZGUnKVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGRvbSA9IGpRdWVyeSgnPGRpdi8+JykuYXBwZW5kKG9iamVjdC5kb20pO1xyXG4gICAgZG9tLmFkZENsYXNzKCd1eC1zbG90Jyk7XHJcblxyXG4gICAgZG9tLmRhdGEoJy0td3JhcHBlcicsIG9iamVjdCk7XHJcbiAgICBvYmplY3QuZG9tLmRhdGEoJy0td3JhcHBlci1kb20nLCBkb20pO1xyXG5cclxuICAgIGNvbnN0IHdpZHRoID0gb2JqZWN0LmRhdGEoJy0td2lkdGgtcGVyY2VudCcpO1xyXG4gICAgY29uc3QgaGVpZ2h0ID0gb2JqZWN0LmRhdGEoJy0taGVpZ2h0LXBlcmNlbnQnKTtcclxuICAgIGNvbnN0IHZpc2libGUgPSBvYmplY3QuY3NzKCdkaXNwbGF5JykgIT09ICdub25lJztcclxuXHJcbiAgICBpZiAodHlwZW9mIHdpZHRoID09PSAnc3RyaW5nJykge1xyXG4gICAgICBkb20ud2lkdGgod2lkdGgpO1xyXG4gICAgICBvYmplY3QuZG9tLndpZHRoKCcxMDAlJyk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHR5cGVvZiBoZWlnaHQgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIGRvbS5oZWlnaHQoaGVpZ2h0KTtcclxuICAgICAgb2JqZWN0LmRvbS5oZWlnaHQoJzEwMCUnKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoIXZpc2libGUpIHtcclxuICAgICAgZG9tLmhpZGUoKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZG9tO1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlRG9tKCkge1xyXG4gICAgY29uc3QgZG9tID0galF1ZXJ5KCc8ZGl2PjwvZGl2PicpO1xyXG4gICAgZG9tLmFkZENsYXNzKCd1eC1jb250YWluZXInKTtcclxuXHJcbiAgICByZXR1cm4gZG9tO1xyXG4gIH1cclxuXHJcbiAgY2hpbGQoaWQpIHtcclxuICAgIGNvbnN0IGRvbSA9IHRoaXMuY29udGVudERvbS5maW5kKGAjJHtpZH1gKTtcclxuXHJcbiAgICBpZiAoZG9tICYmIGRvbS5sZW5ndGgpIHtcclxuICAgICAgcmV0dXJuIE5vZGUuZ2V0RnJvbURvbShkb20pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxuXHJcbiAgY291bnQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5jb250ZW50RG9tLmNoaWxkcmVuKCkubGVuZ3RoO1xyXG4gIH1cclxuXHJcbiAgY2hpbGRyZW4oKSB7XHJcbiAgICBjb25zdCBjaGlsZHJlbiA9IFtdO1xyXG5cclxuICAgIHRoaXMuY29udGVudERvbS5jaGlsZHJlbigpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICBjaGlsZHJlbi5wdXNoKE5vZGUuZ2V0RnJvbURvbShqUXVlcnkodGhpcykpKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiBjaGlsZHJlbjtcclxuICB9XHJcblxyXG4gIGlubmVyTm9kZXMoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5jaGlsZHJlbigpO1xyXG4gIH1cclxuXHJcbiAgcmVtb3ZlQnlJbmRleChpbmRleCkge1xyXG4gICAgY29uc3QgY2hpbGQgPSB0aGlzLmNoaWxkcmVuKClbaW5kZXhdO1xyXG4gICAgXHJcbiAgICBpZiAoY2hpbGQpIHtcclxuICAgICAgY2hpbGQuZnJlZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgYWRkKG5vZGVzKSB7XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICB0aGlzLmNvbnRlbnREb20uYXBwZW5kKHRoaXMuY3JlYXRlU2xvdERvbShhcmd1bWVudHNbaV0pKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIGluc2VydChpbmRleCwgbm9kZXMpIHtcclxuICAgIGluZGV4ID0gaW5kZXggfCAwO1xyXG5cclxuICAgIGNvbnN0IGNoaWxkcmVuID0gdGhpcy5jb250ZW50RG9tLmNoaWxkcmVuKCk7XHJcblxyXG4gICAgaWYgKCFjaGlsZHJlbi5sZW5ndGggfHwgaW5kZXggPj0gY2hpbGRyZW4ubGVuZ3RoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmFkZCguLi5BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpKTtcclxuICAgIH1cclxuXHJcbiAgICBub2RlcyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7XHJcblxyXG4gICAgbGV0IGkgPSAwO1xyXG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XHJcblxyXG4gICAgdGhpcy5kb20uY2hpbGRyZW4oKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgaWYgKGluZGV4ID09PSBpKSB7XHJcbiAgICAgICAgZm9yIChsZXQgayA9IDA7IGsgPCBub2Rlcy5sZW5ndGg7IGsrKykge1xyXG4gICAgICAgICAgY29uc3Qgc2xvdCA9IHNlbGYuY3JlYXRlU2xvdERvbShub2Rlc1trXSk7XHJcbiAgICAgICAgICBzbG90Lmluc2VydEJlZm9yZSh0aGlzKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaSsrO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICBjbGVhcigpIHtcclxuICAgIHRoaXMuY29udGVudERvbS5lbXB0eSgpO1xyXG4gIH1cclxuXHJcbiAgc2hvdygpIHtcclxuICAgIHRoaXMuZG9tLmNzcygnZGlzcGxheScsICcnKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ29udGFpbmVyO1xyXG4iLCJpbXBvcnQgQ29udGFpbmVyIGZyb20gJy4vQ29udGFpbmVyJztcclxuXHJcbmNsYXNzIEhCb3ggZXh0ZW5kcyBDb250YWluZXIge1xyXG5cclxuICBjb25zdHJ1Y3Rvcihub2Rlcykge1xyXG4gICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcclxuXHJcbiAgICB0aGlzLnNwYWNpbmcgPSAwO1xyXG4gICAgdGhpcy5hbGlnbiA9IFsndG9wJywgJ2xlZnQnXTtcclxuICB9XHJcblxyXG4gIGdldCBmaXRIZWlnaHQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5kb20uaGFzQ2xhc3MoJ3V4LW0tZml0LWhlaWdodCcpO1xyXG4gIH1cclxuXHJcbiAgc2V0IGZpdEhlaWdodCh2YWx1ZSkge1xyXG4gICAgaWYgKHZhbHVlKSB7XHJcbiAgICAgIHRoaXMuZG9tLmFkZENsYXNzKCd1eC1tLWZpdC1oZWlnaHQnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuZG9tLnJlbW92ZUNsYXNzKCd1eC1tLWZpdC1oZWlnaHQnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldCBzcGFjaW5nKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3NwYWNpbmc7XHJcbiAgfVxyXG5cclxuICBzZXQgc3BhY2luZyh2YWx1ZSkge1xyXG4gICAgdGhpcy5fc3BhY2luZyA9IHZhbHVlO1xyXG4gICAgY29uc3Qgc2xvdHMgPSB0aGlzLmRvbS5maW5kKCc+IGRpdicpO1xyXG5cclxuICAgIHNsb3RzLmNzcygnbWFyZ2luLXJpZ2h0JywgdmFsdWUgKyAncHgnKTtcclxuICAgIHNsb3RzLmxhc3QoKS5jc3MoJ21hcmdpbi1yaWdodCcsIDApO1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlRG9tKCkge1xyXG4gICAgY29uc3QgZG9tID0gc3VwZXIuY3JlYXRlRG9tKCk7XHJcbiAgICBkb20uYWRkQ2xhc3MoJ3V4LWgtYm94Jyk7XHJcblxyXG4gICAgcmV0dXJuIGRvbTtcclxuICB9XHJcblxyXG4gIGNyZWF0ZVNsb3REb20ob2JqZWN0KSB7XHJcbiAgICBjb25zdCBkb20gPSBzdXBlci5jcmVhdGVTbG90RG9tKG9iamVjdCk7XHJcbiAgICByZXR1cm4gZG9tO1xyXG4gIH1cclxuXHJcbiAgYWRkKG5vZGVzKSB7XHJcbiAgICBzdXBlci5hZGQoLi4uYXJndW1lbnRzKTtcclxuICAgIHRoaXMuc3BhY2luZyA9IHRoaXMuc3BhY2luZztcclxuICB9XHJcblxyXG4gIGluc2VydChpbmRleCwgbm9kZXMpIHtcclxuICAgIHN1cGVyLmluc2VydCguLi5hcmd1bWVudHMpO1xyXG4gICAgdGhpcy5zcGFjaW5nID0gdGhpcy5zcGFjaW5nO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgSEJveDtcclxuIiwiaW1wb3J0IExhYmVsZWQgZnJvbSBcIi4vTGFiZWxlZFwiO1xyXG5cclxuLyoqXHJcbiAqXHJcbiAqL1xyXG5jbGFzcyBIeXBlcmxpbmsgZXh0ZW5kcyBMYWJlbGVkIHtcclxuICBnZXQgaHJlZigpIHtcclxuICAgIHJldHVybiB0aGlzLmRvbS5hdHRyKCdocmVmJyk7XHJcbiAgfVxyXG5cclxuICBzZXQgaHJlZih2YWx1ZSkge1xyXG4gICAgdGhpcy5kb20uYXR0cignaHJlZicsIHZhbHVlKTtcclxuICB9XHJcblxyXG4gIGdldCB0YXJnZXQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5kb20uYXR0cigndGFyZ2V0JykgfHwgJ19zZWxmJztcclxuICB9XHJcblxyXG4gIHNldCB0YXJnZXQodmFsdWUpIHtcclxuICAgIHRoaXMuZG9tLmF0dHIoJ3RhcmdldCcsIHZhbHVlKTtcclxuICB9XHJcblxyXG4gIGNyZWF0ZURvbSgpIHtcclxuICAgIGNvbnN0IGRvbSA9IGpRdWVyeSgnPGEgY2xhc3M9XCJ1eC1sYWJlbGVkIHV4LWh5cGVybGlua1wiIGhyZWY+PHNwYW4gY2xhc3M9XCJ1eC1sYWJlbGVkLXRleHRcIj48L3NwYW4+PC9hPicpO1xyXG4gICAgZG9tLm9uKCdjbGljay5IeXBlcmxpbmsnLCAoZSkgPT4ge1xyXG4gICAgICBpZiAodGhpcy5ocmVmID09PSAnIycpIHtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiBkb207XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBIeXBlcmxpbms7IiwiaW1wb3J0IE5vZGUgZnJvbSAnLi9Ob2RlJztcclxuaW1wb3J0IFV0aWxzIGZyb20gXCIuL3V0aWwvVXRpbHNcIjtcclxuXHJcbmNsYXNzIEljb24gZXh0ZW5kcyBOb2RlIHtcclxuICBnZXQga2luZCgpIHtcclxuICAgIHRoaXMuZG9tLnRleHQoKTtcclxuICB9XHJcblxyXG4gIHNldCBraW5kKHZhbHVlKSB7XHJcbiAgICB0aGlzLmRvbS50ZXh0KHZhbHVlKTtcclxuICB9XHJcblxyXG4gIGdldCBjb2xvcigpIHtcclxuICAgIHJldHVybiB0aGlzLmRvbS5jc3MoJ2NvbG9yJykgfHwgJ2JsYWNrJztcclxuICB9XHJcblxyXG4gIHNldCBjb2xvcih2YWx1ZSkge1xyXG4gICAgdGhpcy5kb20uY3NzKCdjb2xvcicsIHZhbHVlKTtcclxuICB9XHJcblxyXG4gIGdldCBpbWFnZVNpemUoKSB7XHJcbiAgICByZXR1cm4gVXRpbHMudG9QdCh0aGlzLmRvbS5jc3MoJ2ZvbnQtc2l6ZScpKTtcclxuICB9XHJcblxyXG4gIHNldCBpbWFnZVNpemUodmFsdWUpIHtcclxuICAgIHRoaXMuZG9tLmNzcygnZm9udC1zaXplJywgdmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlRG9tKCkge1xyXG4gICAgcmV0dXJuIGpRdWVyeSgnPGkgY2xhc3M9XCJtYXRlcmlhbC1pY29ucyB1eC1pY29uXCI+PC9pPicpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgSWNvbjsiLCJpbXBvcnQgTm9kZSBmcm9tICcuL05vZGUnO1xyXG5cclxuY2xhc3MgSW1hZ2VWaWV3IGV4dGVuZHMgTm9kZSB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGltYWdlKSB7XHJcbiAgICBzdXBlcigpO1xyXG5cclxuICAgIHRoaXMucHJvcG9ydGlvbmFsID0gdHJ1ZTtcclxuICAgIHRoaXMuZGlzcGxheVR5cGUgPSAnb3JpZ2luJztcclxuXHJcbiAgICBpZiAoaW1hZ2UgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICB0aGlzLnNvdXJjZSA9IGltYWdlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZ2V0IHNvdXJjZSgpIHtcclxuICAgIGxldCBzb3VyY2UgPSB0aGlzLmRvbS5jc3MoJ2JhY2tncm91bmQtaW1hZ2UnKTtcclxuXHJcbiAgICBpZiAoc291cmNlKSB7XHJcbiAgICAgIHNvdXJjZSA9IC9edXJsXFwoKFsnXCJdPykoLiopXFwxXFwpJC8uZXhlYyhzb3VyY2UpO1xyXG4gICAgICByZXR1cm4gc291cmNlID8gc291cmNlWzJdIDogbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcblxyXG4gIHNldCBzb3VyY2UodmFsdWUpIHtcclxuICAgIHRoaXMuZG9tLmNzcyh7J2JhY2tncm91bmQtaW1hZ2UnOiBgdXJsKCcke3ZhbHVlfScpYH0pO1xyXG5cclxuICAgIGlmICh0aGlzLmRpc3BsYXlUeXBlID09PSAnb3JpZ2luJykge1xyXG4gICAgICB0aGlzLmRvbS5maW5kKCdpbWcnKS5hdHRyKCdzcmMnLCB2YWx1ZSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXQgY2VudGVyZWQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5kb20uY3NzKCdiYWNrZ3JvdW5kLXBvc2l0aW9uJykgPT09ICc1MCUgNTAlJztcclxuICB9XHJcblxyXG4gIHNldCBjZW50ZXJlZCh2YWx1ZSkge1xyXG4gICAgdGhpcy5kb20uY3NzKCdiYWNrZ3JvdW5kLXBvc2l0aW9uJywgdmFsdWUgPyAnNTAlIDUwJScgOiAnMCAwJyk7XHJcbiAgfVxyXG5cclxuICBnZXQgZGlzcGxheVR5cGUoKSB7XHJcbiAgICBzd2l0Y2ggKHRoaXMuZG9tLmNzcygnYmFja2dyb3VuZC1zaXplJykpIHtcclxuICAgICAgY2FzZSAnMTAwJSAxMDAlJzogcmV0dXJuICdmaWxsZWQnO1xyXG4gICAgICBjYXNlICdjb3Zlcic6IHJldHVybiAnY3JvcHBlZCc7XHJcbiAgICAgIGNhc2UgJ3Jlc2l6ZWQnOiByZXR1cm4gJ3Jlc2l6ZWQnO1xyXG5cclxuICAgICAgY2FzZSAnYXV0byc6XHJcbiAgICAgIGNhc2UgJ2F1dG8gYXV0byc6IHJldHVybiAnb3JpZ2luJztcclxuXHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgcmV0dXJuICcnO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0IGRpc3BsYXlUeXBlKHR5cGUpIHtcclxuICAgIHRoaXMuZG9tLmZpbmQoJ2ltZycpLnJlbW92ZSgpO1xyXG5cclxuICAgIHN3aXRjaCAodHlwZS50b1N0cmluZygpLnRvTG93ZXJDYXNlKCkpIHtcclxuICAgICAgY2FzZSAnZmlsbGVkJzpcclxuICAgICAgICB0aGlzLmRvbS5jc3MoJ2JhY2tncm91bmQtc2l6ZScsIGAxMDAlIDEwMCVgKTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAnY3JvcHBlZCc6XHJcbiAgICAgICAgdGhpcy5kb20uY3NzKCdiYWNrZ3JvdW5kLXNpemUnLCAnY292ZXInKTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAncmVzaXplZCc6XHJcbiAgICAgICAgdGhpcy5kb20uY3NzKCdiYWNrZ3JvdW5kLXNpemUnLCAnY29udGFpbicpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlICdvcmlnaW4nOlxyXG4gICAgICAgIGNvbnN0IHNvdXJjZSA9IHRoaXMuc291cmNlO1xyXG4gICAgICAgIHRoaXMuZG9tLmNzcygnYmFja2dyb3VuZC1zaXplJywgJ2F1dG8gYXV0bycpO1xyXG4gICAgICAgIHRoaXMuZG9tLmFwcGVuZChqUXVlcnkoJzxpbWcgc3R5bGU9XCJ2aXNpYmlsaXR5OiBoaWRkZW5cIiAvPicpKTtcclxuICAgICAgICB0aGlzLnNvdXJjZSA9IHNvdXJjZTtcclxuICAgICAgICBicmVhaztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNyZWF0ZURvbSgpIHtcclxuICAgIGNvbnN0IGRvbSA9IGpRdWVyeSgnPGRpdj48L2Rpdj4nKTtcclxuICAgIGRvbS5hZGRDbGFzcygndXgtaW1hZ2UtdmlldycpO1xyXG5cclxuICAgIGRvbS5jc3Moe1xyXG4gICAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcclxuICAgICAgYmFja2dyb3VuZFJlcGVhdDogJ25vLXJlcGVhdCcsXHJcbiAgICAgIGJhY2tncm91bmRTaXplOiAnMTAwJSAxMDAlJyxcclxuICAgICAgYmFja2dyb3VuZFBvc2l0aW9uOiAnMCAwJ1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gZG9tO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgSW1hZ2VWaWV3O1xyXG4iLCJpbXBvcnQgTGFiZWxlZCBmcm9tICcuL0xhYmVsZWQnO1xyXG5cclxuXHJcbmNsYXNzIExhYmVsIGV4dGVuZHMgTGFiZWxlZCB7XHJcblxyXG4gIGNyZWF0ZURvbSgpIHtcclxuICAgICAgY29uc3QgZG9tID0galF1ZXJ5KCc8c3BhbiBjbGFzcz1cInV4LWxhYmVsZWQgdXgtbGFiZWxcIj48c3BhbiBjbGFzcz1cInV4LWxhYmVsZWQtdGV4dFwiPjwvc3Bhbj48L3NwYW4+Jyk7XHJcbiAgICAgIHJldHVybiBkb207XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBMYWJlbDtcclxuIiwiaW1wb3J0IE5vZGUgZnJvbSAnLi9Ob2RlJztcclxuaW1wb3J0IEZvbnQgZnJvbSAnLi9wYWludC9Gb250JztcclxuaW1wb3J0IEltYWdlVmlldyBmcm9tICcuL0ltYWdlVmlldyc7XHJcbmltcG9ydCBVdGlscyBmcm9tICcuL3V0aWwvVXRpbHMnO1xyXG5cclxuY2xhc3MgTGFiZWxlZCBleHRlbmRzIE5vZGUge1xyXG4gIGNvbnN0cnVjdG9yKHRleHQsIGdyYXBoaWMpIHtcclxuICAgIHN1cGVyKCk7XHJcbiAgICB0aGlzLnRleHRQcmVGb3JtYXR0ZWQgPSBmYWxzZTtcclxuICAgIHRoaXMudGV4dFR5cGUgPSAndGV4dCc7XHJcbiAgICB0aGlzLmNvbnRlbnREaXNwbGF5ID0gJ2xlZnQnO1xyXG4gICAgdGhpcy5ncmFwaGljVGV4dEdhcCA9IDQ7XHJcbiAgICB0aGlzLmdyYXBoaWMgPSBncmFwaGljO1xyXG4gICAgdGhpcy50ZXh0ID0gdGV4dDtcclxuICAgIHRoaXMuYWxpZ24gPSBbJ2NlbnRlcicsICdjZW50ZXInXTtcclxuICB9XHJcblxyXG4gIGdldCBmb250KCkge1xyXG4gICAgcmV0dXJuIEZvbnQuZ2V0RnJvbURvbSh0aGlzLmRvbSk7XHJcbiAgfVxyXG5cclxuICBzZXQgZm9udCh2YWx1ZSkge1xyXG4gICAgRm9udC5hcHBseVRvRG9tKHRoaXMuZG9tLCB2YWx1ZSk7XHJcbiAgfVxyXG5cclxuICBnZXQgYWxpZ24oKSB7XHJcbiAgICByZXR1cm4gW3RoaXMudmVyQWxpZ24sIHRoaXMuaG9yQWxpZ25dO1xyXG4gIH1cclxuXHJcbiAgc2V0IGFsaWduKHZhbHVlKSB7XHJcbiAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBcnJheSAmJiB2YWx1ZS5sZW5ndGggPj0gMikge1xyXG4gICAgICB0aGlzLmhvckFsaWduID0gdmFsdWVbMV07XHJcbiAgICAgIHRoaXMudmVyQWxpZ24gPSB2YWx1ZVswXTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldCBob3JBbGlnbigpIHtcclxuICAgIGlmICh0aGlzLmRvbS5oYXNDbGFzcygndXgtbS1oYWxpZ24tcmlnaHQnKSkge1xyXG4gICAgICByZXR1cm4gJ3JpZ2h0JztcclxuICAgIH0gZWxzZSBpZiAodGhpcy5oYXNDbGFzcygndXgtbS1oYWxpZ24tY2VudGVyJykpIHtcclxuICAgICAgcmV0dXJuICdjZW50ZXInO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAnbGVmdCc7XHJcbiAgfVxyXG5cclxuICBzZXQgaG9yQWxpZ24odmFsdWUpIHtcclxuICAgIHRoaXMuZG9tLnJlbW92ZUNsYXNzKCd1eC1tLWhhbGlnbi1sZWZ0Jyk7XHJcbiAgICB0aGlzLmRvbS5yZW1vdmVDbGFzcygndXgtbS1oYWxpZ24tcmlnaHQnKTtcclxuICAgIHRoaXMuZG9tLnJlbW92ZUNsYXNzKCd1eC1tLWhhbGlnbi1jZW50ZXInKTtcclxuXHJcbiAgICB0aGlzLmRvbS5hZGRDbGFzcygndXgtbS1oYWxpZ24tJyArIHZhbHVlKTtcclxuICB9XHJcblxyXG4gIGdldCB2ZXJBbGlnbigpIHtcclxuICAgIGlmICh0aGlzLmRvbS5oYXNDbGFzcygndXgtbS12YWxpZ24tYm90dG9tJykpIHtcclxuICAgICAgcmV0dXJuICdib3R0b20nO1xyXG4gICAgfSBlbHNlIGlmICh0aGlzLmhhc0NsYXNzKCd1eC1tLXZhbGlnbi1jZW50ZXInKSkge1xyXG4gICAgICByZXR1cm4gJ2NlbnRlcic7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuICd0b3AnO1xyXG4gIH1cclxuXHJcbiAgc2V0IHZlckFsaWduKHZhbHVlKSB7XHJcbiAgICB0aGlzLmRvbS5yZW1vdmVDbGFzcygndXgtbS12YWxpZ24tdG9wJyk7XHJcbiAgICB0aGlzLmRvbS5yZW1vdmVDbGFzcygndXgtbS12YWxpZ24tYm90dG9tJyk7XHJcbiAgICB0aGlzLmRvbS5yZW1vdmVDbGFzcygndXgtbS12YWxpZ24tY2VudGVyJyk7XHJcblxyXG4gICAgdGhpcy5kb20uYWRkQ2xhc3MoJ3V4LW0tdmFsaWduLScgKyB2YWx1ZSk7XHJcbiAgfVxyXG5cclxuICBnZXQgdGV4dCgpIHtcclxuICAgIGxldCBkb20gPSB0aGlzLmRvbS5maW5kKCdzcGFuLnV4LWxhYmVsZWQtdGV4dCcpO1xyXG5cclxuICAgIGlmICh0aGlzLnRleHRQcmVGb3JtYXR0ZWQpIHtcclxuICAgICAgZG9tID0gZG9tLmZpbmQoJz4gcHJlJyk7XHJcbiAgICB9XHJcblxyXG4gICAgc3dpdGNoICh0aGlzLnRleHRUeXBlKSB7XHJcbiAgICAgIGNhc2UgJ3RleHQnOlxyXG4gICAgICAgIHJldHVybiBkb20udGV4dCgpO1xyXG4gICAgICBjYXNlICdodG1sJzpcclxuICAgICAgICByZXR1cm4gZG9tLmh0bWwoKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gJyc7XHJcbiAgfVxyXG5cclxuICBzZXQgdGV4dCh2YWx1ZSkge1xyXG4gICAgbGV0IGRvbSA9IHRoaXMuZG9tLmZpbmQoJ3NwYW4udXgtbGFiZWxlZC10ZXh0Jyk7XHJcblxyXG4gICAgaWYgKHRoaXMudGV4dFByZUZvcm1hdHRlZCkge1xyXG4gICAgICBkb20gPSBkb20uZmluZCgnPiBwcmUnKTtcclxuICAgIH1cclxuXHJcbiAgICBzd2l0Y2ggKHRoaXMudGV4dFR5cGUpIHtcclxuICAgICAgY2FzZSAndGV4dCc6XHJcbiAgICAgICAgZG9tLnRleHQodmFsdWUpO1xyXG4gICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgY2FzZSAnaHRtbCc6XHJcbiAgICAgICAgZG9tLmh0bWwodmFsdWUpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZ2V0IHRleHRQcmVGb3JtYXR0ZWQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5kb20uZmluZCgnc3Bhbi51eC1sYWJlbGVkLXRleHQnKS5oYXMoJz4gcHJlJykubGVuZ3RoID4gMDtcclxuICB9XHJcblxyXG4gIHNldCB0ZXh0UHJlRm9ybWF0dGVkKHZhbHVlKSB7XHJcbiAgICBpZiAodGhpcy50ZXh0UHJlRm9ybWF0dGVkID09PSB2YWx1ZSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgZG9tID0gdGhpcy5kb20uZmluZCgnc3Bhbi51eC1sYWJlbGVkLXRleHQnKTtcclxuICAgIGlmICh2YWx1ZSkge1xyXG4gICAgICBkb20uaHRtbCgnPHByZT4nICsgZG9tLmh0bWwoKSArICc8L3ByZT4nKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGRvbS5odG1sKGRvbS5maW5kKCc+IHByZScpLmh0bWwoKSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXQgdGV4dENvbG9yKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZG9tLmNzcygnY29sb3InKTtcclxuICB9XHJcblxyXG4gIHNldCB0ZXh0Q29sb3IodmFsdWUpIHtcclxuICAgIHRoaXMuZG9tLmNzcygnY29sb3InLCB2YWx1ZSA/IHZhbHVlIDogJycpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHRleHRUeXBlKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3RleHRUeXBlO1xyXG4gIH1cclxuXHJcbiAgc2V0IHRleHRUeXBlKHZhbHVlKSB7XHJcbiAgICBjb25zdCB0ZXh0ID0gdGhpcy50ZXh0O1xyXG4gICAgY29uc3QgZ3JhcGhpYyA9IHRoaXMuZ3JhcGhpYztcclxuXHJcbiAgICBpZiAodmFsdWUpIHtcclxuICAgICAgdGhpcy5fdGV4dFR5cGUgPSB2YWx1ZS50b1N0cmluZygpLnRvTG93ZXJDYXNlKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl90ZXh0VHlwZSA9ICd0ZXh0JztcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnRleHQgPSB0ZXh0O1xyXG4gICAgdGhpcy5ncmFwaGljID0gZ3JhcGhpYztcclxuICB9XHJcblxyXG4gIGdldCBjb250ZW50RGlzcGxheSgpIHtcclxuICAgIGlmICh0aGlzLmRvbS5maXJzdCgpLmhhc0NsYXNzKCd1eC1ncmFwaGljJykpIHtcclxuICAgICAgaWYgKHRoaXMuZG9tLmhhc0NsYXNzKCd1eC1sYWJlbGVkLXZlcnRpY2FsJykpIHtcclxuICAgICAgICByZXR1cm4gJ3RvcCc7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuICdsZWZ0JztcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIGlmICh0aGlzLmRvbS5sYXN0KCkuaGFzQ2xhc3MoJ3V4LWdyYXBoaWMnKSkge1xyXG4gICAgICBpZiAodGhpcy5kb20uaGFzQ2xhc3MoJ3V4LWxhYmVsZWQtdmVydGljYWwnKSkge1xyXG4gICAgICAgIHJldHVybiAnYm90dG9tJztcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gJ3JpZ2h0JztcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX2NvbnRlbnREaXNwbGF5O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0IGNvbnRlbnREaXNwbGF5KHZhbHVlKSB7XHJcbiAgICBjb25zdCBncmFwaGljID0gdGhpcy5ncmFwaGljO1xyXG4gICAgY29uc3QgZ3JhcGhpY0dhcCA9IHRoaXMuZ3JhcGhpY1RleHRHYXA7XHJcbiAgICB0aGlzLl9jb250ZW50RGlzcGxheSA9IHZhbHVlO1xyXG5cclxuICAgIHN3aXRjaCAodmFsdWUpIHtcclxuICAgICAgY2FzZSAndG9wJzpcclxuICAgICAgY2FzZSAnYm90dG9tJzpcclxuICAgICAgICB0aGlzLmRvbS5hZGRDbGFzcygndXgtbGFiZWxlZC12ZXJ0aWNhbCcpO1xyXG4gICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgY2FzZSAncmlnaHQnOlxyXG4gICAgICAgIHRoaXMuZG9tLnJlbW92ZUNsYXNzKCd1eC1sYWJlbGVkLXZlcnRpY2FsJyk7XHJcbiAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICBjYXNlICdsZWZ0JzpcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICB0aGlzLmRvbS5yZW1vdmVDbGFzcygndXgtbGFiZWxlZC12ZXJ0aWNhbCcpO1xyXG4gICAgICAgIHRoaXMuX2NvbnRlbnREaXNwbGF5ID0gJ2xlZnQnO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZ3JhcGhpYyA9IGdyYXBoaWM7XHJcbiAgICB0aGlzLmdyYXBoaWNUZXh0R2FwID0gZ3JhcGhpY0dhcDtcclxuICB9XHJcblxyXG4gIGdldCBncmFwaGljVGV4dEdhcCgpIHtcclxuICAgIGNvbnN0IGdyRG9tID0gdGhpcy5kb20uZmluZCgnLnV4LWdyYXBoaWMnKTtcclxuXHJcbiAgICBpZiAoZ3JEb20ubGVuZ3RoKSB7XHJcbiAgICAgIGxldCBwcm9wID0gJ21hcmdpbi1yaWdodCc7XHJcblxyXG4gICAgICBzd2l0Y2ggKHRoaXMuY29udGVudERpc3BsYXkpIHtcclxuICAgICAgICBjYXNlICdib3R0b20nOlxyXG4gICAgICAgICAgcHJvcCA9ICdtYXJnaW4tdG9wJztcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ3JpZ2h0JzpcclxuICAgICAgICAgIHByb3AgPSAnbWFyZ2luLWxlZnQnO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAndG9wJzpcclxuICAgICAgICAgIHByb3AgPSAnbWFyZ2luLWJvdHRvbSc7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG5cclxuICAgICAgcmV0dXJuIFV0aWxzLnRvUHQoZ3JEb20uY3NzKHByb3ApKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiB0aGlzLl9ncmFwaGljR2FwO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0IGdyYXBoaWNUZXh0R2FwKHZhbHVlKSB7XHJcbiAgICB0aGlzLl9ncmFwaGljR2FwID0gdmFsdWU7XHJcblxyXG4gICAgY29uc3QgZ3JEb20gPSB0aGlzLmRvbS5maW5kKCcudXgtZ3JhcGhpYycpO1xyXG5cclxuICAgIGlmIChnckRvbS5sZW5ndGgpIHtcclxuICAgICAgZ3JEb20uY3NzKCdtYXJnaW4nLCAwKTtcclxuXHJcbiAgICAgIGxldCBwcm9wID0gJ21hcmdpbi1yaWdodCc7XHJcblxyXG4gICAgICBzd2l0Y2ggKHRoaXMuY29udGVudERpc3BsYXkpIHtcclxuICAgICAgICBjYXNlICdib3R0b20nOlxyXG4gICAgICAgICAgcHJvcCA9ICdtYXJnaW4tdG9wJztcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ3JpZ2h0JzpcclxuICAgICAgICAgIHByb3AgPSAnbWFyZ2luLWxlZnQnO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAndG9wJzpcclxuICAgICAgICAgIHByb3AgPSAnbWFyZ2luLWJvdHRvbSc7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG5cclxuICAgICAgZ3JEb20uY3NzKHByb3AsIHZhbHVlICsgJ3B4Jyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXQgZ3JhcGhpYygpIHtcclxuICAgIHJldHVybiBOb2RlLmdldEZyb21Eb20odGhpcy5kb20uZmluZCgnLnV4LWdyYXBoaWMgPiAqJykuZmlyc3QoKSk7XHJcbiAgfVxyXG5cclxuICBzZXQgZ3JhcGhpYyhub2RlKSB7XHJcbiAgICBjb25zdCBncmFwaGljR2FwID0gdGhpcy5ncmFwaGljVGV4dEdhcDtcclxuICAgIHRoaXMuZG9tLmZpbmQoJy51eC1ncmFwaGljJykucmVtb3ZlKCk7XHJcblxyXG4gICAgaWYgKG5vZGUpIHtcclxuICAgICAgaWYgKHR5cGVvZiBub2RlID09PSAnc3RyaW5nJyB8fCBub2RlIGluc3RhbmNlb2YgU3RyaW5nKSB7XHJcbiAgICAgICAgbm9kZSA9IG5ldyBJbWFnZVZpZXcobm9kZSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbnN0IGRvbSA9IGpRdWVyeSgnPHNwYW4gY2xhc3M9XCJ1eC1ncmFwaGljXCIgLz4nKS5hcHBlbmQobm9kZS5kb20pO1xyXG5cclxuICAgICAgc3dpdGNoICh0aGlzLmNvbnRlbnREaXNwbGF5KSB7XHJcbiAgICAgICAgY2FzZSAndG9wJzpcclxuICAgICAgICBjYXNlICdsZWZ0JzpcclxuICAgICAgICAgIHRoaXMuZG9tLnByZXBlbmQoZG9tKTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ2JvdHRvbSc6XHJcbiAgICAgICAgY2FzZSAncmlnaHQnOlxyXG4gICAgICAgICAgdGhpcy5kb20uYXBwZW5kKGRvbSk7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG5cclxuICAgICAgdGhpcy5ncmFwaGljVGV4dEdhcCA9IGdyYXBoaWNHYXA7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBpbm5lck5vZGVzKCkge1xyXG4gICAgY29uc3QgcmVzdWx0ID0gW107XHJcblxyXG4gICAgaWYgKHRoaXMuZ3JhcGhpYykge1xyXG4gICAgICByZXN1bHQucHVzaCh0aGlzLmdyYXBoaWMpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBMYWJlbGVkO1xyXG4iLCJpbXBvcnQgQ29udGFpbmVyIGZyb20gJy4vQ29udGFpbmVyJztcclxuaW1wb3J0IE5vZGUgZnJvbSAnLi9Ob2RlJztcclxuaW1wb3J0IEFwcE1lZGlhdG9yIGZyb20gJy4uL05YL0FwcE1lZGlhdG9yJztcclxuaW1wb3J0IEZvbnQgZnJvbSBcIi4vcGFpbnQvRm9udFwiO1xyXG5cclxuY2xhc3MgTGlzdFZpZXcgZXh0ZW5kcyBDb250YWluZXIge1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICB0aGlzLnNwYWNpbmcgPSAwO1xyXG4gICAgdGhpcy5hbGlnbiA9IFsnY2VudGVyJywgJ2xlZnQnXTtcclxuXHJcbiAgICB0aGlzLmRvbS5vbignY2hhbmdlLkxpc3RWaWV3JywgKCkgPT4ge1xyXG4gICAgICBjb25zdCBkYXRhID0ge1xyXG4gICAgICAgIHNlbGVjdGVkOiB0aGlzLnNlbGVjdGVkLFxyXG4gICAgICAgIHNlbGVjdGVkSW5kZXg6IHRoaXMuc2VsZWN0ZWRJbmRleFxyXG4gICAgICB9O1xyXG5cclxuICAgICAgQXBwTWVkaWF0b3Iuc2VuZFVzZXJJbnB1dCh0aGlzLCBkYXRhLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy50cmlnZ2VyKCdhY3Rpb24nKTtcclxuICAgICAgfSk7XHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgZ2V0IGZvbnQoKSB7XHJcbiAgICByZXR1cm4gRm9udC5nZXRGcm9tRG9tKHRoaXMuZG9tKTtcclxuICB9XHJcblxyXG4gIHNldCBmb250KHZhbHVlKSB7XHJcbiAgICBGb250LmFwcGx5VG9Eb20odGhpcy5kb20sIHZhbHVlKTtcclxuICB9XHJcblxyXG4gIGdldCBzZWxlY3RlZEluZGV4KCkge1xyXG4gICAgbGV0IGluZGV4ID0gLTE7XHJcbiAgICBsZXQgcmVzdWx0ID0gLTE7XHJcblxyXG4gICAgdGhpcy5kb20uZmluZCgnPiAudXgtc2xvdCcpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICBpbmRleCsrO1xyXG5cclxuICAgICAgaWYgKGpRdWVyeSh0aGlzKS5oYXNDbGFzcygnYWN0aXZlJykpIHtcclxuICAgICAgICByZXN1bHQgPSBpbmRleDtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxuICB9XHJcblxyXG4gIHNldCBzZWxlY3RlZEluZGV4KHZhbHVlKSB7XHJcbiAgICBjb25zdCBjaGlsZHJlbiA9IHRoaXMuY2hpbGRyZW4oKTtcclxuXHJcbiAgICBpZiAodmFsdWUgPj0gMCAmJiB2YWx1ZSA8IGNoaWxkcmVuLmxlbmd0aCkge1xyXG4gICAgICB0aGlzLnNlbGVjdGVkID0gY2hpbGRyZW5bdmFsdWVdO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5zZWxlY3RlZCA9IG51bGw7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXQgc2VsZWN0ZWQoKSB7XHJcbiAgICBjb25zdCBkb20gPSB0aGlzLmRvbS5maW5kKCc+IC51eC1zbG90LmFjdGl2ZScpLmZpcnN0KCk7XHJcblxyXG4gICAgaWYgKGRvbSkge1xyXG4gICAgICByZXR1cm4gTm9kZS5nZXRGcm9tRG9tKGRvbSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG5cclxuICBzZXQgc2VsZWN0ZWQob2JqZWN0KSB7XHJcbiAgICB0aGlzLmRvbS5maW5kKCc+IC51eC1zbG90LmFjdGl2ZScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuXHJcbiAgICBpZiAob2JqZWN0IGluc3RhbmNlb2YgTm9kZSkge1xyXG4gICAgICBvYmplY3QuZG9tLmNsb3Nlc3QoJy51eC1zbG90JykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgY3JlYXRlRG9tKCkge1xyXG4gICAgY29uc3QgZG9tID0gc3VwZXIuY3JlYXRlRG9tKCk7XHJcbiAgICBkb20uYWRkQ2xhc3MoJ2xpc3QtZ3JvdXAnKTtcclxuICAgIGRvbS5hZGRDbGFzcygndXgtbGlzdC12aWV3Jyk7XHJcbiAgICByZXR1cm4gZG9tO1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlU2xvdERvbShvYmplY3QpIHtcclxuICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIE5vZGUpKSB7XHJcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2NyZWF0ZVNsb3REb20oKTogMSBhcmd1bWVudCBtdXN0IGJlIGluc3RhbmNlIG9mIE5vZGUnKVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGRvbSA9IGpRdWVyeSgnPHNwYW4gY2xhc3M9XCJsaXN0LWdyb3VwLWl0ZW0gdXgtc2xvdFwiIC8+JykuYXBwZW5kKG9iamVjdC5kb20pO1xyXG5cclxuICAgIGRvbS5vbignY2xpY2suTGlzdFZpZXcnLCAoZSkgPT4ge1xyXG4gICAgICBkb20uY2xvc2VzdCgnLnV4LWxpc3QtdmlldycpLmZpbmQoJz4gLnV4LXNsb3QnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgIGRvbS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcblxyXG4gICAgICB0aGlzLnRyaWdnZXIoJ2NoYW5nZScpO1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH0pO1xyXG5cclxuICAgIGRvbS5kYXRhKCctLXdyYXBwZXInLCBvYmplY3QpO1xyXG4gICAgb2JqZWN0LmRvbS5kYXRhKCctLXdyYXBwZXItZG9tJywgZG9tKTtcclxuICAgIHJldHVybiBkb207XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBMaXN0VmlldztcclxuIiwiaW1wb3J0IFNlbGVjdENvbnRyb2wgZnJvbSAnLi9TZWxlY3RDb250cm9sJztcclxuXHJcbmNsYXNzIExpc3Rib3ggZXh0ZW5kcyBTZWxlY3RDb250cm9sIHtcclxuXHJcbiAgY3JlYXRlRG9tKCkge1xyXG4gICAgdmFyIGRvbSA9IHN1cGVyLmNyZWF0ZURvbSgpO1xyXG4gICAgZG9tLnByb3AoJ211bHRpcGxlJywgdHJ1ZSk7XHJcbiAgICBkb20uYWRkQ2xhc3MoJ3V4LWxpc3Rib3gnKTtcclxuICAgIHJldHVybiBkb207XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBMaXN0Ym94O1xyXG4iLCJpbXBvcnQgVXRpbHMgZnJvbSAnLi91dGlsL1V0aWxzJztcclxuaW1wb3J0IFVJTG9hZGVyIGZyb20gXCIuLi9OWC9VSUxvYWRlclwiO1xyXG5cclxuY29uc3QgS0VZX0NPREVTID0ge1xyXG4gIEVudGVyOiAxMyxcclxuICBCYWNrc3BhY2U6IDgsXHJcbiAgVGFiOiA5LFxyXG4gIENhbmNlbDogMHgwMyxcclxuICBDbGVhcjogMHgwQyxcclxuICBTaGlmdDogMHgxMCxcclxuICBDdHJsOiAweDExLFxyXG4gIEFsdDogMHgxMixcclxuICBQYXVzZTogMHgxMyxcclxuICBDYXBzTG9jazogMHgxNCxcclxuICBFc2M6IDB4MUIsXHJcbiAgRXNjYXBlOiAweDFCLFxyXG4gIFNwYWNlOiAweDIwLFxyXG4gIFBhZ2VVcDogMHgyMSxcclxuICBQYWdlRG93bjogMHgyMixcclxuICBFbmQ6IDB4MjMsXHJcbiAgSG9tZTogMHgyNCxcclxuICBMZWZ0OiAweDI1LFxyXG4gIFVwOiAweDI2LFxyXG4gIFJpZ2h0OiAweDI3LFxyXG4gIERvd246IDB4MjgsXHJcbiAgQ29tbWE6MHgyQyxcclxuICBEZWxldGU6IDB4N0YsXHJcbiAgRjE6IDB4NzAsIEYyOiAweDcxLCBGMzogMHg3MiwgRjQ6IDB4NzMsIEY1OiAweDc0LCBGNjogMHg3NSwgRjc6IDB4NzYsIEY4OiAweDc3LCBGOTogMHg3OCwgRjEwOiAweDc5LCBGMTE6IDB4N0EsIEYxMjogMHg3QixcclxuICBQcmludFNjcmVlbjogMHg5QSxcclxuICBJbnNlcnQ6IDB4OUJcclxufTtcclxuXHJcbi8qKlxyXG4gKiBCYXNlIEhUTUwgTm9kZSBjbGFzcy5cclxuICoqL1xyXG5jbGFzcyBOb2RlIHtcclxuICBjb25zdHJ1Y3Rvcihkb20pIHtcclxuICAgIHRoaXMuX19vYnNlcnZlcnMgPSBbXTtcclxuXHJcbiAgICBpZiAoZG9tID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgdGhpcy5kb20gPSB0aGlzLmNyZWF0ZURvbSgpO1xyXG5cclxuICAgICAgaWYgKCEodGhpcy5kb20gaW5zdGFuY2VvZiBqUXVlcnkpKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWV0aG9kIGNyZWF0ZURvbSgpIG11c3QgcmV0dXJuIGluc3RhbmNlIG9mIGFuIGpRdWVyeSBvYmplY3RcIik7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmIChkb20gaW5zdGFuY2VvZiBqUXVlcnkpIHtcclxuICAgICAgICB0aGlzLmRvbSA9IGRvbTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb24tanF1ZXJ5IG9iamVjdCBjYW5ub3QgYmUgcGFzc2VkIGludG8gTm9kZS5jb25zdHJ1Y3QoKVwiKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZG9tLmRhdGEoJy0td3JhcHBlcicsIHRoaXMpO1xyXG5cclxuICAgIHRoaXMuZG9tLm9uKCdkYmxjbGljay5Ob2RlJywgKGUpID0+IHtcclxuICAgICAgdGhpcy50cmlnZ2VyKCdjbGljay0yeCcsIGUpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5kb20ub24oJ2NsaWNrLk5vZGUnLCAoZSkgPT4ge1xyXG4gICAgICBzd2l0Y2ggKGUud2hpY2gpIHtcclxuICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICB0aGlzLnRyaWdnZXIoJ2NsaWNrLWxlZnQnLCBlKTsgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgdGhpcy50cmlnZ2VyKCdjbGljay1taWRkbGUnLCBlKTsgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAzOlxyXG4gICAgICAgICAgdGhpcy50cmlnZ2VyKCdjbGljay1yaWdodCcsIGUpOyBicmVhaztcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3Qga2V5RXZlbnRCdWlsZGVyID0gKGV2ZW50KSA9PiB7XHJcbiAgICAgIHJldHVybiAoZSkgPT4ge1xyXG4gICAgICAgIGxldCBmb3VuZCA9IGZhbHNlO1xyXG5cclxuICAgICAgICBmb3IgKGxldCBrZXkgaW4gS0VZX0NPREVTKSB7XHJcbiAgICAgICAgICBjb25zdCB2YWx1ZSA9IEtFWV9DT0RFU1trZXldO1xyXG5cclxuICAgICAgICAgIGlmICh2YWx1ZSA9PT0gZS5rZXlDb2RlKSB7XHJcbiAgICAgICAgICAgIHRoaXMudHJpZ2dlcihldmVudCArICctJyArIGtleS50b0xvd2VyQ2FzZSgpLCBlKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChldmVudC5zaGlmdEtleSkgdGhpcy50cmlnZ2VyKGAke2V2ZW50fS1zaGlmdCske2tleS50b0xvd2VyQ2FzZSgpfWAsIGUpO1xyXG4gICAgICAgICAgICBpZiAoZXZlbnQuY3RybEtleSkgdGhpcy50cmlnZ2VyKGAke2V2ZW50fS1jdHJsKyR7a2V5LnRvTG93ZXJDYXNlKCl9YCwgZSk7XHJcbiAgICAgICAgICAgIGlmIChldmVudC5hbHRLZXkpIHRoaXMudHJpZ2dlcihgJHtldmVudH0tYWx0KyR7a2V5LnRvTG93ZXJDYXNlKCl9YCwgZSk7XHJcblxyXG4gICAgICAgICAgICBmb3VuZCA9IHRydWU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBzd2l0Y2ggKGV2ZW50LmtleUNvZGUpIHtcclxuICAgICAgICAgIGNhc2UgS0VZX0NPREVTLlVwOlxyXG4gICAgICAgICAgY2FzZSBLRVlfQ09ERVMuUmlnaHQ6XHJcbiAgICAgICAgICBjYXNlIEtFWV9DT0RFUy5Eb3duOlxyXG4gICAgICAgICAgY2FzZSBLRVlfQ09ERVMuTGVmdDpcclxuICAgICAgICAgICAgdGhpcy50cmlnZ2VyKGV2ZW50ICsgJy1hbnlkaXJlY3Rpb24nLCBlKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChldmVudC5zaGlmdEtleSkgdGhpcy50cmlnZ2VyKGAke2V2ZW50fS1zaGlmdCthbnlkaXJlY3Rpb25gLCBlKTtcclxuICAgICAgICAgICAgaWYgKGV2ZW50LmN0cmxLZXkpIHRoaXMudHJpZ2dlcihgJHtldmVudH0tY3RybCthbnlkaXJlY3Rpb25gLCBlKTtcclxuICAgICAgICAgICAgaWYgKGV2ZW50LmFsdEtleSkgdGhpcy50cmlnZ2VyKGAke2V2ZW50fS1hbHQrYW55ZGlyZWN0aW9uYCwgZSk7XHJcblxyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChldmVudC5oYXNPd25Qcm9wZXJ0eSgnY2hhcicpICYmICFmb3VuZCkge1xyXG4gICAgICAgICAgY29uc3QgY2hhciA9IGV2ZW50LmNoYXIudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgICAgdGhpcy50cmlnZ2VyKGV2ZW50ICsgJy0nICsgY2hhciwgZSk7XHJcblxyXG4gICAgICAgICAgaWYgKGV2ZW50LnNoaWZ0S2V5KSB0aGlzLnRyaWdnZXIoYCR7ZXZlbnR9LXNoaWZ0KyR7Y2hhcn1gLCBlKTtcclxuICAgICAgICAgIGlmIChldmVudC5jdHJsS2V5KSB0aGlzLnRyaWdnZXIoYCR7ZXZlbnR9LWN0cmwrJHtjaGFyfWAsIGUpO1xyXG4gICAgICAgICAgaWYgKGV2ZW50LmFsdEtleSkgdGhpcy50cmlnZ2VyKGAke2V2ZW50fS1hbHQrJHtjaGFyfWAsIGUpO1xyXG5cclxuICAgICAgICAgIGlmICgnMDEyMzQ1Njc4OScuaW5kZXhPZihjaGFyKSA+IC0xKSB7XHJcbiAgICAgICAgICAgIHRoaXMudHJpZ2dlcihldmVudCArICctYW55ZGlnaXQnLCBlKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChldmVudC5zaGlmdEtleSkgdGhpcy50cmlnZ2VyKGAke2V2ZW50fS1zaGlmdCthbnlkaWdpdGAsIGUpO1xyXG4gICAgICAgICAgICBpZiAoZXZlbnQuY3RybEtleSkgdGhpcy50cmlnZ2VyKGAke2V2ZW50fS1jdHJsK2FueWRpZ2l0YCwgZSk7XHJcbiAgICAgICAgICAgIGlmIChldmVudC5hbHRLZXkpIHRoaXMudHJpZ2dlcihgJHtldmVudH0tYWx0K2FueWRpZ2l0YCwgZSk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgaWYgKCdxd2VydHl1aW9wYXNkZmdoamtsenhjdmJubScuaW5kZXhPZihjaGFyKSA+IC0xKSB7XHJcbiAgICAgICAgICAgIHRoaXMudHJpZ2dlcihldmVudCArICctYW55bGV0dGVyJywgZSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoZXZlbnQuc2hpZnRLZXkpIHRoaXMudHJpZ2dlcihgJHtldmVudH0tc2hpZnQrYW55bGV0dGVyYCwgZSk7XHJcbiAgICAgICAgICAgIGlmIChldmVudC5jdHJsS2V5KSB0aGlzLnRyaWdnZXIoYCR7ZXZlbnR9LWN0cmwrYW55bGV0dGVyYCwgZSk7XHJcbiAgICAgICAgICAgIGlmIChldmVudC5hbHRLZXkpIHRoaXMudHJpZ2dlcihgJHtldmVudH0tYWx0K2FueWxldHRlcmAsIGUpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuICAgIH07XHJcblxyXG4gICAgdGhpcy5kb20ub24oJ2tleWRvd24uTm9kZScsIGtleUV2ZW50QnVpbGRlcigna2V5ZG93bicpKTtcclxuICAgIHRoaXMuZG9tLm9uKCdrZXl1cC5Ob2RlJywga2V5RXZlbnRCdWlsZGVyKCdrZXl1cCcpKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb259IGhhbmRsZXJcclxuICAgKi9cclxuICBfX2ZvckVhY2hPYnNlcnZlcnMoaGFuZGxlcikge1xyXG4gICAgZm9yIChsZXQgb2JzZXJ2ZXIgb2YgdGhpcy5fX29ic2VydmVycykge1xyXG4gICAgICBoYW5kbGVyKG9ic2VydmVyKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9fdHJpZ2dlclByb3BlcnR5Q2hhbmdlKG5hbWUsIG5ld1ZhbHVlKSB7XHJcbiAgICB0aGlzLl9fZm9yRWFjaE9ic2VydmVycyhvYnNlcnZlciA9PiB7XHJcbiAgICAgIGNvbnN0IG9sZFZhbHVlID0gdGhpc1tuYW1lXTtcclxuICAgICAgb2JzZXJ2ZXIudHJpZ2dlclByb3BlcnR5Q2hhbmdlKG5hbWUsIG9sZFZhbHVlLCBuZXdWYWx1ZSlcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybnMge3N0cmluZ31cclxuICAgKi9cclxuICBnZXQgdXVpZCgpIHtcclxuICAgIHJldHVybiB0aGlzLmRvbS5hdHRyKCd1dWlkJylcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxyXG4gICAqL1xyXG4gIHNldCB1dWlkKHZhbHVlKSB7XHJcbiAgICB0aGlzLmRvbS5yZW1vdmVDbGFzcyh0aGlzLnV1aWQpO1xyXG4gICAgdGhpcy5kb20uYXR0cigndXVpZCcsIHZhbHVlKTtcclxuICAgIHRoaXMuZG9tLmFkZENsYXNzKHZhbHVlKTtcclxuICB9XHJcblxyXG4gIGdldCBpZCgpIHtcclxuICAgIHJldHVybiB0aGlzLmRvbS5hdHRyKCdpZCcpXHJcbiAgfVxyXG5cclxuICBzZXQgaWQodmFsdWUpIHtcclxuICAgIHRoaXMuZG9tLmF0dHIoJ2lkJywgdmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybnMge0FycmF5fVxyXG4gICAqL1xyXG4gIGdldCBjbGFzc2VzKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZG9tLmRhdGEoJ2N1c3RvbS1jbGFzc2VzJykgfHwgW107XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge0FycmF5fSB2YWx1ZVxyXG4gICAqL1xyXG4gIHNldCBjbGFzc2VzKHZhbHVlKSB7XHJcbiAgICBjb25zdCBvbGRDbGFzc2VzID0gdGhpcy5jbGFzc2VzO1xyXG4gICAgbGV0IGNsYXNzZXMgPSBbXTtcclxuXHJcbiAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBcnJheSkge1xyXG4gICAgICBjbGFzc2VzID0gdmFsdWU7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjbGFzc2VzID0gdmFsdWUudG9TdHJpbmcoKS5zcGxpdCgnICcpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZG9tLmRhdGEoJ2N1c3RvbS1jbGFzc2VzJywgY2xhc3Nlcyk7XHJcblxyXG4gICAgaWYgKG9sZENsYXNzZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICB0aGlzLmRvbS5yZW1vdmVDbGFzcyhvbGRDbGFzc2VzLmpvaW4oJyAnKSk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5kb20uYWRkQ2xhc3MoY2xhc3Nlcy5qb2luKCcgJykpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHN0eWxlKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZG9tLmF0dHIoJ3N0eWxlJyk7XHJcbiAgfVxyXG5cclxuICBzZXQgc3R5bGUodmFsdWUpIHtcclxuICAgIHRoaXMuZG9tLmF0dHIoJ3N0eWxlJywgdmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHZpc2libGUoKSB7XHJcbiAgICBsZXQgZG9tID0gdGhpcy5kb207XHJcblxyXG4gICAgaWYgKHRoaXMuZG9tLmRhdGEoJy0td3JhcHBlci1kb20nKSkge1xyXG4gICAgICBkb20gPSB0aGlzLmRvbS5kYXRhKCctLXdyYXBwZXItZG9tJyk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGRvbS5pcygnOnZpc2libGUnKTtcclxuICB9XHJcblxyXG4gIHNldCB2aXNpYmxlKHZhbHVlKSB7XHJcbiAgICBpZiAodmFsdWUpIHtcclxuICAgICAgdGhpcy5zaG93KCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmhpZGUoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldCBvcGFjaXR5KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZG9tLmNzcygnb3BhY2l0eScpO1xyXG4gIH1cclxuXHJcbiAgc2V0IG9wYWNpdHkodmFsdWUpIHtcclxuICAgIHRoaXMuZG9tLmNzcygnb3BhY2l0eScsIHZhbHVlKTtcclxuICB9XHJcblxyXG4gIGdldCBlbmFibGVkKCkge1xyXG4gICAgcmV0dXJuICF0aGlzLmRvbS5wcm9wKFwiZGlzYWJsZWRcIik7XHJcbiAgfVxyXG5cclxuICBzZXQgZW5hYmxlZCh2YWx1ZSkge1xyXG4gICAgdGhpcy5kb20ucHJvcCgnZGlzYWJsZWQnLCAhdmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHNlbGVjdGlvbkVuYWJsZWQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5kb20uY3NzKCd1c2VyLXNlbGVjdCcpICE9PSAnbm9uZSc7XHJcbiAgfVxyXG5cclxuICBzZXQgc2VsZWN0aW9uRW5hYmxlZCh2YWx1ZSkge1xyXG4gICAgdGhpcy5kb20uY3NzKCd1c2VyLXNlbGVjdCcsIHZhbHVlID8gJycgOiAnbm9uZScpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGZvY3VzZWQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5kb20uaXMoJzpmb2N1cycpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHgoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5kb20ucG9zaXRpb24oKS5sZWZ0O1xyXG4gIH1cclxuXHJcbiAgc2V0IHgodmFsdWUpIHtcclxuICAgIHRoaXMuZG9tLmNzcyh7bGVmdDogdmFsdWV9KTtcclxuICB9XHJcblxyXG4gIGdldCB5KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZG9tLnBvc2l0aW9uKCkudG9wO1xyXG4gIH1cclxuXHJcbiAgc2V0IHkodmFsdWUpIHtcclxuICAgIHRoaXMuZG9tLmNzcyh7dG9wOiB2YWx1ZX0pO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHBvc2l0aW9uKCkge1xyXG4gICAgcmV0dXJuIFt0aGlzLngsIHRoaXMueV07XHJcbiAgfVxyXG5cclxuICBzZXQgcG9zaXRpb24odmFsdWUpIHtcclxuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFycmF5ICYmIHZhbHVlLmxlbmd0aCA+PSAyKSB7XHJcbiAgICAgIHRoaXMueCA9IHZhbHVlWzBdO1xyXG4gICAgICB0aGlzLnkgPSB2YWx1ZVsxXTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldCB3aWR0aCgpIHtcclxuICAgIGlmICh0aGlzLmRhdGEoJy0td2lkdGgtcGVyY2VudCcpKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmRhdGEoJy0td2lkdGgtcGVyY2VudCcpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzLmRvbS53aWR0aCgpXHJcbiAgfVxyXG5cclxuICBzZXQgd2lkdGgodmFsdWUpIHtcclxuICAgIHRoaXMuZG9tLndpZHRoKHZhbHVlKTtcclxuXHJcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZS5pbmRleE9mKCclJykgPiAtMSkge1xyXG4gICAgICB0aGlzLmRhdGEoJy0td2lkdGgtcGVyY2VudCcsIHZhbHVlKTtcclxuXHJcbiAgICAgIGNvbnN0IHdyYXBwZXJEb20gPSB0aGlzLmRvbS5kYXRhKCctLXdyYXBwZXItZG9tJyk7XHJcbiAgICAgIGlmICh3cmFwcGVyRG9tKSB7XHJcbiAgICAgICAgdGhpcy5kb20ud2lkdGgoJzEwMCUnKTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5kYXRhKCctLXdpZHRoLXBlcmNlbnQnLCBudWxsKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldCBoZWlnaHQoKSB7XHJcbiAgICBpZiAodGhpcy5kYXRhKCctLWhlaWdodC1wZXJjZW50JykpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuZGF0YSgnLS1oZWlnaHQtcGVyY2VudCcpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzLmRvbS5oZWlnaHQoKVxyXG4gIH1cclxuXHJcbiAgc2V0IGhlaWdodCh2YWx1ZSkge1xyXG4gICAgdGhpcy5kb20uaGVpZ2h0KHZhbHVlKTtcclxuXHJcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZS5pbmRleE9mKCclJykgPiAtMSkge1xyXG4gICAgICB0aGlzLmRhdGEoJy0taGVpZ2h0LXBlcmNlbnQnLCB2YWx1ZSk7XHJcblxyXG4gICAgICBjb25zdCB3cmFwcGVyRG9tID0gdGhpcy5kb20uZGF0YSgnLS13cmFwcGVyLWRvbScpO1xyXG4gICAgICBpZiAod3JhcHBlckRvbSkge1xyXG4gICAgICAgIHRoaXMuZG9tLmhlaWdodCgnMTAwJScpO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmRhdGEoJy0taGVpZ2h0LXBlcmNlbnQnLCBudWxsKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldCBzaXplKCkge1xyXG4gICAgcmV0dXJuIFt0aGlzLndpZHRoLCB0aGlzLmhlaWdodF1cclxuICB9XHJcblxyXG4gIHNldCBzaXplKHZhbHVlKSB7XHJcbiAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBcnJheSAmJiB2YWx1ZS5sZW5ndGggPj0gMikge1xyXG4gICAgICB0aGlzLndpZHRoID0gdmFsdWVbMF07XHJcbiAgICAgIHRoaXMuaGVpZ2h0ID0gdmFsdWVbMV07XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXQgdG9vbHRpcCgpIHtcclxuICAgIHJldHVybiB0aGlzLmRvbS5kYXRhKCd0b29sdGlwJyk7XHJcbiAgfVxyXG5cclxuICBfX3NldFRvb2x0aXAodG9vbHRpcCkge1xyXG4gICAgdGhpcy5kb20uZGF0YSgnLS10b29sdGlwJywgdG9vbHRpcCk7XHJcblxyXG4gICAgLyppZiAodGhpcy5kb20uZGF0YSgnYnMudG9vbHRpcCcpKSB7XHJcbiAgICAgIHRoaXMuZG9tLnRvb2x0aXAoJ2Rpc3Bvc2UnKTtcclxuICAgIH0qL1xyXG5cclxuICAgIGlmICh0b29sdGlwKSB7XHJcbiAgICAgIGNvbnN0IG9wdGlvbnMgPSBqUXVlcnkuZXh0ZW5kKHt9LFxyXG4gICAgICAgIHsgdGl0bGU6IHRvb2x0aXAgaW5zdGFuY2VvZiBOb2RlID8gdG9vbHRpcC5kb20gOiB0b29sdGlwIH0sXHJcbiAgICAgICAgdGhpcy50b29sdGlwT3B0aW9uc1xyXG4gICAgICApO1xyXG5cclxuICAgICAgdGhpcy5kb20udG9vbHRpcChvcHRpb25zKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldCB0b29sdGlwKHRvb2x0aXApIHtcclxuICAgIGlmICh0aGlzLnRvb2x0aXAgPT09IHRvb2x0aXApIHJldHVybjtcclxuXHJcbiAgICB0aGlzLl9fc2V0VG9vbHRpcCh0b29sdGlwKTtcclxuICB9XHJcblxyXG4gIGdldCB0b29sdGlwT3B0aW9ucygpIHtcclxuICAgIHJldHVybiB0aGlzLmRvbS5kYXRhKCctLXRvb2x0aXBPcHRpb25zJykgfHwge307XHJcbiAgfVxyXG5cclxuICBzZXQgdG9vbHRpcE9wdGlvbnMob3B0aW9ucykge1xyXG4gICAgdGhpcy5kb20uZGF0YSgnLS10b29sdGlwT3B0aW9ucycsIG9wdGlvbnMgfHwge30pO1xyXG4gICAgdGhpcy5fX3NldFRvb2x0aXAodGhpcy50b29sdGlwKTtcclxuICB9XHJcblxyXG4gIGdldCBwYWRkaW5nKCkge1xyXG4gICAgcmV0dXJuIFtcclxuICAgICAgVXRpbHMudG9QdCh0aGlzLmRvbS5jc3MoJ3BhZGRpbmctdG9wJykpLFxyXG4gICAgICBVdGlscy50b1B0KHRoaXMuZG9tLmNzcygncGFkZGluZy1yaWdodCcpKSxcclxuICAgICAgVXRpbHMudG9QdCh0aGlzLmRvbS5jc3MoJ3BhZGRpbmctYm90dG9tJykpLFxyXG4gICAgICBVdGlscy50b1B0KHRoaXMuZG9tLmNzcygncGFkZGluZy1sZWZ0JykpXHJcbiAgICBdO1xyXG4gIH1cclxuXHJcbiAgc2V0IHBhZGRpbmcodmFsdWUpIHtcclxuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFycmF5KSB7XHJcbiAgICAgIGlmICh2YWx1ZS5sZW5ndGggPj0gNCkge1xyXG4gICAgICAgIHRoaXMuZG9tLmNzcyh7XHJcbiAgICAgICAgICAncGFkZGluZy10b3AnOiB2YWx1ZVswXSwgJ3BhZGRpbmctcmlnaHQnOiB2YWx1ZVsxXSxcclxuICAgICAgICAgICdwYWRkaW5nLWJvdHRvbSc6IHZhbHVlWzJdLCAncGFkZGluZy1sZWZ0JzogdmFsdWVbM11cclxuICAgICAgICB9KTtcclxuICAgICAgfSBlbHNlIGlmICh2YWx1ZS5sZW5ndGggPj0gMikge1xyXG4gICAgICAgIHRoaXMuZG9tLmNzcyh7XHJcbiAgICAgICAgICAncGFkZGluZy10b3AnOiB2YWx1ZVswXSwgJ3BhZGRpbmctcmlnaHQnOiB2YWx1ZVsxXSxcclxuICAgICAgICAgICdwYWRkaW5nLWJvdHRvbSc6IHZhbHVlWzBdLCAncGFkZGluZy1sZWZ0JzogdmFsdWVbMV1cclxuICAgICAgICB9KTtcclxuICAgICAgfSBlbHNlIGlmICh2YWx1ZS5sZW5ndGggPj0gMSkge1xyXG4gICAgICAgIHRoaXMuZG9tLmNzcygncGFkZGluZycsIHZhbHVlWzBdKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLmRvbS5jc3MoJ3BhZGRpbmcnLCAwKTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5kb20uY3NzKCdwYWRkaW5nJywgdmFsdWUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZ2V0IGN1cnNvcigpIHtcclxuICAgIHJldHVybiB0aGlzLmRvbS5jc3MoJ2N1cnNvcicpO1xyXG4gIH1cclxuXHJcbiAgc2V0IGN1cnNvcih2YWx1ZSkge1xyXG4gICAgdGhpcy5kb20uY3NzKCdjdXJzb3InLCB2YWx1ZSk7XHJcbiAgfVxyXG5cclxuICBnZXQgcGFyZW50KCkge1xyXG4gICAgbGV0IHBhcmVudCA9IG51bGw7XHJcblxyXG4gICAgaWYgKHRoaXMuZG9tLmRhdGEoJy0td3JhcHBlci1kb20nKSkge1xyXG4gICAgICBwYXJlbnQgPSB0aGlzLmRvbS5kYXRhKCctLXdyYXBwZXItZG9tJykucGFyZW50KCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBwYXJlbnQgPSB0aGlzLmRvbS5wYXJlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoIXBhcmVudCkge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gTm9kZS5nZXRGcm9tRG9tKHBhcmVudCk7XHJcbiAgfVxyXG5cclxuICBnZXQgdXNlckRhdGEoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5kb20uZGF0YSgnLS11c2VyLWRhdGEnKTtcclxuICB9XHJcblxyXG4gIHNldCB1c2VyRGF0YSh2YWx1ZSkge1xyXG4gICAgdGhpcy5kb20uZGF0YSgnLS11c2VyLWRhdGEnLCB2YWx1ZSk7XHJcbiAgfVxyXG5cclxuICBjcmVhdGVEb20oKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgY2FsbCBhYnN0cmFjdCBtZXRob2QgY3JlYXRlRG9tKClcIik7XHJcbiAgfVxyXG5cclxuICByZXF1ZXN0Rm9jdXMoKSB7XHJcbiAgICB0aGlzLmZvY3VzKCk7XHJcbiAgfVxyXG5cclxuICByZWxvY2F0ZSh4LCB5KSB7XHJcbiAgICB0aGlzLnBvc2l0aW9uID0gW3gsIHldO1xyXG4gIH1cclxuXHJcbiAgcmVzaXplKHdpZHRoLCBoZWlnaHQpIHtcclxuICAgIHRoaXMuc2l6ZSA9IFt3aWR0aCwgaGVpZ2h0XTtcclxuICB9XHJcblxyXG4gIGZvY3VzKCkge1xyXG4gICAgdGhpcy5kb20uZm9jdXMoKTtcclxuICB9XHJcblxyXG4gIGNzcyh2YWx1ZSkge1xyXG4gICAgcmV0dXJuIHRoaXMuZG9tLmNzcyguLi5hcmd1bWVudHMpO1xyXG4gIH1cclxuXHJcbiAgZGF0YShwYXJhbXMpIHtcclxuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmRvbS5kYXRhKC4uLmFyZ3VtZW50cyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmRvbS5kYXRhKC4uLmFyZ3VtZW50cyk7XHJcbiAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgbG9va3VwKHNlbGVjdG9yKSB7XHJcbiAgICBjb25zdCBkb20gPSB0aGlzLmRvbS5maW5kKHNlbGVjdG9yKS5maXJzdCgpO1xyXG5cclxuICAgIGlmIChkb20pIHtcclxuICAgICAgcmV0dXJuIE5vZGUuZ2V0RnJvbURvbShkb20pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxuXHJcbiAgbG9va3VwQWxsKHNlbGVjdG9yKSB7XHJcbiAgICBjb25zdCBub2RlcyA9IFtdO1xyXG5cclxuICAgIHRoaXMuZG9tLmZpbmQoc2VsZWN0b3IpLmVhY2goKCkgPT4ge1xyXG4gICAgICBub2Rlcy5wdXNoKE5vZGUuZ2V0RnJvbURvbSh0aGlzKSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gbm9kZXM7XHJcbiAgfVxyXG5cclxuICB0b0Zyb250KCkge1xyXG4gICAgY29uc3QgcGFyZW50ID0gdGhpcy5wYXJlbnQ7XHJcblxyXG4gICAgaWYgKHBhcmVudCkge1xyXG4gICAgICBpZiAocGFyZW50WydjaGlsZFRvRnJvbnQnXSkge1xyXG4gICAgICAgIHBhcmVudC5jaGlsZFRvRnJvbnQodGhpcyk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIHRvQmFjaygpIHtcclxuICAgIGNvbnN0IHBhcmVudCA9IHRoaXMucGFyZW50O1xyXG5cclxuICAgIGlmIChwYXJlbnQpIHtcclxuICAgICAgaWYgKHBhcmVudFsnY2hpbGRUb0JhY2snXSkge1xyXG4gICAgICAgIHBhcmVudC5jaGlsZFRvQmFjayh0aGlzKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnJlZSgpIHtcclxuICAgIGNvbnN0IHdyYXBwZXJEb20gPSB0aGlzLmRvbS5kYXRhKCctLXdyYXBwZXItZG9tJyk7XHJcblxyXG4gICAgaWYgKHdyYXBwZXJEb20pIHtcclxuICAgICAgd3JhcHBlckRvbS5yZW1vdmUoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuZG9tLmRldGFjaCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgc2hvdygpIHtcclxuICAgIGxldCBkb20gPSB0aGlzLmRvbTtcclxuICAgIGRvbS5jc3MoJ2Rpc3BsYXknLCAnJyk7XHJcblxyXG4gICAgaWYgKHRoaXMuZG9tLmRhdGEoJy0td3JhcHBlci1kb20nKSkge1xyXG4gICAgICBkb20gPSB0aGlzLmRvbS5kYXRhKCctLXdyYXBwZXItZG9tJyk7XHJcbiAgICAgIGRvbS5jc3MoJ2Rpc3BsYXknLCAnJyk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICBoaWRlKCkge1xyXG4gICAgbGV0IGRvbSA9IHRoaXMuZG9tO1xyXG4gICAgZG9tLmhpZGUoKTtcclxuXHJcbiAgICBpZiAodGhpcy5kb20uZGF0YSgnLS13cmFwcGVyLWRvbScpKSB7XHJcbiAgICAgIGRvbSA9IHRoaXMuZG9tLmRhdGEoJy0td3JhcHBlci1kb20nKTtcclxuICAgICAgZG9tLmhpZGUoKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIHRvZ2dsZSgpIHtcclxuICAgIGlmICh0aGlzLnZpc2libGUpIHtcclxuICAgICAgdGhpcy5zaG93KCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmhpZGUoKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBwcm9wZXJ0aWVzXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnNcclxuICAgKi9cclxuICBhbmltYXRlKHByb3BlcnRpZXMsIG9wdGlvbnMpIHtcclxuICAgIHRoaXMuZG9tLmFuaW1hdGUocHJvcGVydGllcywgb3B0aW9ucyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTdG9wIGFuaW1hdGlvbi5cclxuICAgKi9cclxuICBzdG9wQWxsQW5pbWF0ZShjbGVhclF1ZXVlLCBqdW1wVG9FbmQsIGNhbGxiYWNrKSB7XHJcbiAgICB0aGlzLmRvbS5zdG9wKGNsZWFyUXVldWUsIGp1bXBUb0VuZCk7XHJcblxyXG4gICAgaWYgKGNhbGxiYWNrKSB7XHJcbiAgICAgIGNhbGxiYWNrKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTdG9wIGFuaW1hdGlvbiBieSBxdWV1ZS5cclxuICAgKiBAcGFyYW0gcXVldWVcclxuICAgKiBAcGFyYW0gY2xlYXJRdWV1ZVxyXG4gICAqIEBwYXJhbSBqdW1wVG9FbmRcclxuICAgKi9cclxuICBzdG9wQW5pbWF0ZShxdWV1ZSwgY2xlYXJRdWV1ZSwganVtcFRvRW5kLCBjYWxsYmFjaykge1xyXG4gICAgdGhpcy5kb20uc3RvcChxdWV1ZSwgY2xlYXJRdWV1ZSwganVtcFRvRW5kKTtcclxuXHJcbiAgICBpZiAoY2FsbGJhY2spIHtcclxuICAgICAgY2FsbGJhY2soKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG9uKGV2ZW50LCBjYWxsYmFjaykge1xyXG4gICAgdGhpcy5kb20ub24oZXZlbnQsIChldmVudCkgPT4ge1xyXG4gICAgICBldmVudC5zZW5kZXIgPSB0aGlzO1xyXG4gICAgICBjYWxsYmFjay5jYWxsKHRoaXMsIGV2ZW50KTtcclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50XHJcbiAgICogQHJldHVybnMge05vZGV9XHJcbiAgICovXHJcbiAgb2ZmKGV2ZW50KSB7XHJcbiAgICB0aGlzLmRvbS5vZmYoZXZlbnQpO1xyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXZlbnRcclxuICAgKiBAcGFyYW0gcGFyYW1zXHJcbiAgICogQHJldHVybnMgeyp9XHJcbiAgICovXHJcbiAgdHJpZ2dlcihldmVudCwgcGFyYW1zKSB7XHJcbiAgICByZXR1cm4gdGhpcy5kb20udHJpZ2dlcihldmVudCwgcGFyYW1zKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpZFxyXG4gICAqIEByZXR1cm5zIHtOb2RlfVxyXG4gICAqL1xyXG4gIGNoaWxkKGlkKSB7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJldHVybnMgaW5uZXIgTm9kZXMgYXMgYXJyYXkuXHJcbiAgICogQHJldHVybnMge0FycmF5fVxyXG4gICAqL1xyXG4gIGlubmVyTm9kZXMoKSB7XHJcbiAgICByZXR1cm4gW107XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0gb2JqZWN0XHJcbiAgICovXHJcbiAgbG9hZFNjaGVtYShvYmplY3QpIHtcclxuICAgIGZvciAoY29uc3QgcHJvcCBpbiBvYmplY3QpIHtcclxuICAgICAgaWYgKG9iamVjdC5oYXNPd25Qcm9wZXJ0eShwcm9wKSkge1xyXG4gICAgICAgIGlmIChwcm9wWzBdID09PSAnXycpIHtcclxuICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IHZhbHVlID0gb2JqZWN0W3Byb3BdO1xyXG5cclxuICAgICAgICBpZiAodmFsdWUuaGFzT3duUHJvcGVydHkoJ18nKSkge1xyXG4gICAgICAgICAgY29uc3QgdWlMb2FkZXIgPSBuZXcgVUlMb2FkZXIoKTtcclxuICAgICAgICAgIHZhbHVlID0gdWlMb2FkZXIubG9hZCh2YWx1ZSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBzd2l0Y2ggKHByb3ApIHtcclxuICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgIHRoaXNbcHJvcF0gPSB2YWx1ZTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKG9iamVjdC5jbGFzc2VzKSB7XHJcbiAgICAgIHRoaXMuY2xhc3NlcyA9IG9iamVjdC5jbGFzc2VzO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGdldEZyb21Eb20oanF1ZXJ5T2JqZWN0KSB7XHJcbiAgICBpZiAoanF1ZXJ5T2JqZWN0ID09PSBudWxsIHx8IGpxdWVyeU9iamVjdC5sZW5ndGggPT09IDApIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGpxdWVyeU9iamVjdCBpbnN0YW5jZW9mIGpRdWVyeSkge1xyXG4gICAgICBsZXQgd3JhcHBlciA9IGpxdWVyeU9iamVjdC5kYXRhKCctLXdyYXBwZXInKTtcclxuICAgICAgcmV0dXJuIHdyYXBwZXIgPyB3cmFwcGVyIDogbmV3IE5vZGUoanF1ZXJ5T2JqZWN0KTtcclxuICAgIH1cclxuXHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb2RlLmdldEZyb21Eb20oKTogMSBhcmd1bWVudCBtdXN0IGJlIGFuIGpRdWVyeSBvYmplY3RcIik7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBOb2RlO1xyXG4iLCJpbXBvcnQgVGV4dElucHV0Q29udHJvbCBmcm9tICcuL1RleHRJbnB1dENvbnRyb2wnO1xyXG5cclxuY2xhc3MgUGFzc3dvcmRGaWVsZCBleHRlbmRzIFRleHRJbnB1dENvbnRyb2wge1xyXG4gIGNyZWF0ZURvbSgpIHtcclxuICAgIHZhciBkb20gPSBqUXVlcnkoJzxpbnB1dCB0eXBlPVwicGFzc3dvcmRcIiBjbGFzcz1cImZvcm0tY29udHJvbCB1eC10ZXh0LWlucHV0LWNvbnRyb2wgdXgtcGFzc3dvcmQtZmllbGRcIiAvPicpO1xyXG4gICAgcmV0dXJuIGRvbTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBhc3N3b3JkRmllbGQ7XHJcbiIsImltcG9ydCBOb2RlIGZyb20gJy4vTm9kZSc7XHJcbmltcG9ydCBVdGlscyBmcm9tICcuL3V0aWwvVXRpbHMnO1xyXG5cclxuY2xhc3MgUHJvZ3Jlc3NCYXIgZXh0ZW5kcyBOb2RlIHtcclxuICBnZXQgcHJvZ3Jlc3MoKSB7XHJcbiAgICByZXR1cm4gVXRpbHMudG9QdCh0aGlzLmRvbS5maW5kKCc+IC5wcm9ncmVzcy1iYXInKS5jc3MoJ3dpZHRoJykpO1xyXG4gIH1cclxuXHJcbiAgc2V0IHByb2dyZXNzKHZhbHVlKSB7XHJcbiAgICB0aGlzLmRvbS5maW5kKCc+IC5wcm9ncmVzcy1iYXInKS5jc3MoJ3dpZHRoJywgdmFsdWUgKyAnJScpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGtpbmQoKSB7XHJcbiAgICBjb25zdCBkb20gPSB0aGlzLmRvbS5maW5kKCc+IC5wcm9ncmVzcy1iYXInKTtcclxuXHJcbiAgICBpZiAoZG9tLmhhc0NsYXNzKCdwcm9ncmVzcy1iYXItc3VjY2VzcycpKSB7XHJcbiAgICAgIHJldHVybiAnc3VjY2Vzcyc7XHJcbiAgICB9IGVsc2UgaWYgKGRvbS5oYXNDbGFzcygncHJvZ3Jlc3MtYmFyLWluZm8nKSkge1xyXG4gICAgICByZXR1cm4gJ2luZm8nO1xyXG4gICAgfSBlbHNlIGlmIChkb20uaGFzQ2xhc3MoJ3Byb2dyZXNzLWJhci13YXJuaW5nJykpIHtcclxuICAgICAgcmV0dXJuICd3YXJuaW5nJztcclxuICAgIH0gZWxzZSBpZiAoZG9tLmhhc0NsYXNzKCdwcm9ncmVzcy1iYXItZGFuZ2VyJykpIHtcclxuICAgICAgcmV0dXJuICdkYW5nZXInO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAnZGVmYXVsdCc7XHJcbiAgfVxyXG5cclxuICBzZXQga2luZCh2YWx1ZSkge1xyXG4gICAgY29uc3QgZG9tID0gdGhpcy5kb20uZmluZCgnPiAucHJvZ3Jlc3MtYmFyJyk7XHJcbiAgICBcclxuICAgIGRvbS5yZW1vdmVDbGFzcyhgcHJvZ3Jlc3MtYmFyLSR7dGhpcy5raW5kfWApO1xyXG4gICAgZG9tLmFkZENsYXNzKGBwcm9ncmVzcy1iYXItJHt2YWx1ZX1gKTtcclxuICB9XHJcblxyXG4gIGdldCBhbmltYXRlZCgpIHtcclxuICAgIGNvbnN0IGRvbSA9IHRoaXMuZG9tLmZpbmQoJz4gLnByb2dyZXNzLWJhcicpO1xyXG4gICAgcmV0dXJuIGRvbS5oYXNDbGFzcygnYWN0aXZlJyk7XHJcbiAgfVxyXG5cclxuICBzZXQgYW5pbWF0ZWQodmFsdWUpIHtcclxuICAgIGNvbnN0IGRvbSA9IHRoaXMuZG9tLmZpbmQoJz4gLnByb2dyZXNzLWJhcicpO1xyXG5cclxuICAgIGlmICh2YWx1ZSkge1xyXG4gICAgICBkb20uYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgZG9tLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldCBzdHJpcGVkKCkge1xyXG4gICAgY29uc3QgZG9tID0gdGhpcy5kb20uZmluZCgnPiAucHJvZ3Jlc3MtYmFyJyk7XHJcbiAgICByZXR1cm4gZG9tLmhhc0NsYXNzKCdwcm9ncmVzcy1iYXItc3RyaXBlZCcpO1xyXG4gIH1cclxuXHJcbiAgc2V0IHN0cmlwZWQodmFsdWUpIHtcclxuICAgIGNvbnN0IGRvbSA9IHRoaXMuZG9tLmZpbmQoJz4gLnByb2dyZXNzLWJhcicpO1xyXG5cclxuICAgIGlmICh2YWx1ZSkge1xyXG4gICAgICBkb20uYWRkQ2xhc3MoJ3Byb2dyZXNzLWJhci1zdHJpcGVkJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBkb20ucmVtb3ZlQ2xhc3MoJ3Byb2dyZXNzLWJhci1zdHJpcGVkJyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXQgdmFsdWUoKSB7XHJcbiAgICBsZXQgd2lkdGggPSB0aGlzLmRvbS5maW5kKCc+IC5wcm9ncmVzcy1iYXInKS5jc3MoJ3dpZHRoJyk7XHJcblxyXG4gICAgaWYgKCF3aWR0aCkge1xyXG4gICAgICByZXR1cm4gMDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcGFyc2VJbnQod2lkdGgpO1xyXG4gIH1cclxuXHJcbiAgc2V0IHZhbHVlKHYpIHtcclxuICAgIHRoaXMuZG9tLmZpbmQoJz4gLnByb2dyZXNzLWJhcicpLmNzcygnd2lkdGgnLCB2ICsgXCIlXCIpO1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlRG9tKCkge1xyXG4gICAgY29uc3QgZG9tID0galF1ZXJ5KCc8ZGl2IGNsYXNzPVwicHJvZ3Jlc3MgdXgtcHJvZ3Jlc3MtYmFyXCI+PGRpdiBjbGFzcz1cInByb2dyZXNzLWJhclwiIHJvbGU9XCJwcm9ncmVzc2JhclwiPjwvZGl2PjwvZGl2PicpO1xyXG5cclxuICAgIHJldHVybiBkb207XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQcm9ncmVzc0JhcjtcclxuIiwiaW1wb3J0IE5vZGUgZnJvbSAnLi9Ob2RlJztcclxuaW1wb3J0IEFwcE1lZGlhdG9yIGZyb20gJy4uL05YL0FwcE1lZGlhdG9yJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlbGVjdENvbnRyb2wgZXh0ZW5kcyBOb2RlIHtcclxuICBjb25zdHJ1Y3RvcihpdGVtcykge1xyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICBpZiAoaXRlbXMpIHtcclxuICAgICAgdGhpcy5pdGVtcyA9IGl0ZW1zO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZG9tLm9uKCdjaGFuZ2UuU2VsZWN0Q29udHJvbCcsIChlKSA9PiB7XHJcbiAgICAgIEFwcE1lZGlhdG9yLnNlbmRVc2VySW5wdXQodGhpcywge3NlbGVjdGVkOiB0aGlzLnNlbGVjdGVkLCBzZWxlY3RlZFRleHQ6IHRoaXMuc2VsZWN0ZWRUZXh0fSwgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMudHJpZ2dlcignYWN0aW9uJywgZSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBnZXQgaXRlbXMoKSB7XHJcbiAgICBjb25zdCByZXN1bHQgPSB7fTtcclxuXHJcbiAgICB0aGlzLmRvbS5maW5kKCdvcHRpb24nKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgcmVzdWx0W2pRdWVyeSh0aGlzKS5hdHRyKCd2YWx1ZScpXSA9IGpRdWVyeSh0aGlzKS50ZXh0KCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH1cclxuXHJcbiAgc2V0IGl0ZW1zKHZhbHVlKSB7XHJcbiAgICB0aGlzLmRvbS5maW5kKCdvcHRpb24nKS5yZW1vdmUoKTtcclxuXHJcbiAgICBmb3IgKGNvbnN0IGtleSBpbiB2YWx1ZSkge1xyXG4gICAgICBpZiAodmFsdWUuaGFzT3duUHJvcGVydHkoa2V5KSkge1xyXG4gICAgICAgIHRoaXMuZG9tLmFwcGVuZChqUXVlcnkoYDxvcHRpb24gdmFsdWU9JyR7a2V5fSc+JHt2YWx1ZVtrZXldfTwvb3B0aW9uPmApKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZ2V0IHNlbGVjdGVkKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZG9tLnZhbCgpO1xyXG4gIH1cclxuXHJcbiAgc2V0IHNlbGVjdGVkKHZhbHVlKSB7XHJcbiAgICB0aGlzLmRvbS52YWwodmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHNlbGVjdGVkVGV4dCgpIHtcclxuICAgIHJldHVybiB0aGlzLmRvbS5maW5kKCdvcHRpb246c2VsZWN0ZWQnKS50ZXh0KCk7XHJcbiAgfVxyXG5cclxuICBzZXQgc2VsZWN0ZWRUZXh0KHZhbHVlKSB7XHJcbiAgICB0aGlzLnNlbGVjdGVkID0gbnVsbDtcclxuXHJcbiAgICB0aGlzLmRvbS5maW5kKCdvcHRpb24nKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgaWYgKGpRdWVyeSh0aGlzKS50ZXh0KCkgPT09IHZhbHVlKSB7XHJcbiAgICAgICAgalF1ZXJ5KHRoaXMpLnByb3AoJ3NlbGVjdGVkJywgdHJ1ZSk7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG5cclxuICBsb2FkU2NoZW1hKG9iamVjdCkge1xyXG4gICAgc3VwZXIubG9hZFNjaGVtYShvYmplY3QpO1xyXG5cclxuICAgIGlmIChvYmplY3QuaGFzT3duUHJvcGVydHkoJ3NlbGVjdGVkJykpIHtcclxuICAgICAgdGhpcy5zZWxlY3RlZCA9IG9iamVjdC5zZWxlY3RlZDtcclxuICAgIH1cclxuXHJcbiAgICBpZiAob2JqZWN0Lmhhc093blByb3BlcnR5KCdzZWxlY3RlZFRleHQnKSkge1xyXG4gICAgICB0aGlzLnNlbGVjdGVkVGV4dCA9IG9iamVjdC5zZWxlY3RlZFRleHQ7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjcmVhdGVEb20oKSB7XHJcbiAgICBjb25zdCBkb20gPSBqUXVlcnkoJzxzZWxlY3QgY2xhc3M9XCJmb3JtLWNvbnRyb2wgdXgtc2VsZWN0LWNvbnRyb2xcIj4nKTtcclxuICAgIHJldHVybiBkb207XHJcbiAgfVxyXG59XHJcbiIsIlxyXG5pbXBvcnQgQ2hlY2tib3ggZnJvbSBcIi4vQ2hlY2tib3hcIjtcclxuaW1wb3J0IEFwcE1lZGlhdG9yIGZyb20gXCIuLi9OWC9BcHBNZWRpYXRvclwiO1xyXG5pbXBvcnQgVXRpbHMgZnJvbSBcIi4vdXRpbC9VdGlsc1wiO1xyXG5cclxuY29uc3QgS0lORFMgPSBbXHJcbiAgJ3N1Y2Nlc3MnLCAncHJpbWFyeScsICdzZWNvbmRhcnknLCAnaW5mbycsICd3YXJuaW5nJywgJ2RhbmdlcicsICdsaW5rJywgJ2RhcmsnLCAnbGlnaHQnXHJcbl07XHJcblxyXG5jbGFzcyBTd2l0Y2ggZXh0ZW5kcyBDaGVja2JveCB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoKTtcclxuICB9XHJcblxyXG4gIGdldCBpY29uU2l6ZSgpIHtcclxuICAgIHJldHVybiBVdGlscy50b1B0KHRoaXMuZG9tLmZpbmQoJ2xhYmVsJykuY3NzKCdmb250LXNpemUnKSk7XHJcbiAgfVxyXG5cclxuICBzZXQgaWNvblNpemUodmFsdWUpIHtcclxuICAgIGNvbnN0IGRvbSA9IHRoaXMuZG9tLmZpbmQoJ2xhYmVsJyk7XHJcbiAgICBkb20uY3NzKCdmb250LXNpemUnLCB2YWx1ZSk7XHJcblxyXG4gICAgY29uc3QgbGFiZWxlZCA9IHRoaXMuZG9tLmZpbmQoJy51eC1sYWJlbGVkLXRleHQnKTtcclxuXHJcbiAgICBpZiAodGhpcy5pY29uRGlzcGxheSA9PT0gJ2xlZnQnKSB7XHJcbiAgICAgIGxhYmVsZWQuY3NzKCdwYWRkaW5nLWxlZnQnLCB2YWx1ZSAqIDIuNSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBsYWJlbGVkLmNzcygncGFkZGluZy1sZWZ0JywgJycpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0IGtpbmQodmFsdWUpIHtcclxuICAgIGlmICghdmFsdWUpIHtcclxuICAgICAgdmFsdWUgPSAnZGVmYXVsdCc7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgZG9tID0gdGhpcy5kb20uZmluZCgnbGFiZWwnKTtcclxuXHJcbiAgICBkb20ucmVtb3ZlQ2xhc3MoYGJhZGdlLSR7dGhpcy5raW5kfWApO1xyXG5cclxuICAgIGlmICh2YWx1ZSkge1xyXG4gICAgICBkb20uYWRkQ2xhc3MoYGJhZGdlLSR7dmFsdWV9YCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXQga2luZCgpIHtcclxuICAgIGNvbnN0IGRvbSA9IHRoaXMuZG9tLmZpbmQoJ2xhYmVsJyk7XHJcblxyXG4gICAgZm9yIChsZXQga2luZCBvZiBLSU5EUykge1xyXG4gICAgICBpZiAoZG9tLmhhc0NsYXNzKGBiYWRnZS0ke2tpbmR9YCkpIHtcclxuICAgICAgICByZXR1cm4ga2luZDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAnZGVmYXVsdCc7XHJcbiAgfVxyXG5cclxuICBnZXQgaWNvbkdhcCgpIHtcclxuICAgIGNvbnN0IGxhYmVsZWQgPSB0aGlzLmRvbS5maW5kKCcudXgtbGFiZWxlZC10ZXh0Jyk7XHJcbiAgICBzd2l0Y2ggKHRoaXMuaWNvbkRpc3BsYXkpIHtcclxuICAgICAgY2FzZSAnbGVmdCc6IHJldHVybiBVdGlscy50b1B0KGxhYmVsZWQuY3NzKCdtYXJnaW4tbGVmdCcpKTtcclxuICAgICAgY2FzZSAncmlnaHQnOiByZXR1cm4gVXRpbHMudG9QdChsYWJlbGVkLmNzcygnbWFyZ2luLXJpZ2h0JykpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAwO1xyXG4gIH1cclxuXHJcbiAgc2V0IGljb25HYXAodmFsdWUpIHtcclxuICAgIGNvbnN0IGxhYmVsZWQgPSB0aGlzLmRvbS5maW5kKCcudXgtbGFiZWxlZC10ZXh0Jyk7XHJcbiAgICBsYWJlbGVkLmNzcygnbWFyZ2luLXJpZ2h0JywgJycpO1xyXG4gICAgbGFiZWxlZC5jc3MoJ21hcmdpbi1sZWZ0JywgJycpO1xyXG4gICAgbGFiZWxlZC5jc3MoJ3BhZGRpbmctbGVmdCcsICcnKTtcclxuXHJcbiAgICBzd2l0Y2ggKHRoaXMuaWNvbkRpc3BsYXkpIHtcclxuICAgICAgY2FzZSAnbGVmdCc6XHJcbiAgICAgICAgbGFiZWxlZC5jc3MoJ21hcmdpbi1sZWZ0JywgdmFsdWUpO1xyXG4gICAgICAgIGxhYmVsZWQuY3NzKCdwYWRkaW5nLWxlZnQnLCB0aGlzLmljb25TaXplICogMi41KTtcclxuICAgICAgICBicmVhaztcclxuXHJcbiAgICAgIGNhc2UgJ3JpZ2h0JzpcclxuICAgICAgICBsYWJlbGVkLmNzcygnbWFyZ2luLXJpZ2h0JywgdmFsdWUpOyBicmVhaztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldCBpY29uRGlzcGxheSgpIHtcclxuICAgIGlmICh0aGlzLmRvbS5maW5kKCc+ICo6Zmlyc3QnKS5oYXNDbGFzcygndXgtbGFiZWxlZC10ZXh0JykpIHtcclxuICAgICAgcmV0dXJuICdyaWdodCc7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gJ2xlZnQnO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0IGljb25EaXNwbGF5KHZhbHVlKSB7XHJcbiAgICBpZiAodGhpcy5pY29uRGlzcGxheSA9PT0gdmFsdWUpIHJldHVybjtcclxuXHJcbiAgICBjb25zdCBnYXAgPSB0aGlzLmljb25HYXA7XHJcblxyXG4gICAgY29uc3QgY2hlY2tib3ggPSB0aGlzLmRvbS5maW5kKCdpbnB1dFt0eXBlPWNoZWNrYm94XScpO1xyXG4gICAgY29uc3QgbGFiZWwgPSB0aGlzLmRvbS5maW5kKCdsYWJlbCcpO1xyXG4gICAgbGFiZWwucmVtb3ZlKCk7XHJcbiAgICBjaGVja2JveC5yZW1vdmUoKTtcclxuXHJcbiAgICBsZXQgbGFiZWxlZCA9IHRoaXMuZG9tLmZpbmQoJy51eC1sYWJlbGVkLXRleHQnKTtcclxuXHJcbiAgICBzd2l0Y2ggKHZhbHVlKSB7XHJcbiAgICAgIGNhc2UgXCJyaWdodFwiOlxyXG4gICAgICAgIGxhYmVsLmluc2VydEFmdGVyKGxhYmVsZWQpO1xyXG4gICAgICAgIGNoZWNrYm94Lmluc2VydEFmdGVyKGxhYmVsZWQpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIFwibGVmdFwiOlxyXG4gICAgICAgIGNoZWNrYm94Lmluc2VydEJlZm9yZShsYWJlbGVkKTtcclxuICAgICAgICBsYWJlbC5pbnNlcnRCZWZvcmUobGFiZWxlZCk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5pY29uR2FwID0gZ2FwO1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlRG9tKCkge1xyXG4gICAgY29uc3QgZG9tID0galF1ZXJ5KCc8c3Bhbj48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgLz48bGFiZWwgY2xhc3M9XCJiYWRnZS1kZWZhdWx0XCI+PC9sYWJlbD48c3BhbiBjbGFzcz1cInV4LWxhYmVsZWQtdGV4dFwiPjwvc3Bhbj48L3NwYW4+Jyk7XHJcbiAgICBkb20uYWRkQ2xhc3MoJ3V4LWxhYmVsZWQnKTtcclxuICAgIGRvbS5hZGRDbGFzcygndXgtc3dpdGNoJyk7XHJcblxyXG5cclxuICAgIGRvbS5vbignY2xpY2suU3dpdGNoJywgKGUpID0+IHtcclxuICAgICAgY29uc3QgY2hlY2tib3ggPSBkb20uZmluZCgnaW5wdXRbdHlwZT1jaGVja2JveF0nKTtcclxuXHJcbiAgICAgIGlmICghY2hlY2tib3gucHJvcCgnZGlzYWJsZWQnKSkge1xyXG4gICAgICAgIGNoZWNrYm94LnByb3AoJ2NoZWNrZWQnLCAhY2hlY2tib3gucHJvcCgnY2hlY2tlZCcpKTtcclxuXHJcbiAgICAgICAgQXBwTWVkaWF0b3Iuc2VuZFVzZXJJbnB1dCh0aGlzLCB7c2VsZWN0ZWQ6IHRoaXMuc2VsZWN0ZWR9LCAoKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLnRyaWdnZXIoJ2FjdGlvbicsIGUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gZG9tO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgU3dpdGNoOyIsImltcG9ydCBUZXh0SW5wdXRDb250cm9sIGZyb20gJy4vVGV4dElucHV0Q29udHJvbCc7XHJcblxyXG5jbGFzcyBUZXh0QXJlYSBleHRlbmRzIFRleHRJbnB1dENvbnRyb2wge1xyXG5cclxuICBnZXQgd3JhcCgpIHtcclxuICAgIHJldHVybiB0aGlzLmRvbS5hdHRyKCd3cmFwJyk7XHJcbiAgfVxyXG5cclxuICBzZXQgd3JhcCh2YWx1ZSkge1xyXG4gICAgdGhpcy5kb20uYXR0cignd3JhcCcsIHZhbHVlKTtcclxuICB9XHJcblxyXG4gIGNyZWF0ZURvbSgpIHtcclxuICAgIHZhciBkb20gPSBqUXVlcnkoJzx0ZXh0YXJlYSBjbGFzcz1cImZvcm0tY29udHJvbCB1eC10ZXh0LWlucHV0LWNvbnRyb2wgdXgtdGV4dC1hcmVhXCIgLz4nKTtcclxuICAgIHJldHVybiBkb207XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUZXh0QXJlYTtcclxuIiwiaW1wb3J0IFRleHRJbnB1dENvbnRyb2wgZnJvbSAnLi9UZXh0SW5wdXRDb250cm9sJztcclxuXHJcbmNsYXNzIFRleHRGaWVsZCBleHRlbmRzIFRleHRJbnB1dENvbnRyb2wge1xyXG4gIGNyZWF0ZURvbSgpIHtcclxuICAgIGNvbnN0IGRvbSA9IGpRdWVyeSgnPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJmb3JtLWNvbnRyb2wgdXgtdGV4dC1pbnB1dC1jb250cm9sIHV4LXRleHQtZmllbGRcIiAvPicpO1xyXG4gICAgcmV0dXJuIGRvbTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRleHRGaWVsZDtcclxuIiwiaW1wb3J0IE5vZGUgZnJvbSAnLi9Ob2RlJztcclxuaW1wb3J0IEFwcE1lZGlhdG9yIGZyb20gJy4uL05YL0FwcE1lZGlhdG9yJztcclxuaW1wb3J0IEZvbnQgZnJvbSBcIi4vcGFpbnQvRm9udFwiO1xyXG5cclxuY2xhc3MgVGV4dElucHV0Q29udHJvbCBleHRlbmRzIE5vZGUge1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICB0aGlzLmRvbS5vbigna2V5ZG93bi5UZXh0SW5wdXRDb250cm9sJywgKGUpID0+IHtcclxuICAgICAgICBBcHBNZWRpYXRvci5zZW5kVXNlcklucHV0KHRoaXMsICgpID0+IHtcclxuICAgICAgICAgIHJldHVybiB7IHRleHQ6IHRoaXMudGV4dCB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGdldCBwbGFjZWhvbGRlcigpIHtcclxuICAgIHJldHVybiB0aGlzLmRvbS5hdHRyKCdwbGFjZWhvbGRlcicpO1xyXG4gIH1cclxuXHJcbiAgc2V0IHBsYWNlaG9sZGVyKHZhbHVlKSB7XHJcbiAgICB0aGlzLmRvbS5hdHRyKCdwbGFjZWhvbGRlcicsIHZhbHVlKTtcclxuICB9XHJcblxyXG4gIGdldCBlZGl0YWJsZSgpIHtcclxuICAgIHJldHVybiAhdGhpcy5kb20ucHJvcCgncmVhZG9ubHknKTtcclxuICB9XHJcblxyXG4gIHNldCBlZGl0YWJsZSh2YWx1ZSkge1xyXG4gICAgdGhpcy5kb20ucHJvcCgncmVhZG9ubHknLCAhdmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHRleHRBbGlnbigpIHtcclxuICAgIHJldHVybiB0aGlkLmRvbS5jc3MoJ3RleHQtYWxnaW4nKTtcclxuICB9XHJcblxyXG4gIHNldCB0ZXh0QWxpZ24odmFsdWUpIHtcclxuICAgIHRoaXMuZG9tLmNzcygndGV4dC1hbGdpbicsIHZhbHVlKTtcclxuICB9XHJcblxyXG4gIGdldCBmb250KCkge1xyXG4gICAgcmV0dXJuIEZvbnQuZ2V0RnJvbURvbSh0aGlzLmRvbSk7XHJcbiAgfVxyXG5cclxuICBzZXQgZm9udCh2YWx1ZSkge1xyXG4gICAgRm9udC5hcHBseVRvRG9tKHRoaXMuZG9tLCB2YWx1ZSk7XHJcbiAgfVxyXG5cclxuICBnZXQgdGV4dCgpIHtcclxuICAgIHJldHVybiB0aGlzLmRvbS52YWwoKTtcclxuICB9XHJcblxyXG4gIHNldCB0ZXh0KHZhbHVlKSB7XHJcbiAgICB0aGlzLmRvbS52YWwodmFsdWUpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVGV4dElucHV0Q29udHJvbDtcclxuIiwiaW1wb3J0IEJ1dHRvbiBmcm9tICcuL0J1dHRvbic7XHJcbmltcG9ydCBBcHBNZWRpYXRvciBmcm9tICcuLi9OWC9BcHBNZWRpYXRvcic7XHJcblxyXG5jbGFzcyBUb2dnbGVCdXR0b24gZXh0ZW5kcyBCdXR0b24ge1xyXG4gIGNvbnN0cnVjdG9yKHRleHQsIGdyYXBoaWMpIHtcclxuICAgIHN1cGVyKHRleHQsIGdyYXBoaWMpO1xyXG5cclxuICAgIHRoaXMuZG9tLm9uKCdjbGljay5Ub2dnbGVCdXR0b24nLCAoKSA9PiB7XHJcbiAgICAgIEFwcE1lZGlhdG9yLnNlbmRVc2VySW5wdXQodGhpcywgKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiB7J3NlbGVjdGVkJzogdGhpcy5zZWxlY3RlZH1cclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGNyZWF0ZURvbSgpIHtcclxuICAgIGNvbnN0IGRvbSA9IHN1cGVyLmNyZWF0ZURvbSgpO1xyXG4gICAgZG9tLmFkZENsYXNzKCd1eC10b2dnbGUtYnV0dG9uJyk7XHJcbiAgICBkb20uYXR0cignZGF0YS10b2dnbGUnLCAnYnV0dG9uJyk7XHJcbiAgICByZXR1cm4gZG9tO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHNlbGVjdGVkKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZG9tLmhhc0NsYXNzKCdhY3RpdmUnKTtcclxuICB9XHJcblxyXG4gIHNldCBzZWxlY3RlZCh2YWx1ZSkge1xyXG4gICAgaWYgKHZhbHVlKSB7XHJcbiAgICAgIHRoaXMuZG9tLmFkZENsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgdGhpcy5kb20uYXR0cignYXJpYS1wcmVzc2VkJywgdHJ1ZSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmRvbS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgIHRoaXMuZG9tLmF0dHIoJ2FyaWEtcHJlc3NlZCcsIGZhbHNlKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRvZ2dsZUJ1dHRvbjtcclxuIiwiaW1wb3J0IE5vZGUgZnJvbSAnLi9Ob2RlJztcclxuaW1wb3J0IEJ1dHRvbiBmcm9tICcuL0J1dHRvbic7XHJcbmltcG9ydCBUb2dnbGVCdXR0b24gZnJvbSAnLi9Ub2dnbGVCdXR0b24nO1xyXG5pbXBvcnQgTGFiZWxlZCBmcm9tICcuL0xhYmVsZWQnO1xyXG5pbXBvcnQgTGFiZWwgZnJvbSAnLi9MYWJlbCc7XHJcbmltcG9ydCBDaGVja2JveCBmcm9tICcuL0NoZWNrYm94JztcclxuaW1wb3J0IENvbWJvYm94IGZyb20gJy4vQ29tYm9ib3gnO1xyXG5pbXBvcnQgTGlzdGJveCBmcm9tICcuL0xpc3Rib3gnO1xyXG5pbXBvcnQgUHJvZ3Jlc3NCYXIgZnJvbSAnLi9Qcm9ncmVzc0Jhcic7XHJcbmltcG9ydCBDb250YWluZXIgZnJvbSAnLi9Db250YWluZXInO1xyXG5pbXBvcnQgSEJveCBmcm9tICcuL0hCb3gnO1xyXG5pbXBvcnQgVkJveCBmcm9tICcuL1ZCb3gnO1xyXG5pbXBvcnQgTGlzdFZpZXcgZnJvbSAnLi9MaXN0Vmlldyc7XHJcbmltcG9ydCBBbmNob3JQYW5lIGZyb20gJy4vQW5jaG9yUGFuZSc7XHJcbmltcG9ydCBJbWFnZVZpZXcgZnJvbSAnLi9JbWFnZVZpZXcnO1xyXG5pbXBvcnQgVGV4dElucHV0Q29udHJvbCBmcm9tICcuL1RleHRJbnB1dENvbnRyb2wnO1xyXG5pbXBvcnQgVGV4dEZpZWxkIGZyb20gJy4vVGV4dEZpZWxkJztcclxuaW1wb3J0IFBhc3N3b3JkRmllbGQgZnJvbSAnLi9QYXNzd29yZEZpZWxkJztcclxuaW1wb3J0IFRleHRBcmVhIGZyb20gJy4vVGV4dEFyZWEnO1xyXG5pbXBvcnQgV2luZG93IGZyb20gJy4vV2luZG93JztcclxuaW1wb3J0IEljb24gZnJvbSAnLi9JY29uJztcclxuaW1wb3J0IEh5cGVybGluayBmcm9tICcuL0h5cGVybGluayc7XHJcbmltcG9ydCBTd2l0Y2ggZnJvbSAnLi9Td2l0Y2gnO1xyXG5cclxuXHJcbmltcG9ydCBGb250IGZyb20gJy4vcGFpbnQvRm9udCc7XHJcbmltcG9ydCBVdGlscyBmcm9tICcuL3V0aWwvVXRpbHMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIE5vZGUsIFdpbmRvdyxcclxuICBJbWFnZVZpZXcsXHJcbiAgQnV0dG9uLCBUb2dnbGVCdXR0b24sXHJcbiAgTGFiZWxlZCxcclxuICBMYWJlbCwgQ2hlY2tib3gsIENvbWJvYm94LCBMaXN0Ym94LCBQcm9ncmVzc0JhcixcclxuICBUZXh0SW5wdXRDb250cm9sLCBUZXh0RmllbGQsIFBhc3N3b3JkRmllbGQsIFRleHRBcmVhLFxyXG4gIENvbnRhaW5lciwgSEJveCwgVkJveCwgQW5jaG9yUGFuZSwgTGlzdFZpZXcsIEljb24sIEh5cGVybGluaywgU3dpdGNoLFxyXG5cclxuICBGb250XHJcbn1cclxuIiwiaW1wb3J0IENvbnRhaW5lciBmcm9tICcuL0NvbnRhaW5lcic7XHJcblxyXG5jbGFzcyBWQm94IGV4dGVuZHMgQ29udGFpbmVyIHtcclxuXHJcbiAgY29uc3RydWN0b3Iobm9kZXMpIHtcclxuICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XHJcblxyXG4gICAgdGhpcy5zcGFjaW5nID0gMDtcclxuICAgIHRoaXMuYWxpZ24gPSBbJ3RvcCcsICdsZWZ0J107XHJcbiAgfVxyXG5cclxuICBnZXQgZml0V2lkdGgoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5kb20uaGFzQ2xhc3MoJ3V4LW0tZml0LXdpZHRoJyk7XHJcbiAgfVxyXG5cclxuICBzZXQgZml0V2lkdGgodmFsdWUpIHtcclxuICAgIGlmICh2YWx1ZSkge1xyXG4gICAgICB0aGlzLmRvbS5hZGRDbGFzcygndXgtbS1maXQtd2lkdGgnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuZG9tLnJlbW92ZUNsYXNzKCd1eC1tLWZpdC13aWR0aCcpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZ2V0IHNwYWNpbmcoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fc3BhY2luZztcclxuICB9XHJcblxyXG4gIHNldCBzcGFjaW5nKHZhbHVlKSB7XHJcbiAgICB0aGlzLl9zcGFjaW5nID0gdmFsdWU7XHJcbiAgICBjb25zdCBzbG90cyA9IHRoaXMuZG9tLmZpbmQoJz4gZGl2Jyk7XHJcblxyXG4gICAgc2xvdHMuY3NzKCdtYXJnaW4tYm90dG9tJywgdmFsdWUgKyAncHgnKTtcclxuICAgIHNsb3RzLmxhc3QoKS5jc3MoJ21hcmdpbi1ib3R0b20nLCAwKTtcclxuICB9XHJcblxyXG4gIGNyZWF0ZURvbSgpIHtcclxuICAgIGNvbnN0IGRvbSA9IHN1cGVyLmNyZWF0ZURvbSgpO1xyXG4gICAgZG9tLmFkZENsYXNzKCd1eC12LWJveCcpO1xyXG4gICAgcmV0dXJuIGRvbTtcclxuICB9XHJcblxyXG4gIGNyZWF0ZVNsb3REb20ob2JqZWN0KSB7XHJcbiAgICBjb25zdCBkb20gPSBzdXBlci5jcmVhdGVTbG90RG9tKG9iamVjdCk7XHJcblxyXG4gICAgaWYgKHRoaXMuc3BhY2luZyAhPT0gMCkge1xyXG4gICAgICBjb25zdCBzbG90cyA9IHRoaXMuZG9tLmZpbmQoJz4gZGl2Jyk7XHJcbiAgICAgIHNsb3RzLmxhc3QoKS5jc3MoJ21hcmdpbi1ib3R0b20nLCB0aGlzLnNwYWNpbmcpO1xyXG4gICAgICBkb20uY3NzKCdtYXJnaW4tYm90dG9tJywgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGRvbTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFZCb3g7XHJcbiIsImltcG9ydCBOb2RlIGZyb20gJy4vTm9kZSc7XHJcbmltcG9ydCBDb250YWluZXIgZnJvbSBcIi4vQ29udGFpbmVyXCI7XHJcbmltcG9ydCBBcHBNZWRpYXRvciBmcm9tICcuLi9OWC9BcHBNZWRpYXRvcic7XHJcblxyXG5jbGFzcyBXaW5kb3cgZXh0ZW5kcyBDb250YWluZXIge1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICB0aGlzLmNvbnRlbnREb20gPSB0aGlzLmRvbS5maW5kKCcubW9kYWwtYm9keScpO1xyXG4gICAgdGhpcy5kb20ubW9kYWwoe1xyXG4gICAgICBiYWNrZHJvcDogJ3N0YXRpYycsXHJcbiAgICAgIGtleWJvYXJkOiBmYWxzZVxyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5kb20ub24oJ2hpZGUuYnMubW9kYWwuV2luZG93JywgKCkgPT4ge1xyXG4gICAgICBjb25zdCBkYXRhID0ge1xyXG4gICAgICAgIHZpc2libGU6IGZhbHNlLFxyXG4gICAgICAgIGNsb3NlOiB0cnVlLFxyXG4gICAgICB9O1xyXG5cclxuICAgICAgQXBwTWVkaWF0b3Iuc2VuZFVzZXJJbnB1dCh0aGlzLCBkYXRhKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGNlbnRlcmVkKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZG9tLmhhc0NsYXNzKCd1eC1jZW50ZXJlZCcpXHJcbiAgfVxyXG5cclxuICBzZXQgY2VudGVyZWQodmFsdWUpIHtcclxuICAgIGlmICh2YWx1ZSkge1xyXG4gICAgICB0aGlzLmRvbS5hZGRDbGFzcygndXgtY2VudGVyZWQnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuZG9tLnJlbW92ZUNsYXNzKCd1eC1jZW50ZXJlZCcpXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXQgY2xvc2FibGUoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5kb20uaGFzQ2xhc3MoJ3V4LWNsb3NhYmxlJylcclxuICB9XHJcblxyXG4gIHNldCBjbG9zYWJsZSh2YWx1ZSkge1xyXG4gICAgaWYgKHZhbHVlKSB7XHJcbiAgICAgIHRoaXMuZG9tLmFkZENsYXNzKCd1eC1jbG9zYWJsZScpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5kb20ucmVtb3ZlQ2xhc3MoJ3V4LWNsb3NhYmxlJyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXQgdGl0bGUoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5kb20uZmluZCgnLnV4LXdpbmRvdy10aXRsZScpLnRleHQoKTtcclxuICB9XHJcblxyXG4gIHNldCB0aXRsZSh2YWx1ZSkge1xyXG4gICAgcmV0dXJuIHRoaXMuZG9tLmZpbmQoJy51eC13aW5kb3ctdGl0bGUnKS50ZXh0KHZhbHVlKTtcclxuICB9XHJcblxyXG4gIGdldCB3aWR0aCgpIHtcclxuICAgIHJldHVybiB0aGlzLmRvbS5maW5kKCcubW9kYWwtZGlhbG9nJykud2lkdGgoKVxyXG4gIH1cclxuXHJcbiAgc2V0IHdpZHRoKHZhbHVlKSB7XHJcbiAgICB0aGlzLmRvbS5maW5kKCcubW9kYWwtZGlhbG9nJykud2lkdGgodmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGhlaWdodCgpIHtcclxuICAgIHJldHVybiB0aGlzLmRvbS5maW5kKCcubW9kYWwtZGlhbG9nJykuaGVpZ2h0KClcclxuICB9XHJcblxyXG4gIHNldCBoZWlnaHQodmFsdWUpIHtcclxuICAgIHRoaXMuZG9tLmZpbmQoJy5tb2RhbC1kaWFsb2cnKS5oZWlnaHQodmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGZvb3RlcigpIHtcclxuICAgIGNvbnN0IGZvb3RlciA9IHRoaXMuZG9tLmZpbmQoJy5tb2RhbC1mb290ZXIgPiAqJykuZmlyc3QoKTtcclxuICAgIHJldHVybiBOb2RlLmdldEZyb21Eb20oZm9vdGVyKTtcclxuICB9XHJcblxyXG4gIHNldCBmb290ZXIodmFsdWUpIHtcclxuICAgIGNvbnN0IGZvb3RlciA9IHRoaXMuZG9tLmZpbmQoJy5tb2RhbC1mb290ZXInKTtcclxuICAgIGZvb3Rlci5lbXB0eSgpO1xyXG5cclxuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIE5vZGUpIHtcclxuICAgICAgZm9vdGVyLmFwcGVuZCh2YWx1ZS5kb20pO1xyXG4gICAgICBmb290ZXIuc2hvdygpO1xyXG4gICAgfSBlbHNlIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xyXG4gICAgICBmb290ZXIuaGlkZSgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZm9vdGVyIHZhbHVlIG11c3QgYmUgTm9kZSBvciBudWxsLCBwYXNzZWQgXCIgKyAodHlwZW9mIHZhbHVlKSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBoaWRlKCkge1xyXG4gICAgdGhpcy5kb20ubW9kYWwoJ2hpZGUnKTtcclxuICB9XHJcblxyXG4gIHNob3coKSB7XHJcbiAgICB0aGlzLmRvbS5tb2RhbCgnc2hvdycpO1xyXG4gIH1cclxuXHJcbiAgZnJlZSgpIHtcclxuICAgIHRoaXMuaGlkZSgpO1xyXG5cclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICBzdXBlci5mcmVlKCk7XHJcbiAgICB9LCAzMDAwKTtcclxuXHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIGNyZWF0ZURvbSgpIHtcclxuICAgIGNvbnN0IGRvbSA9IGpRdWVyeSgnPGRpdiBjbGFzcz1cIm1vZGFsIGZhZGUgaW4gdXgtd2luZG93IHV4LWNsb3NhYmxlXCIgcm9sZT1cImRpYWxvZ1wiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxkaXYgY2xhc3M9XCJtb2RhbC1kaWFsb2dcIj48ZGl2IGNsYXNzPVwibW9kYWwtY29udGVudFwiPicgK1xyXG4gICAgICAnPGRpdiBjbGFzcz1cIm1vZGFsLWhlYWRlclwiPicgK1xyXG4gICAgICAgICc8aDUgY2xhc3M9XCJtb2RhbC10aXRsZSB1eC13aW5kb3ctdGl0bGVcIj48L2g1PicgK1xyXG4gICAgICAgICc8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImNsb3NlXCIgZGF0YS1kaXNtaXNzPVwibW9kYWxcIiBhcmlhLWhpZGRlbj1cIkNsb3NlXCI+w5c8L2J1dHRvbj4nICtcclxuICAgICAgJzwvZGl2PicgK1xyXG4gICAgICAnPGRpdiBjbGFzcz1cIm1vZGFsLWJvZHlcIj48L2Rpdj4nICtcclxuICAgICAgJzxkaXYgY2xhc3M9XCJtb2RhbC1mb290ZXJcIiBzdHlsZT1cImRpc3BsYXk6IG5vbmU7XCI+PC9kaXY+JyArXHJcbiAgICAgICc8L2Rpdj48L2Rpdj48L2Rpdj4nKTtcclxuXHJcbiAgICByZXR1cm4gZG9tO1xyXG4gIH1cclxuXHJcbiAgaW5uZXJOb2RlcygpIHtcclxuICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLmlubmVyTm9kZXMoKTtcclxuXHJcbiAgICBpZiAodGhpcy5mb290ZXIpIHtcclxuICAgICAgcmVzdWx0LnB1c2godGhpcy5mb290ZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBXaW5kb3c7XHJcbiIsImltcG9ydCBVdGlscyBmcm9tICcuLy4uL3V0aWwvVXRpbHMnO1xyXG5cclxuY2xhc3MgRm9udCB7XHJcbiAgY29uc3RydWN0b3IobmFtZSwgc2l6ZSkge1xyXG4gICAgdGhpcy5fZG9tID0gbnVsbDtcclxuICAgIHRoaXMubmFtZSA9IG5hbWUgfHwgJ3NlcmlmJztcclxuICAgIHRoaXMuc2l6ZSA9IHNpemUgfHwgMTI7XHJcbiAgfVxyXG5cclxuICBnZXQgbmFtZSgpIHtcclxuICAgIHJldHVybiB0aGlzLl9uYW1lO1xyXG4gIH1cclxuXHJcbiAgc2V0IG5hbWUodmFsdWUpIHtcclxuICAgIHRoaXMuX25hbWUgPSB2YWx1ZTtcclxuXHJcbiAgICBpZiAodGhpcy5fZG9tKSB7XHJcbiAgICAgIHRoaXMuX2RvbS5jc3MoJ2ZvbnQtZmFtaWx5JywgdmFsdWUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZ2V0IHNpemUoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fc2l6ZTtcclxuICB9XHJcblxyXG4gIHNldCBzaXplKHZhbHVlKSB7XHJcbiAgICB0aGlzLl9zaXplID0gdmFsdWUgfCAwO1xyXG5cclxuICAgIGlmICh0aGlzLl9kb20pIHtcclxuICAgICAgdGhpcy5fZG9tLmNzcygnZm9udC1zaXplJywgdmFsdWUgKyAncHgnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldCBib2xkKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2JvbGQgfCBmYWxzZTtcclxuICB9XHJcblxyXG4gIHNldCBib2xkKHZhbHVlKSB7XHJcbiAgICB0aGlzLl9ib2xkID0gdmFsdWUgfCBmYWxzZTtcclxuXHJcbiAgICBpZiAodGhpcy5fZG9tKSB7XHJcbiAgICAgIHRoaXMuX2RvbS5jc3MoJ2ZvbnQtd2VpZ2h0JywgdGhpcy5fYm9sZCA/ICdib2xkJyA6ICdub3JtYWwnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldCBpdGFsaWMoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5faXRhbGljIHwgZmFsc2U7XHJcbiAgfVxyXG5cclxuICBzZXQgaXRhbGljKHZhbHVlKSB7XHJcbiAgICB0aGlzLl9pdGFsaWMgPSB2YWx1ZSB8IGZhbHNlO1xyXG5cclxuICAgIGlmICh0aGlzLl9kb20pIHtcclxuICAgICAgdGhpcy5fZG9tLmNzcygnZm9udC1zdHlsZScsIHRoaXMuX2l0YWxpYyA/ICdpdGFsaWMnIDogJ25vcm1hbCcpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZ2V0IHVuZGVybGluZSgpIHtcclxuICAgIHJldHVybiB0aGlzLl91bmRlcmxpbmUgfCBmYWxzZTtcclxuICB9XHJcblxyXG4gIHNldCB1bmRlcmxpbmUodmFsdWUpIHtcclxuICAgIHRoaXMuX3VuZGVybGluZSA9IHZhbHVlIHwgZmFsc2U7XHJcblxyXG4gICAgaWYgKHRoaXMuX3VuZGVybGluZSkge1xyXG4gICAgICB0aGlzLl9saW5ldGhyb3VnaCA9IGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0aGlzLl9kb20pIHtcclxuICAgICAgdGhpcy5fZG9tLmNzcygndGV4dC1kZWNvcmF0aW9uJywgdGhpcy5fdW5kZXJsaW5lID8gJ3VuZGVybGluZScgOiAnbm9uZScpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZ2V0IGxpbmV0aHJvdWdoKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2xpbmV0aHJvdWdoIHwgZmFsc2U7XHJcbiAgfVxyXG5cclxuICBzZXQgbGluZXRocm91Z2godmFsdWUpIHtcclxuICAgIHRoaXMuX2xpbmV0aHJvdWdoID0gdmFsdWUgfCBmYWxzZTtcclxuXHJcbiAgICBpZiAodGhpcy5fbGluZXRocm91Z2gpIHtcclxuICAgICAgdGhpcy5fdW5kZXJsaW5lID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRoaXMuX2RvbSkge1xyXG4gICAgICB0aGlzLmRvbS5jc3MoJ3RleHQtZGVjb3JhdGlvbicsIHRoaXMuX2xpbmV0aHJvdWdoID8gJ2xpbmUtdGhyb3VnaCcgOiAnbm9uZScpXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXBwbHlUb0RvbShkb20sIGZvbnQpIHtcclxuICAgIGlmIChmb250IGluc3RhbmNlb2YgRm9udCkge1xyXG4gICAgICBkb20uY3NzKCdmb250LWZhbWlseScsIGZvbnQubmFtZSk7XHJcblxyXG4gICAgICBpZiAoZm9udC5zaXplKSB7XHJcbiAgICAgICAgZG9tLmNzcygnZm9udC1zaXplJywgZm9udC5zaXplKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBkb20uY3NzKCdmb250LXNpemUnLCAnJyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChmb250LmJvbGQpIHtcclxuICAgICAgICBkb20uY3NzKCdmb250LXdlaWdodCcsICdib2xkJyk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZG9tLmNzcygnZm9udC13ZWlnaHQnLCAnJyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChmb250Lml0YWxpYykge1xyXG4gICAgICAgIGRvbS5jc3MoJ2ZvbnQtc3R5bGUnLCAnaXRhbGljJyk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZG9tLmNzcygnZm9udC1zdHlsZScsICcnKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKGZvbnQudW5kZXJsaW5lKSB7XHJcbiAgICAgICAgZG9tLmNzcygndGV4dC1kZWNvcmF0aW9uJywgJ3VuZGVybGluZScpO1xyXG4gICAgICB9IGVsc2UgaWYgKGZvbnQubGluZXRocm91Z2gpIHtcclxuICAgICAgICBkb20uY3NzKCd0ZXh0LWRlY29yYXRpb24nLCAnbGluZS10aHJvdWdoJyk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZG9tLmNzcygndGV4dC1kZWNvcmF0aW9uJywgJycpO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBmb250ID09PSAnb2JqZWN0Jykge1xyXG4gICAgICBpZiAoZm9udC5oYXNPd25Qcm9wZXJ0eSgnbmFtZScpKSB7XHJcbiAgICAgICAgaWYgKGZvbnQubmFtZSkge1xyXG4gICAgICAgICAgZG9tLmNzcygnZm9udC1mYW1pbHknLCBmb250Lm5hbWUpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBkb20uY3NzKCdmb250LWZhbWlseScsICcnKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChmb250Lmhhc093blByb3BlcnR5KCdzaXplJykpIHtcclxuICAgICAgICBpZiAoZm9udC5zaXplKSB7XHJcbiAgICAgICAgICBkb20uY3NzKCdmb250LXNpemUnLCBmb250LnNpemUpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBkb20uY3NzKCdmb250LXNpemUnLCAnJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoZm9udC5oYXNPd25Qcm9wZXJ0eSgnYm9sZCcpKSB7XHJcbiAgICAgICAgaWYgKGZvbnQuYm9sZCkge1xyXG4gICAgICAgICAgZG9tLmNzcygnZm9udC13ZWlnaHQnLCAnYm9sZCcpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBkb20uY3NzKCdmb250LXdlaWdodCcsICcnKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChmb250Lmhhc093blByb3BlcnR5KCdpdGFsaWMnKSkge1xyXG4gICAgICAgIGlmIChmb250Lml0YWxpYykge1xyXG4gICAgICAgICAgZG9tLmNzcygnZm9udC1zdHlsZScsICdpdGFsaWMnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgZG9tLmNzcygnZm9udC1zdHlsZScsICcnKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChmb250Lmhhc093blByb3BlcnR5KCd1bmRlcmxpbmUnKSAmJiBmb250LnVuZGVybGluZSkge1xyXG4gICAgICAgIGRvbS5jc3MoJ3RleHQtZGVjb3JhdGlvbicsICd1bmRlcmxpbmUnKTtcclxuICAgICAgfSBlbHNlIGlmIChmb250Lmhhc093blByb3BlcnR5KCdsaW5ldGhyb3VnaCcpICYmIGZvbnQubGluZXRocm91Z2gpIHtcclxuICAgICAgICBkb20uY3NzKCd0ZXh0LWRlY29yYXRpb24nLCAnbGluZS10aHJvdWdoJyk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZG9tLmNzcygndGV4dC1kZWNvcmF0aW9uJywgJycpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZ2V0RnJvbURvbShkb20pIHtcclxuICAgIGlmIChkb20gaW5zdGFuY2VvZiBqUXVlcnkpIHtcclxuICAgICAgY29uc3QgZmFtaWx5ID0gZG9tLmNzcygnZm9udC1mYW1pbHknKTtcclxuICAgICAgY29uc3Qgc2l6ZSA9IFV0aWxzLnRvUHQoZG9tLmNzcygnZm9udC1zaXplJykpO1xyXG5cclxuICAgICAgY29uc3QgYm9sZCA9IGRvbS5jc3MoJ2ZvbnQtd2VpZ2h0JykgPT09ICdib2xkJztcclxuICAgICAgY29uc3QgaXRhbGljID0gZG9tLmNzcygnZm9udC1zdHlsZScpID09PSAnaXRhbGljJztcclxuICAgICAgY29uc3QgbGluZXRocm91Z2ggPSBkb20uY3NzKCd0ZXh0LWRlY29yYXRpb24nKSA9PT0gJ2xpbmUtdGhyb3VnaCc7XHJcbiAgICAgIGNvbnN0IHVuZGVybGluZSA9IGRvbS5jc3MoJ3RleHQtZGVjb3JhdGlvbicpID09PSAndW5kZXJsaW5lJztcclxuXHJcbiAgICAgIGNvbnN0IGZvbnQgPSBuZXcgRm9udChmYW1pbHksIHNpemUpO1xyXG5cclxuICAgICAgaWYgKGJvbGQpIGZvbnQuYm9sZCA9IHRydWU7XHJcbiAgICAgIGlmIChpdGFsaWMpIGZvbnQuaXRhbGljID0gdHJ1ZTtcclxuICAgICAgaWYgKHVuZGVybGluZSkgZm9udC51bmRlcmxpbmUgPSB0cnVlO1xyXG4gICAgICBpZiAobGluZXRocm91Z2gpIGZvbnQubGluZXRocm91Z2ggPSB0cnVlO1xyXG5cclxuICAgICAgZm9udC5fZG9tID0gZG9tO1xyXG4gICAgICByZXR1cm4gZm9udDtcclxuICAgIH1cclxuXHJcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdnZXRGcm9tRG9tKCk6IDEgYXJndW1lbnQgbXVzdCBiZSBqcXVlcnkgb2JqZWN0Jyk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGb250O1xyXG4iLCJcclxuXHJcbmNsYXNzIFV0aWxzXHJcbntcclxuICBzdGF0aWMgaXNFbGVtZW50KG9iaikge1xyXG4gICAgdHJ5IHtcclxuICAgICAgLy9Vc2luZyBXMyBET00yICh3b3JrcyBmb3IgRkYsIE9wZXJhIGFuZCBDaHJvbSlcclxuICAgICAgcmV0dXJuIG9iaiBpbnN0YW5jZW9mIEhUTUxFbGVtZW50O1xyXG4gICAgfSBjYXRjaChlKXtcclxuICAgICAgLy9Ccm93c2VycyBub3Qgc3VwcG9ydGluZyBXMyBET00yIGRvbid0IGhhdmUgSFRNTEVsZW1lbnQgYW5kXHJcbiAgICAgIC8vYW4gZXhjZXB0aW9uIGlzIHRocm93biBhbmQgd2UgZW5kIHVwIGhlcmUuIFRlc3Rpbmcgc29tZVxyXG4gICAgICAvL3Byb3BlcnRpZXMgdGhhdCBhbGwgZWxlbWVudHMgaGF2ZS4gKHdvcmtzIG9uIElFNylcclxuICAgICAgcmV0dXJuICh0eXBlb2Ygb2JqPT09XCJvYmplY3RcIikgJiZcclxuICAgICAgICAob2JqLm5vZGVUeXBlPT09MSkgJiYgKHR5cGVvZiBvYmouc3R5bGUgPT09IFwib2JqZWN0XCIpICYmXHJcbiAgICAgICAgKHR5cGVvZiBvYmoub3duZXJEb2N1bWVudCA9PT1cIm9iamVjdFwiKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyB0b1B0KGNzc1ZhbHVlKSB7XHJcbiAgICByZXR1cm4gcGFyc2VJbnQoY3NzVmFsdWUpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVXRpbHM7XHJcbiIsImltcG9ydCBOWCBmcm9tICcuL05YL05YJztcclxuaW1wb3J0IFVYIGZyb20gJy4vVVgvVVgnO1xyXG5cclxud2luZG93Lk5YID0gTlg7XHJcbndpbmRvdy5VWCA9IFVYO1xyXG5cclxuIl19"}